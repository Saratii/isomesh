<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1382" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1365.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1365.00"> </text><svg id="frames" x="10" width="1180" total_samples="462453"><g><title>`0x7FFDD4842A20 (26,390 samples, 5.71%)</title><rect x="0.0000%" y="1317" width="5.7065%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="26390"/><text x="0.2500%" y="1327.50">`0x7FFD..</text></g><g><title>`0x7FFDD4842A22 (48 samples, 0.01%)</title><rect x="5.7065%" y="1317" width="0.0104%" height="15" fill="rgb(217,0,24)" fg:x="26390" fg:w="48"/><text x="5.9565%" y="1327.50"></text></g><g><title>`0x7FFDD4842A59 (70 samples, 0.02%)</title><rect x="5.7176%" y="1301" width="0.0151%" height="15" fill="rgb(221,193,54)" fg:x="26441" fg:w="70"/><text x="5.9676%" y="1311.50"></text></g><g><title>`0x7FFDD496CF9C (433 samples, 0.09%)</title><rect x="5.7413%" y="1285" width="0.0936%" height="15" fill="rgb(248,212,6)" fg:x="26551" fg:w="433"/><text x="5.9913%" y="1295.50"></text></g><g><title>`0x7FFDD4842C4A (254 samples, 0.05%)</title><rect x="5.7800%" y="1269" width="0.0549%" height="15" fill="rgb(208,68,35)" fg:x="26730" fg:w="254"/><text x="6.0300%" y="1279.50"></text></g><g><title>`0x7FFDD4842A74 (532 samples, 0.12%)</title><rect x="5.7336%" y="1301" width="0.1150%" height="15" fill="rgb(232,128,0)" fg:x="26515" fg:w="532"/><text x="5.9836%" y="1311.50"></text></g><g><title>`0x7FFDD49124A3 (70 samples, 0.02%)</title><rect x="5.8568%" y="1301" width="0.0151%" height="15" fill="rgb(207,160,47)" fg:x="27085" fg:w="70"/><text x="6.1068%" y="1311.50"></text></g><g><title>`0x7FFDD49124B2 (386 samples, 0.08%)</title><rect x="5.8719%" y="1301" width="0.0835%" height="15" fill="rgb(228,23,34)" fg:x="27155" fg:w="386"/><text x="6.1219%" y="1311.50"></text></g><g><title>`0x7FFDD49124C3 (62 samples, 0.01%)</title><rect x="5.9554%" y="1301" width="0.0134%" height="15" fill="rgb(218,30,26)" fg:x="27541" fg:w="62"/><text x="6.2054%" y="1311.50"></text></g><g><title>`0x7FFDD49125C7 (898 samples, 0.19%)</title><rect x="5.9770%" y="1285" width="0.1942%" height="15" fill="rgb(220,122,19)" fg:x="27641" fg:w="898"/><text x="6.2270%" y="1295.50"></text></g><g><title>`0x7FFDD48B3F00 (192 samples, 0.04%)</title><rect x="6.1797%" y="1269" width="0.0415%" height="15" fill="rgb(250,228,42)" fg:x="28578" fg:w="192"/><text x="6.4297%" y="1279.50"></text></g><g><title>`0x7FFDD4932CAA (410 samples, 0.09%)</title><rect x="6.2223%" y="1253" width="0.0887%" height="15" fill="rgb(240,193,28)" fg:x="28775" fg:w="410"/><text x="6.4723%" y="1263.50"></text></g><g><title>`0x7FFDD4932CAE (602 samples, 0.13%)</title><rect x="6.3109%" y="1253" width="0.1302%" height="15" fill="rgb(216,20,37)" fg:x="29185" fg:w="602"/><text x="6.5609%" y="1263.50"></text></g><g><title>`0x7FFDD488F0FF (69 samples, 0.01%)</title><rect x="6.4487%" y="1237" width="0.0149%" height="15" fill="rgb(206,188,39)" fg:x="29822" fg:w="69"/><text x="6.6987%" y="1247.50"></text></g><g><title>`0x7FFDD4932CB3 (118 samples, 0.03%)</title><rect x="6.4411%" y="1253" width="0.0255%" height="15" fill="rgb(217,207,13)" fg:x="29787" fg:w="118"/><text x="6.6911%" y="1263.50"></text></g><g><title>`0x7FFDD488F13E (61 samples, 0.01%)</title><rect x="6.4709%" y="1237" width="0.0132%" height="15" fill="rgb(231,73,38)" fg:x="29925" fg:w="61"/><text x="6.7209%" y="1247.50"></text></g><g><title>`0x7FFDD4932CE9 (93 samples, 0.02%)</title><rect x="6.4679%" y="1253" width="0.0201%" height="15" fill="rgb(225,20,46)" fg:x="29911" fg:w="93"/><text x="6.7179%" y="1263.50"></text></g><g><title>`0x7FFDD4932D0F (84 samples, 0.02%)</title><rect x="6.4889%" y="1253" width="0.0182%" height="15" fill="rgb(210,31,41)" fg:x="30008" fg:w="84"/><text x="6.7389%" y="1263.50"></text></g><g><title>`0x7FFDD4932D1D (4,297 samples, 0.93%)</title><rect x="6.5070%" y="1253" width="0.9292%" height="15" fill="rgb(221,200,47)" fg:x="30092" fg:w="4297"/><text x="6.7570%" y="1263.50"></text></g><g><title>`0x7FFDD49A33D4 (4,288 samples, 0.93%)</title><rect x="6.5090%" y="1237" width="0.9272%" height="15" fill="rgb(226,26,5)" fg:x="30101" fg:w="4288"/><text x="6.7590%" y="1247.50"></text></g><g><title>`0x7FFDD48B3F05 (5,632 samples, 1.22%)</title><rect x="6.2212%" y="1269" width="1.2179%" height="15" fill="rgb(249,33,26)" fg:x="28770" fg:w="5632"/><text x="6.4712%" y="1279.50"></text></g><g><title>`0x7FFDD4860741 (1,381 samples, 0.30%)</title><rect x="7.4559%" y="1253" width="0.2986%" height="15" fill="rgb(235,183,28)" fg:x="34480" fg:w="1381"/><text x="7.7059%" y="1263.50"></text></g><g><title>`0x7FFDD488F0FF (86 samples, 0.02%)</title><rect x="7.7913%" y="1237" width="0.0186%" height="15" fill="rgb(221,5,38)" fg:x="36031" fg:w="86"/><text x="8.0413%" y="1247.50"></text></g><g><title>`0x7FFDD488F10E (188 samples, 0.04%)</title><rect x="7.8112%" y="1237" width="0.0407%" height="15" fill="rgb(247,18,42)" fg:x="36123" fg:w="188"/><text x="8.0612%" y="1247.50"></text></g><g><title>`0x7FFDD48BA046 (67 samples, 0.01%)</title><rect x="7.8572%" y="1221" width="0.0145%" height="15" fill="rgb(241,131,45)" fg:x="36336" fg:w="67"/><text x="8.1072%" y="1231.50"></text></g><g><title>`0x7FFDD48BA048 (59 samples, 0.01%)</title><rect x="7.8724%" y="1221" width="0.0128%" height="15" fill="rgb(249,31,29)" fg:x="36406" fg:w="59"/><text x="8.1224%" y="1231.50"></text></g><g><title>`0x7FFDD48BA054 (184 samples, 0.04%)</title><rect x="7.8884%" y="1221" width="0.0398%" height="15" fill="rgb(225,111,53)" fg:x="36480" fg:w="184"/><text x="8.1384%" y="1231.50"></text></g><g><title>`0x7FFDD4860746 (889 samples, 0.19%)</title><rect x="7.7545%" y="1253" width="0.1922%" height="15" fill="rgb(238,160,17)" fg:x="35861" fg:w="889"/><text x="8.0045%" y="1263.50"></text></g><g><title>`0x7FFDD488F113 (439 samples, 0.09%)</title><rect x="7.8518%" y="1237" width="0.0949%" height="15" fill="rgb(214,148,48)" fg:x="36311" fg:w="439"/><text x="8.1018%" y="1247.50"></text></g><g><title>`0x7FFDD48609C8 (432 samples, 0.09%)</title><rect x="7.9493%" y="1237" width="0.0934%" height="15" fill="rgb(232,36,49)" fg:x="36762" fg:w="432"/><text x="8.1993%" y="1247.50"></text></g><g><title>`0x7FFDD489034B (158 samples, 0.03%)</title><rect x="8.0458%" y="1221" width="0.0342%" height="15" fill="rgb(209,103,24)" fg:x="37208" fg:w="158"/><text x="8.2958%" y="1231.50"></text></g><g><title>`0x7FFDD489034F (144 samples, 0.03%)</title><rect x="8.0800%" y="1221" width="0.0311%" height="15" fill="rgb(229,88,8)" fg:x="37366" fg:w="144"/><text x="8.3300%" y="1231.50"></text></g><g><title>`0x7FFDD4890E0F (3,354 samples, 0.73%)</title><rect x="8.1191%" y="1221" width="0.7253%" height="15" fill="rgb(213,181,19)" fg:x="37547" fg:w="3354"/><text x="8.3691%" y="1231.50"></text></g><g><title>`0x7FFDD4890E74 (215 samples, 0.05%)</title><rect x="8.8526%" y="1205" width="0.0465%" height="15" fill="rgb(254,191,54)" fg:x="40939" fg:w="215"/><text x="9.1026%" y="1215.50"></text></g><g><title>`0x7FFDD4890E77 (187 samples, 0.04%)</title><rect x="8.8991%" y="1205" width="0.0404%" height="15" fill="rgb(241,83,37)" fg:x="41154" fg:w="187"/><text x="9.1491%" y="1215.50"></text></g><g><title>`0x7FFDD4890E8E (241 samples, 0.05%)</title><rect x="8.9406%" y="1205" width="0.0521%" height="15" fill="rgb(233,36,39)" fg:x="41346" fg:w="241"/><text x="9.1906%" y="1215.50"></text></g><g><title>`0x7FFDD4890E9C (228 samples, 0.05%)</title><rect x="8.9946%" y="1205" width="0.0493%" height="15" fill="rgb(226,3,54)" fg:x="41596" fg:w="228"/><text x="9.2446%" y="1215.50"></text></g><g><title>`0x7FFDD4890F4F (1,045 samples, 0.23%)</title><rect x="9.0597%" y="1205" width="0.2260%" height="15" fill="rgb(245,192,40)" fg:x="41897" fg:w="1045"/><text x="9.3097%" y="1215.50"></text></g><g><title>`0x7FFDD4891580 (234 samples, 0.05%)</title><rect x="9.2924%" y="1189" width="0.0506%" height="15" fill="rgb(238,167,29)" fg:x="42973" fg:w="234"/><text x="9.5424%" y="1199.50"></text></g><g><title>`0x7FFDD4891582 (187 samples, 0.04%)</title><rect x="9.3460%" y="1189" width="0.0404%" height="15" fill="rgb(232,182,51)" fg:x="43221" fg:w="187"/><text x="9.5960%" y="1199.50"></text></g><g><title>`0x7FFDD4891585 (214 samples, 0.05%)</title><rect x="9.3880%" y="1189" width="0.0463%" height="15" fill="rgb(231,60,39)" fg:x="43415" fg:w="214"/><text x="9.6380%" y="1199.50"></text></g><g><title>`0x7FFDD4891589 (177 samples, 0.04%)</title><rect x="9.4358%" y="1189" width="0.0383%" height="15" fill="rgb(208,69,12)" fg:x="43636" fg:w="177"/><text x="9.6858%" y="1199.50"></text></g><g><title>`0x7FFDD48915A0 (1,008 samples, 0.22%)</title><rect x="9.4758%" y="1189" width="0.2180%" height="15" fill="rgb(235,93,37)" fg:x="43821" fg:w="1008"/><text x="9.7258%" y="1199.50"></text></g><g><title>`0x7FFDD48915F0 (92 samples, 0.02%)</title><rect x="9.7020%" y="1189" width="0.0199%" height="15" fill="rgb(213,116,39)" fg:x="44867" fg:w="92"/><text x="9.9520%" y="1199.50"></text></g><g><title>`0x7FFDD4891610 (847 samples, 0.18%)</title><rect x="9.7219%" y="1189" width="0.1832%" height="15" fill="rgb(222,207,29)" fg:x="44959" fg:w="847"/><text x="9.9719%" y="1199.50"></text></g><g><title>`0x7FFDD4891615 (128 samples, 0.03%)</title><rect x="9.9050%" y="1189" width="0.0277%" height="15" fill="rgb(206,96,30)" fg:x="45806" fg:w="128"/><text x="10.1550%" y="1199.50"></text></g><g><title>`0x7FFDD48916D5 (106 samples, 0.02%)</title><rect x="9.9446%" y="1189" width="0.0229%" height="15" fill="rgb(218,138,4)" fg:x="45989" fg:w="106"/><text x="10.1946%" y="1199.50"></text></g><g><title>`0x7FFDD48916E1 (512 samples, 0.11%)</title><rect x="9.9679%" y="1189" width="0.1107%" height="15" fill="rgb(250,191,14)" fg:x="46097" fg:w="512"/><text x="10.2179%" y="1199.50"></text></g><g><title>`0x7FFDD4891740 (67 samples, 0.01%)</title><rect x="10.0812%" y="1189" width="0.0145%" height="15" fill="rgb(239,60,40)" fg:x="46621" fg:w="67"/><text x="10.3312%" y="1199.50"></text></g><g><title>`0x7FFDD48917B0 (93 samples, 0.02%)</title><rect x="10.1111%" y="1189" width="0.0201%" height="15" fill="rgb(206,27,48)" fg:x="46759" fg:w="93"/><text x="10.3611%" y="1199.50"></text></g><g><title>`0x7FFDD4891870 (91 samples, 0.02%)</title><rect x="10.1414%" y="1189" width="0.0197%" height="15" fill="rgb(225,35,8)" fg:x="46899" fg:w="91"/><text x="10.3914%" y="1199.50"></text></g><g><title>`0x7FFDD4891CAF (59 samples, 0.01%)</title><rect x="10.1805%" y="1189" width="0.0128%" height="15" fill="rgb(250,213,24)" fg:x="47080" fg:w="59"/><text x="10.4305%" y="1199.50"></text></g><g><title>`0x7FFDD4891D46 (136 samples, 0.03%)</title><rect x="10.2084%" y="1189" width="0.0294%" height="15" fill="rgb(247,123,22)" fg:x="47209" fg:w="136"/><text x="10.4584%" y="1199.50"></text></g><g><title>`0x7FFDD4890E0F (59 samples, 0.01%)</title><rect x="10.2601%" y="1173" width="0.0128%" height="15" fill="rgb(231,138,38)" fg:x="47448" fg:w="59"/><text x="10.5101%" y="1183.50"></text></g><g><title>`0x7FFDD4866344 (93 samples, 0.02%)</title><rect x="10.2789%" y="1141" width="0.0201%" height="15" fill="rgb(231,145,46)" fg:x="47535" fg:w="93"/><text x="10.5289%" y="1151.50"></text></g><g><title>`0x7FFDD4890E14 (192 samples, 0.04%)</title><rect x="10.2728%" y="1173" width="0.0415%" height="15" fill="rgb(251,118,11)" fg:x="47507" fg:w="192"/><text x="10.5228%" y="1183.50"></text></g><g><title>`0x7FFDD4891241 (172 samples, 0.04%)</title><rect x="10.2772%" y="1157" width="0.0372%" height="15" fill="rgb(217,147,25)" fg:x="47527" fg:w="172"/><text x="10.5272%" y="1167.50"></text></g><g><title>`0x7FFDD48923C9 (259 samples, 0.06%)</title><rect x="10.2590%" y="1189" width="0.0560%" height="15" fill="rgb(247,81,37)" fg:x="47443" fg:w="259"/><text x="10.5090%" y="1199.50"></text></g><g><title>`0x7FFDD4890F54 (4,812 samples, 1.04%)</title><rect x="9.2857%" y="1205" width="1.0405%" height="15" fill="rgb(209,12,38)" fg:x="42942" fg:w="4812"/><text x="9.5357%" y="1215.50"></text></g><g><title>`0x7FFDD4890E14 (6,883 samples, 1.49%)</title><rect x="8.8444%" y="1221" width="1.4884%" height="15" fill="rgb(227,1,9)" fg:x="40901" fg:w="6883"/><text x="9.0944%" y="1231.50"></text></g><g><title>`0x7FFDD48609CD (10,607 samples, 2.29%)</title><rect x="8.0428%" y="1237" width="2.2936%" height="15" fill="rgb(248,47,43)" fg:x="37194" fg:w="10607"/><text x="8.2928%" y="1247.50">`..</text></g><g><title>`0x7FFDD4860762 (11,080 samples, 2.40%)</title><rect x="7.9481%" y="1253" width="2.3959%" height="15" fill="rgb(221,10,30)" fg:x="36756" fg:w="11080"/><text x="8.1981%" y="1263.50">`0..</text></g><g><title>`0x7FFDD4891609 (93 samples, 0.02%)</title><rect x="10.4326%" y="1205" width="0.0201%" height="15" fill="rgb(210,229,1)" fg:x="48246" fg:w="93"/><text x="10.6826%" y="1215.50"></text></g><g><title>`0x7FFDD48916D5 (158 samples, 0.03%)</title><rect x="10.4553%" y="1205" width="0.0342%" height="15" fill="rgb(222,148,37)" fg:x="48351" fg:w="158"/><text x="10.7053%" y="1215.50"></text></g><g><title>`0x7FFDD48916E1 (309 samples, 0.07%)</title><rect x="10.4901%" y="1205" width="0.0668%" height="15" fill="rgb(234,67,33)" fg:x="48512" fg:w="309"/><text x="10.7401%" y="1215.50"></text></g><g><title>`0x7FFDD4891740 (58 samples, 0.01%)</title><rect x="10.5611%" y="1205" width="0.0125%" height="15" fill="rgb(247,98,35)" fg:x="48840" fg:w="58"/><text x="10.8111%" y="1215.50"></text></g><g><title>`0x7FFDD489174A (75 samples, 0.02%)</title><rect x="10.5736%" y="1205" width="0.0162%" height="15" fill="rgb(247,138,52)" fg:x="48898" fg:w="75"/><text x="10.8236%" y="1215.50"></text></g><g><title>`0x7FFDD48917B0 (154 samples, 0.03%)</title><rect x="10.5920%" y="1205" width="0.0333%" height="15" fill="rgb(213,79,30)" fg:x="48983" fg:w="154"/><text x="10.8420%" y="1215.50"></text></g><g><title>`0x7FFDD4891870 (124 samples, 0.03%)</title><rect x="10.6456%" y="1205" width="0.0268%" height="15" fill="rgb(246,177,23)" fg:x="49231" fg:w="124"/><text x="10.8956%" y="1215.50"></text></g><g><title>`0x7FFDD48918DF (115 samples, 0.02%)</title><rect x="10.6761%" y="1205" width="0.0249%" height="15" fill="rgb(230,62,27)" fg:x="49372" fg:w="115"/><text x="10.9261%" y="1215.50"></text></g><g><title>`0x7FFDD4891CAF (431 samples, 0.09%)</title><rect x="10.7293%" y="1205" width="0.0932%" height="15" fill="rgb(216,154,8)" fg:x="49618" fg:w="431"/><text x="10.9793%" y="1215.50"></text></g><g><title>`0x7FFDD48920EF (118 samples, 0.03%)</title><rect x="10.8314%" y="1205" width="0.0255%" height="15" fill="rgb(244,35,45)" fg:x="50090" fg:w="118"/><text x="11.0814%" y="1215.50"></text></g><g><title>`0x7FFDD48923B9 (59 samples, 0.01%)</title><rect x="10.8614%" y="1205" width="0.0128%" height="15" fill="rgb(251,115,12)" fg:x="50229" fg:w="59"/><text x="11.1114%" y="1215.50"></text></g><g><title>`0x7FFDD48BBFF2 (55 samples, 0.01%)</title><rect x="10.8623%" y="1189" width="0.0119%" height="15" fill="rgb(240,54,50)" fg:x="50233" fg:w="55"/><text x="11.1123%" y="1199.50"></text></g><g><title>`0x7FFDD4890E0F (112 samples, 0.02%)</title><rect x="10.8742%" y="1189" width="0.0242%" height="15" fill="rgb(233,84,52)" fg:x="50288" fg:w="112"/><text x="11.1242%" y="1199.50"></text></g><g><title>`0x7FFDD4866344 (272 samples, 0.06%)</title><rect x="10.9177%" y="1157" width="0.0588%" height="15" fill="rgb(207,117,47)" fg:x="50489" fg:w="272"/><text x="11.1677%" y="1167.50"></text></g><g><title>`0x7FFDD48669B0 (76 samples, 0.02%)</title><rect x="10.9948%" y="1157" width="0.0164%" height="15" fill="rgb(249,43,39)" fg:x="50846" fg:w="76"/><text x="11.2448%" y="1167.50"></text></g><g><title>`0x7FFDD48923C9 (770 samples, 0.17%)</title><rect x="10.8742%" y="1205" width="0.1665%" height="15" fill="rgb(209,38,44)" fg:x="50288" fg:w="770"/><text x="11.1242%" y="1215.50"></text></g><g><title>`0x7FFDD4890E14 (658 samples, 0.14%)</title><rect x="10.8984%" y="1189" width="0.1423%" height="15" fill="rgb(236,212,23)" fg:x="50400" fg:w="658"/><text x="11.1484%" y="1199.50"></text></g><g><title>`0x7FFDD4891241 (590 samples, 0.13%)</title><rect x="10.9131%" y="1173" width="0.1276%" height="15" fill="rgb(242,79,21)" fg:x="50468" fg:w="590"/><text x="11.1631%" y="1183.50"></text></g><g><title>`0x7FFDD4890F54 (3,109 samples, 0.67%)</title><rect x="10.3881%" y="1221" width="0.6723%" height="15" fill="rgb(211,96,35)" fg:x="48040" fg:w="3109"/><text x="10.6381%" y="1231.50"></text></g><g><title>`0x7FFDD4890E14 (3,196 samples, 0.69%)</title><rect x="10.3719%" y="1237" width="0.6911%" height="15" fill="rgb(253,215,40)" fg:x="47965" fg:w="3196"/><text x="10.6219%" y="1247.50"></text></g><g><title>`0x7FFDD486080F (3,214 samples, 0.69%)</title><rect x="10.3682%" y="1253" width="0.6950%" height="15" fill="rgb(211,81,21)" fg:x="47948" fg:w="3214"/><text x="10.6182%" y="1263.50"></text></g><g><title>`0x7FFDD49A8992 (82 samples, 0.02%)</title><rect x="11.0660%" y="1237" width="0.0177%" height="15" fill="rgb(208,190,38)" fg:x="51175" fg:w="82"/><text x="11.3160%" y="1247.50"></text></g><g><title>`0x7FFDD49A8A16 (109 samples, 0.02%)</title><rect x="11.0865%" y="1237" width="0.0236%" height="15" fill="rgb(235,213,38)" fg:x="51270" fg:w="109"/><text x="11.3365%" y="1247.50"></text></g><g><title>`0x7FFDD4860840 (249 samples, 0.05%)</title><rect x="11.0647%" y="1253" width="0.0538%" height="15" fill="rgb(237,122,38)" fg:x="51169" fg:w="249"/><text x="11.3147%" y="1263.50"></text></g><g><title>`0x7FFDD48BB3E6 (5,170 samples, 1.12%)</title><rect x="11.1278%" y="1237" width="1.1180%" height="15" fill="rgb(244,218,35)" fg:x="51461" fg:w="5170"/><text x="11.3778%" y="1247.50"></text></g><g><title>`0x7FFDD48BB3EB (81 samples, 0.02%)</title><rect x="12.2458%" y="1237" width="0.0175%" height="15" fill="rgb(240,68,47)" fg:x="56631" fg:w="81"/><text x="12.4958%" y="1247.50"></text></g><g><title>`0x7FFDD48BB64A (114 samples, 0.02%)</title><rect x="12.2730%" y="1237" width="0.0247%" height="15" fill="rgb(210,16,53)" fg:x="56757" fg:w="114"/><text x="12.5230%" y="1247.50"></text></g><g><title>`0x7FFDD48BB6AB (1,106 samples, 0.24%)</title><rect x="12.3024%" y="1237" width="0.2392%" height="15" fill="rgb(235,124,12)" fg:x="56893" fg:w="1106"/><text x="12.5524%" y="1247.50"></text></g><g><title>`0x7FFDD48BB6B0 (72 samples, 0.02%)</title><rect x="12.5416%" y="1237" width="0.0156%" height="15" fill="rgb(224,169,11)" fg:x="57999" fg:w="72"/><text x="12.7916%" y="1247.50"></text></g><g><title>`0x7FFDD48608DF (6,644 samples, 1.44%)</title><rect x="11.1207%" y="1253" width="1.4367%" height="15" fill="rgb(250,166,2)" fg:x="51428" fg:w="6644"/><text x="11.3707%" y="1263.50"></text></g><g><title>`0x7FFDD48608FC (122 samples, 0.03%)</title><rect x="12.5600%" y="1253" width="0.0264%" height="15" fill="rgb(242,216,29)" fg:x="58084" fg:w="122"/><text x="12.8100%" y="1263.50"></text></g><g><title>`0x7FFDD488F13E (198 samples, 0.04%)</title><rect x="12.5883%" y="1237" width="0.0428%" height="15" fill="rgb(230,116,27)" fg:x="58215" fg:w="198"/><text x="12.8383%" y="1247.50"></text></g><g><title>`0x7FFDD4860908 (228 samples, 0.05%)</title><rect x="12.5866%" y="1253" width="0.0493%" height="15" fill="rgb(228,99,48)" fg:x="58207" fg:w="228"/><text x="12.8366%" y="1263.50"></text></g><g><title>`0x7FFDD48B3F3B (23,987 samples, 5.19%)</title><rect x="7.4494%" y="1269" width="5.1869%" height="15" fill="rgb(253,11,6)" fg:x="34450" fg:w="23987"/><text x="7.6994%" y="1279.50">`0x7FF..</text></g><g><title>`0x7FFDD48BBF13 (2,602 samples, 0.56%)</title><rect x="12.6620%" y="1237" width="0.5627%" height="15" fill="rgb(247,143,39)" fg:x="58556" fg:w="2602"/><text x="12.9120%" y="1247.50"></text></g><g><title>`0x7FFDD48BBF28 (1,258 samples, 0.27%)</title><rect x="13.2260%" y="1237" width="0.2720%" height="15" fill="rgb(236,97,10)" fg:x="61164" fg:w="1258"/><text x="13.4760%" y="1247.50"></text></g><g><title>`0x7FFDD48BBF53 (71 samples, 0.02%)</title><rect x="13.5056%" y="1237" width="0.0154%" height="15" fill="rgb(233,208,19)" fg:x="62457" fg:w="71"/><text x="13.7556%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFCE (562 samples, 0.12%)</title><rect x="13.5255%" y="1237" width="0.1215%" height="15" fill="rgb(216,164,2)" fg:x="62549" fg:w="562"/><text x="13.7755%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFDC (204 samples, 0.04%)</title><rect x="13.6477%" y="1237" width="0.0441%" height="15" fill="rgb(220,129,5)" fg:x="63114" fg:w="204"/><text x="13.8977%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFE1 (164 samples, 0.04%)</title><rect x="13.6918%" y="1237" width="0.0355%" height="15" fill="rgb(242,17,10)" fg:x="63318" fg:w="164"/><text x="13.9418%" y="1247.50"></text></g><g><title>`0x7FFDD48AFAEE (5,031 samples, 1.09%)</title><rect x="12.6445%" y="1253" width="1.0879%" height="15" fill="rgb(242,107,0)" fg:x="58475" fg:w="5031"/><text x="12.8945%" y="1263.50"></text></g><g><title>`0x7FFDD48BC035 (62 samples, 0.01%)</title><rect x="13.7367%" y="1237" width="0.0134%" height="15" fill="rgb(251,28,31)" fg:x="63526" fg:w="62"/><text x="13.9867%" y="1247.50"></text></g><g><title>`0x7FFDD48AFB52 (77 samples, 0.02%)</title><rect x="13.7359%" y="1253" width="0.0167%" height="15" fill="rgb(233,223,10)" fg:x="63522" fg:w="77"/><text x="13.9859%" y="1263.50"></text></g><g><title>`0x7FFDD48BC035 (80 samples, 0.02%)</title><rect x="13.7627%" y="1237" width="0.0173%" height="15" fill="rgb(215,21,27)" fg:x="63646" fg:w="80"/><text x="14.0127%" y="1247.50"></text></g><g><title>`0x7FFDD48AFC0C (126 samples, 0.03%)</title><rect x="13.7590%" y="1253" width="0.0272%" height="15" fill="rgb(232,23,21)" fg:x="63629" fg:w="126"/><text x="14.0090%" y="1263.50"></text></g><g><title>`0x7FFDD48B3F91 (23,954 samples, 5.18%)</title><rect x="12.6374%" y="1269" width="5.1798%" height="15" fill="rgb(244,5,23)" fg:x="58442" fg:w="23954"/><text x="12.8874%" y="1279.50">`0x7FF..</text></g><g><title>`0x7FFDD48AFC39 (18,638 samples, 4.03%)</title><rect x="13.7869%" y="1253" width="4.0302%" height="15" fill="rgb(226,81,46)" fg:x="63758" fg:w="18638"/><text x="14.0369%" y="1263.50">`0x7..</text></g><g><title>`0x7FFDD49A32B4 (18,343 samples, 3.97%)</title><rect x="13.8507%" y="1237" width="3.9665%" height="15" fill="rgb(247,70,30)" fg:x="64053" fg:w="18343"/><text x="14.1007%" y="1247.50">`0x7..</text></g><g><title>`0x7FFDD48B3F96 (95 samples, 0.02%)</title><rect x="17.8172%" y="1269" width="0.0205%" height="15" fill="rgb(212,68,19)" fg:x="82396" fg:w="95"/><text x="18.0672%" y="1279.50"></text></g><g><title>`0x7FFDD48B3FC2 (730 samples, 0.16%)</title><rect x="17.8459%" y="1269" width="0.1579%" height="15" fill="rgb(240,187,13)" fg:x="82529" fg:w="730"/><text x="18.0959%" y="1279.50"></text></g><g><title>`0x7FFDD48B3FC6 (570 samples, 0.12%)</title><rect x="18.0038%" y="1269" width="0.1233%" height="15" fill="rgb(223,113,26)" fg:x="83259" fg:w="570"/><text x="18.2538%" y="1279.50"></text></g><g><title>`0x7FFDD48B43A6 (187 samples, 0.04%)</title><rect x="18.1999%" y="1253" width="0.0404%" height="15" fill="rgb(206,192,2)" fg:x="84166" fg:w="187"/><text x="18.4499%" y="1263.50"></text></g><g><title>`0x7FFDD48B43E7 (85 samples, 0.02%)</title><rect x="18.2488%" y="1253" width="0.0184%" height="15" fill="rgb(241,108,4)" fg:x="84392" fg:w="85"/><text x="18.4988%" y="1263.50"></text></g><g><title>`0x7FFDD48B4133 (442 samples, 0.10%)</title><rect x="18.1947%" y="1269" width="0.0956%" height="15" fill="rgb(247,173,49)" fg:x="84142" fg:w="442"/><text x="18.4447%" y="1279.50"></text></g><g><title>`0x7FFDD48B4136 (60 samples, 0.01%)</title><rect x="18.2903%" y="1269" width="0.0130%" height="15" fill="rgb(224,114,35)" fg:x="84584" fg:w="60"/><text x="18.5403%" y="1279.50"></text></g><g><title>`0x7FFDD49A0E84 (52 samples, 0.01%)</title><rect x="18.3411%" y="1237" width="0.0112%" height="15" fill="rgb(245,159,27)" fg:x="84819" fg:w="52"/><text x="18.5911%" y="1247.50"></text></g><g><title>`0x7FFDD48B4829 (136 samples, 0.03%)</title><rect x="18.3238%" y="1253" width="0.0294%" height="15" fill="rgb(245,172,44)" fg:x="84739" fg:w="136"/><text x="18.5738%" y="1263.50"></text></g><g><title>`0x7FFD7F875404 (61 samples, 0.01%)</title><rect x="18.3681%" y="1205" width="0.0132%" height="15" fill="rgb(236,23,11)" fg:x="84944" fg:w="61"/><text x="18.6181%" y="1215.50"></text></g><g><title>`0x7FFD7F87559F (97 samples, 0.02%)</title><rect x="18.3824%" y="1189" width="0.0210%" height="15" fill="rgb(205,117,38)" fg:x="85010" fg:w="97"/><text x="18.6324%" y="1199.50"></text></g><g><title>`0x7FFDD3778640 (114 samples, 0.02%)</title><rect x="18.4040%" y="1173" width="0.0247%" height="15" fill="rgb(237,72,25)" fg:x="85110" fg:w="114"/><text x="18.6540%" y="1183.50"></text></g><g><title>`0x7FFD7F8755AE (279 samples, 0.06%)</title><rect x="18.4036%" y="1189" width="0.0603%" height="15" fill="rgb(244,70,9)" fg:x="85108" fg:w="279"/><text x="18.6536%" y="1199.50"></text></g><g><title>`0x7FFDD3778648 (163 samples, 0.04%)</title><rect x="18.4287%" y="1173" width="0.0352%" height="15" fill="rgb(217,125,39)" fg:x="85224" fg:w="163"/><text x="18.6787%" y="1183.50"></text></g><g><title>`0x7FFD7F875917 (60 samples, 0.01%)</title><rect x="18.4667%" y="1173" width="0.0130%" height="15" fill="rgb(235,36,10)" fg:x="85400" fg:w="60"/><text x="18.7167%" y="1183.50"></text></g><g><title>`0x7FFDD211C320 (62 samples, 0.01%)</title><rect x="18.4819%" y="1173" width="0.0134%" height="15" fill="rgb(251,123,47)" fg:x="85470" fg:w="62"/><text x="18.7319%" y="1183.50"></text></g><g><title>`0x7FFDD211C325 (53 samples, 0.01%)</title><rect x="18.4953%" y="1173" width="0.0115%" height="15" fill="rgb(221,13,13)" fg:x="85532" fg:w="53"/><text x="18.7453%" y="1183.50"></text></g><g><title>`0x7FFDD4919840 (49 samples, 0.01%)</title><rect x="18.5089%" y="1157" width="0.0106%" height="15" fill="rgb(238,131,9)" fg:x="85595" fg:w="49"/><text x="18.7589%" y="1167.50"></text></g><g><title>`0x7FFDD4919849 (57 samples, 0.01%)</title><rect x="18.5195%" y="1157" width="0.0123%" height="15" fill="rgb(211,50,8)" fg:x="85644" fg:w="57"/><text x="18.7695%" y="1167.50"></text></g><g><title>`0x7FFDD211C346 (132 samples, 0.03%)</title><rect x="18.5072%" y="1173" width="0.0285%" height="15" fill="rgb(245,182,24)" fg:x="85587" fg:w="132"/><text x="18.7572%" y="1183.50"></text></g><g><title>`0x7FFDD211C357 (55 samples, 0.01%)</title><rect x="18.5359%" y="1173" width="0.0119%" height="15" fill="rgb(242,14,37)" fg:x="85720" fg:w="55"/><text x="18.7859%" y="1183.50"></text></g><g><title>`0x7FFD7F8755BB (388 samples, 0.08%)</title><rect x="18.4646%" y="1189" width="0.0839%" height="15" fill="rgb(246,228,12)" fg:x="85390" fg:w="388"/><text x="18.7146%" y="1199.50"></text></g><g><title>`0x7FFDD212658B (126 samples, 0.03%)</title><rect x="18.5686%" y="1157" width="0.0272%" height="15" fill="rgb(213,55,15)" fg:x="85871" fg:w="126"/><text x="18.8186%" y="1167.50"></text></g><g><title>`0x7FFD7F8755DB (211 samples, 0.05%)</title><rect x="18.5504%" y="1189" width="0.0456%" height="15" fill="rgb(209,9,3)" fg:x="85787" fg:w="211"/><text x="18.8004%" y="1199.50"></text></g><g><title>`0x7FFD7F875976 (169 samples, 0.04%)</title><rect x="18.5595%" y="1173" width="0.0365%" height="15" fill="rgb(230,59,30)" fg:x="85829" fg:w="169"/><text x="18.8095%" y="1183.50"></text></g><g><title>`0x7FFDD1BE6F50 (55 samples, 0.01%)</title><rect x="18.5991%" y="1173" width="0.0119%" height="15" fill="rgb(209,121,21)" fg:x="86012" fg:w="55"/><text x="18.8491%" y="1183.50"></text></g><g><title>`0x7FFDD1BF0050 (52 samples, 0.01%)</title><rect x="18.6110%" y="1173" width="0.0112%" height="15" fill="rgb(220,109,13)" fg:x="86067" fg:w="52"/><text x="18.8610%" y="1183.50"></text></g><g><title>`0x7FFDD4891870 (76 samples, 0.02%)</title><rect x="18.6687%" y="1125" width="0.0164%" height="15" fill="rgb(232,18,1)" fg:x="86334" fg:w="76"/><text x="18.9187%" y="1135.50"></text></g><g><title>`0x7FFDD49A97A3 (144 samples, 0.03%)</title><rect x="18.7040%" y="1109" width="0.0311%" height="15" fill="rgb(215,41,42)" fg:x="86497" fg:w="144"/><text x="18.9540%" y="1119.50"></text></g><g><title>`0x7FFDD4891CDD (152 samples, 0.03%)</title><rect x="18.7033%" y="1125" width="0.0329%" height="15" fill="rgb(224,123,36)" fg:x="86494" fg:w="152"/><text x="18.9533%" y="1135.50"></text></g><g><title>`0x7FFDD48923C9 (96 samples, 0.02%)</title><rect x="18.7474%" y="1125" width="0.0208%" height="15" fill="rgb(240,125,3)" fg:x="86698" fg:w="96"/><text x="18.9974%" y="1135.50"></text></g><g><title>`0x7FFDD4890E14 (96 samples, 0.02%)</title><rect x="18.7474%" y="1109" width="0.0208%" height="15" fill="rgb(205,98,50)" fg:x="86698" fg:w="96"/><text x="18.9974%" y="1119.50"></text></g><g><title>`0x7FFDD4891241 (92 samples, 0.02%)</title><rect x="18.7483%" y="1093" width="0.0199%" height="15" fill="rgb(205,185,37)" fg:x="86702" fg:w="92"/><text x="18.9983%" y="1103.50"></text></g><g><title>`0x7FFDD4890F54 (594 samples, 0.13%)</title><rect x="18.6406%" y="1141" width="0.1284%" height="15" fill="rgb(238,207,15)" fg:x="86204" fg:w="594"/><text x="18.8906%" y="1151.50"></text></g><g><title>`0x7FFDD4890E14 (642 samples, 0.14%)</title><rect x="18.6330%" y="1157" width="0.1388%" height="15" fill="rgb(213,199,42)" fg:x="86169" fg:w="642"/><text x="18.8830%" y="1167.50"></text></g><g><title>`0x7FFD7F8755ED (801 samples, 0.17%)</title><rect x="18.5991%" y="1189" width="0.1732%" height="15" fill="rgb(235,201,11)" fg:x="86012" fg:w="801"/><text x="18.8491%" y="1199.50"></text></g><g><title>`0x7FFDD1BF00A3 (669 samples, 0.14%)</title><rect x="18.6276%" y="1173" width="0.1447%" height="15" fill="rgb(207,46,11)" fg:x="86144" fg:w="669"/><text x="18.8776%" y="1183.50"></text></g><g><title>`0x7FFDD1BF5DE8 (57 samples, 0.01%)</title><rect x="18.7809%" y="1173" width="0.0123%" height="15" fill="rgb(241,35,35)" fg:x="86853" fg:w="57"/><text x="19.0309%" y="1183.50"></text></g><g><title>`0x7FFD7F87562F (75 samples, 0.02%)</title><rect x="18.7803%" y="1189" width="0.0162%" height="15" fill="rgb(243,32,47)" fg:x="86850" fg:w="75"/><text x="19.0303%" y="1199.50"></text></g><g><title>`0x7FFDD4886B80 (112 samples, 0.02%)</title><rect x="18.8004%" y="1173" width="0.0242%" height="15" fill="rgb(247,202,23)" fg:x="86943" fg:w="112"/><text x="19.0504%" y="1183.50"></text></g><g><title>`0x7FFD7F875637 (146 samples, 0.03%)</title><rect x="18.7967%" y="1189" width="0.0316%" height="15" fill="rgb(219,102,11)" fg:x="86926" fg:w="146"/><text x="19.0467%" y="1199.50"></text></g><g><title>`0x7FFD7F875409 (2,077 samples, 0.45%)</title><rect x="18.3813%" y="1205" width="0.4491%" height="15" fill="rgb(243,110,44)" fg:x="85005" fg:w="2077"/><text x="18.6313%" y="1215.50"></text></g><g><title>`0x7FFD7F880347 (2,154 samples, 0.47%)</title><rect x="18.3653%" y="1221" width="0.4658%" height="15" fill="rgb(222,74,54)" fg:x="84931" fg:w="2154"/><text x="18.6153%" y="1231.50"></text></g><g><title>`0x7FFD7F880395 (58 samples, 0.01%)</title><rect x="18.8315%" y="1221" width="0.0125%" height="15" fill="rgb(216,99,12)" fg:x="87087" fg:w="58"/><text x="19.0815%" y="1231.50"></text></g><g><title>`0x7FFDD1BE3D5A (68 samples, 0.01%)</title><rect x="18.8525%" y="1205" width="0.0147%" height="15" fill="rgb(226,22,26)" fg:x="87184" fg:w="68"/><text x="19.1025%" y="1215.50"></text></g><g><title>`0x7FFDD1BE3D7A (84 samples, 0.02%)</title><rect x="18.8705%" y="1205" width="0.0182%" height="15" fill="rgb(217,163,10)" fg:x="87267" fg:w="84"/><text x="19.1205%" y="1215.50"></text></g><g><title>`0x7FFDD4915BC9 (128 samples, 0.03%)</title><rect x="18.8964%" y="1189" width="0.0277%" height="15" fill="rgb(213,25,53)" fg:x="87387" fg:w="128"/><text x="19.1464%" y="1199.50"></text></g><g><title>`0x7FFDD1BE3D8C (156 samples, 0.03%)</title><rect x="18.8916%" y="1205" width="0.0337%" height="15" fill="rgb(252,105,26)" fg:x="87365" fg:w="156"/><text x="19.1416%" y="1215.50"></text></g><g><title>`0x7FFDD1BF7575 (155 samples, 0.03%)</title><rect x="18.9275%" y="1189" width="0.0335%" height="15" fill="rgb(220,39,43)" fg:x="87531" fg:w="155"/><text x="19.1775%" y="1199.50"></text></g><g><title>`0x7FFDD2128D18 (121 samples, 0.03%)</title><rect x="18.9349%" y="1173" width="0.0262%" height="15" fill="rgb(229,68,48)" fg:x="87565" fg:w="121"/><text x="19.1849%" y="1183.50"></text></g><g><title>`0x7FFDD2126584 (93 samples, 0.02%)</title><rect x="18.9660%" y="1173" width="0.0201%" height="15" fill="rgb(252,8,32)" fg:x="87709" fg:w="93"/><text x="19.2160%" y="1183.50"></text></g><g><title>`0x7FFDD484A450 (100 samples, 0.02%)</title><rect x="18.9866%" y="1157" width="0.0216%" height="15" fill="rgb(223,20,43)" fg:x="87804" fg:w="100"/><text x="19.2366%" y="1167.50"></text></g><g><title>`0x7FFDD48916E1 (62 samples, 0.01%)</title><rect x="19.0677%" y="1109" width="0.0134%" height="15" fill="rgb(229,81,49)" fg:x="88179" fg:w="62"/><text x="19.3177%" y="1119.50"></text></g><g><title>`0x7FFDD48917B0 (56 samples, 0.01%)</title><rect x="19.0904%" y="1109" width="0.0121%" height="15" fill="rgb(236,28,36)" fg:x="88284" fg:w="56"/><text x="19.3404%" y="1119.50"></text></g><g><title>`0x7FFDD4891870 (89 samples, 0.02%)</title><rect x="19.1083%" y="1109" width="0.0192%" height="15" fill="rgb(249,185,26)" fg:x="88367" fg:w="89"/><text x="19.3583%" y="1119.50"></text></g><g><title>`0x7FFDD48923C9 (78 samples, 0.02%)</title><rect x="19.1516%" y="1109" width="0.0169%" height="15" fill="rgb(249,174,33)" fg:x="88567" fg:w="78"/><text x="19.4016%" y="1119.50"></text></g><g><title>`0x7FFDD4890E14 (78 samples, 0.02%)</title><rect x="19.1516%" y="1093" width="0.0169%" height="15" fill="rgb(233,201,37)" fg:x="88567" fg:w="78"/><text x="19.4016%" y="1103.50"></text></g><g><title>`0x7FFDD4891241 (71 samples, 0.02%)</title><rect x="19.1531%" y="1077" width="0.0154%" height="15" fill="rgb(221,78,26)" fg:x="88574" fg:w="71"/><text x="19.4031%" y="1087.50"></text></g><g><title>`0x7FFDD4890F54 (524 samples, 0.11%)</title><rect x="19.0558%" y="1125" width="0.1133%" height="15" fill="rgb(250,127,30)" fg:x="88124" fg:w="524"/><text x="19.3058%" y="1135.50"></text></g><g><title>`0x7FFDD4890E14 (567 samples, 0.12%)</title><rect x="19.0473%" y="1141" width="0.1226%" height="15" fill="rgb(230,49,44)" fg:x="88085" fg:w="567"/><text x="19.2973%" y="1151.50"></text></g><g><title>`0x7FFDD484A4E9 (661 samples, 0.14%)</title><rect x="19.0274%" y="1157" width="0.1429%" height="15" fill="rgb(229,67,23)" fg:x="87993" fg:w="661"/><text x="19.2774%" y="1167.50"></text></g><g><title>`0x7FFDD484A763 (69 samples, 0.01%)</title><rect x="19.1801%" y="1141" width="0.0149%" height="15" fill="rgb(249,83,47)" fg:x="88699" fg:w="69"/><text x="19.4301%" y="1151.50"></text></g><g><title>`0x7FFDD4890F4F (71 samples, 0.02%)</title><rect x="19.2203%" y="1125" width="0.0154%" height="15" fill="rgb(215,43,3)" fg:x="88885" fg:w="71"/><text x="19.4703%" y="1135.50"></text></g><g><title>`0x7FFDD48915AC (59 samples, 0.01%)</title><rect x="19.2372%" y="1109" width="0.0128%" height="15" fill="rgb(238,154,13)" fg:x="88963" fg:w="59"/><text x="19.4872%" y="1119.50"></text></g><g><title>`0x7FFDD48915F0 (114 samples, 0.02%)</title><rect x="19.2510%" y="1109" width="0.0247%" height="15" fill="rgb(219,56,2)" fg:x="89027" fg:w="114"/><text x="19.5010%" y="1119.50"></text></g><g><title>`0x7FFDD4891609 (109 samples, 0.02%)</title><rect x="19.2761%" y="1109" width="0.0236%" height="15" fill="rgb(233,0,4)" fg:x="89143" fg:w="109"/><text x="19.5261%" y="1119.50"></text></g><g><title>`0x7FFDD48916D5 (84 samples, 0.02%)</title><rect x="19.3105%" y="1109" width="0.0182%" height="15" fill="rgb(235,30,7)" fg:x="89302" fg:w="84"/><text x="19.5605%" y="1119.50"></text></g><g><title>`0x7FFDD48916E1 (225 samples, 0.05%)</title><rect x="19.3287%" y="1109" width="0.0487%" height="15" fill="rgb(250,79,13)" fg:x="89386" fg:w="225"/><text x="19.5787%" y="1119.50"></text></g><g><title>`0x7FFDD4891740 (123 samples, 0.03%)</title><rect x="19.3784%" y="1109" width="0.0266%" height="15" fill="rgb(211,146,34)" fg:x="89616" fg:w="123"/><text x="19.6284%" y="1119.50"></text></g><g><title>`0x7FFDD48917B0 (100 samples, 0.02%)</title><rect x="19.4234%" y="1109" width="0.0216%" height="15" fill="rgb(228,22,38)" fg:x="89824" fg:w="100"/><text x="19.6734%" y="1119.50"></text></g><g><title>`0x7FFDD4891870 (100 samples, 0.02%)</title><rect x="19.4712%" y="1109" width="0.0216%" height="15" fill="rgb(235,168,5)" fg:x="90045" fg:w="100"/><text x="19.7212%" y="1119.50"></text></g><g><title>`0x7FFDD4891CAF (51 samples, 0.01%)</title><rect x="19.5187%" y="1109" width="0.0110%" height="15" fill="rgb(221,155,16)" fg:x="90265" fg:w="51"/><text x="19.7687%" y="1119.50"></text></g><g><title>`0x7FFDD48923C9 (57 samples, 0.01%)</title><rect x="19.5389%" y="1109" width="0.0123%" height="15" fill="rgb(215,215,53)" fg:x="90358" fg:w="57"/><text x="19.7889%" y="1119.50"></text></g><g><title>`0x7FFDD4890E14 (57 samples, 0.01%)</title><rect x="19.5389%" y="1093" width="0.0123%" height="15" fill="rgb(223,4,10)" fg:x="90358" fg:w="57"/><text x="19.7889%" y="1103.50"></text></g><g><title>`0x7FFDD4891241 (50 samples, 0.01%)</title><rect x="19.5404%" y="1077" width="0.0108%" height="15" fill="rgb(234,103,6)" fg:x="90365" fg:w="50"/><text x="19.7904%" y="1087.50"></text></g><g><title>`0x7FFDD4890F54 (1,507 samples, 0.33%)</title><rect x="19.2357%" y="1125" width="0.3259%" height="15" fill="rgb(227,97,0)" fg:x="88956" fg:w="1507"/><text x="19.4857%" y="1135.50"></text></g><g><title>`0x7FFDD4890E14 (1,633 samples, 0.35%)</title><rect x="19.2095%" y="1141" width="0.3531%" height="15" fill="rgb(234,150,53)" fg:x="88835" fg:w="1633"/><text x="19.4595%" y="1151.50"></text></g><g><title>`0x7FFDD484A515 (1,796 samples, 0.39%)</title><rect x="19.1749%" y="1157" width="0.3884%" height="15" fill="rgb(228,201,54)" fg:x="88675" fg:w="1796"/><text x="19.4249%" y="1167.50"></text></g><g><title>`0x7FFDD485175B (49 samples, 0.01%)</title><rect x="19.5715%" y="1141" width="0.0106%" height="15" fill="rgb(222,22,37)" fg:x="90509" fg:w="49"/><text x="19.8215%" y="1151.50"></text></g><g><title>`0x7FFDD484A560 (86 samples, 0.02%)</title><rect x="19.5642%" y="1157" width="0.0186%" height="15" fill="rgb(237,53,32)" fg:x="90475" fg:w="86"/><text x="19.8142%" y="1167.50"></text></g><g><title>`0x7FFDD484A571 (120 samples, 0.03%)</title><rect x="19.5832%" y="1157" width="0.0259%" height="15" fill="rgb(233,25,53)" fg:x="90563" fg:w="120"/><text x="19.8332%" y="1167.50"></text></g><g><title>`0x7FFDD485240E (193 samples, 0.04%)</title><rect x="19.6130%" y="1141" width="0.0417%" height="15" fill="rgb(210,40,34)" fg:x="90701" fg:w="193"/><text x="19.8630%" y="1151.50"></text></g><g><title>`0x7FFDD484A597 (224 samples, 0.05%)</title><rect x="19.6104%" y="1157" width="0.0484%" height="15" fill="rgb(241,220,44)" fg:x="90689" fg:w="224"/><text x="19.8604%" y="1167.50"></text></g><g><title>`0x7FFDD212658B (3,136 samples, 0.68%)</title><rect x="18.9861%" y="1173" width="0.6781%" height="15" fill="rgb(235,28,35)" fg:x="87802" fg:w="3136"/><text x="19.2361%" y="1183.50"></text></g><g><title>`0x7FFDD1BF7587 (3,252 samples, 0.70%)</title><rect x="18.9613%" y="1189" width="0.7032%" height="15" fill="rgb(210,56,17)" fg:x="87687" fg:w="3252"/><text x="19.2113%" y="1199.50"></text></g><g><title>`0x7FFDD48916D5 (159 samples, 0.03%)</title><rect x="19.7092%" y="1125" width="0.0344%" height="15" fill="rgb(224,130,29)" fg:x="91146" fg:w="159"/><text x="19.9592%" y="1135.50"></text></g><g><title>`0x7FFDD48916E1 (99 samples, 0.02%)</title><rect x="19.7438%" y="1125" width="0.0214%" height="15" fill="rgb(235,212,8)" fg:x="91306" fg:w="99"/><text x="19.9938%" y="1135.50"></text></g><g><title>`0x7FFDD489174A (50 samples, 0.01%)</title><rect x="19.7722%" y="1125" width="0.0108%" height="15" fill="rgb(223,33,50)" fg:x="91437" fg:w="50"/><text x="20.0222%" y="1135.50"></text></g><g><title>`0x7FFDD48917B0 (116 samples, 0.03%)</title><rect x="19.7838%" y="1125" width="0.0251%" height="15" fill="rgb(219,149,13)" fg:x="91491" fg:w="116"/><text x="20.0338%" y="1135.50"></text></g><g><title>`0x7FFDD4891870 (109 samples, 0.02%)</title><rect x="19.8165%" y="1125" width="0.0236%" height="15" fill="rgb(250,156,29)" fg:x="91642" fg:w="109"/><text x="20.0665%" y="1135.50"></text></g><g><title>`0x7FFDD48918DF (50 samples, 0.01%)</title><rect x="19.8407%" y="1125" width="0.0108%" height="15" fill="rgb(216,193,19)" fg:x="91754" fg:w="50"/><text x="20.0907%" y="1135.50"></text></g><g><title>`0x7FFDD4891CDD (203 samples, 0.04%)</title><rect x="19.8643%" y="1125" width="0.0439%" height="15" fill="rgb(216,135,14)" fg:x="91863" fg:w="203"/><text x="20.1143%" y="1135.50"></text></g><g><title>`0x7FFDD48BCBE2 (101 samples, 0.02%)</title><rect x="19.9283%" y="1109" width="0.0218%" height="15" fill="rgb(241,47,5)" fg:x="92159" fg:w="101"/><text x="20.1783%" y="1119.50"></text></g><g><title>`0x7FFDD48920EF (156 samples, 0.03%)</title><rect x="19.9274%" y="1125" width="0.0337%" height="15" fill="rgb(233,42,35)" fg:x="92155" fg:w="156"/><text x="20.1774%" y="1135.50"></text></g><g><title>`0x7FFDD4866344 (58 samples, 0.01%)</title><rect x="19.9687%" y="1077" width="0.0125%" height="15" fill="rgb(231,13,6)" fg:x="92346" fg:w="58"/><text x="20.2187%" y="1087.50"></text></g><g><title>`0x7FFDD48923C9 (183 samples, 0.04%)</title><rect x="19.9635%" y="1125" width="0.0396%" height="15" fill="rgb(207,181,40)" fg:x="92322" fg:w="183"/><text x="20.2135%" y="1135.50"></text></g><g><title>`0x7FFDD4890E14 (182 samples, 0.04%)</title><rect x="19.9638%" y="1109" width="0.0394%" height="15" fill="rgb(254,173,49)" fg:x="92323" fg:w="182"/><text x="20.2138%" y="1119.50"></text></g><g><title>`0x7FFDD4891241 (172 samples, 0.04%)</title><rect x="19.9659%" y="1093" width="0.0372%" height="15" fill="rgb(221,1,38)" fg:x="92333" fg:w="172"/><text x="20.2159%" y="1103.50"></text></g><g><title>`0x7FFDD4892E21 (74 samples, 0.02%)</title><rect x="20.0033%" y="1125" width="0.0160%" height="15" fill="rgb(206,124,46)" fg:x="92506" fg:w="74"/><text x="20.2533%" y="1135.50"></text></g><g><title>`0x7FFDD4890F54 (1,511 samples, 0.33%)</title><rect x="19.6941%" y="1141" width="0.3267%" height="15" fill="rgb(249,21,11)" fg:x="91076" fg:w="1511"/><text x="19.9441%" y="1151.50"></text></g><g><title>`0x7FFDD4890E14 (1,605 samples, 0.35%)</title><rect x="19.6846%" y="1157" width="0.3471%" height="15" fill="rgb(222,201,40)" fg:x="91032" fg:w="1605"/><text x="19.9346%" y="1167.50"></text></g><g><title>`0x7FFDD1BF00A3 (1,691 samples, 0.37%)</title><rect x="19.6708%" y="1173" width="0.3657%" height="15" fill="rgb(235,61,29)" fg:x="90968" fg:w="1691"/><text x="19.9208%" y="1183.50"></text></g><g><title>`0x7FFDD1BF759A (1,724 samples, 0.37%)</title><rect x="19.6647%" y="1189" width="0.3728%" height="15" fill="rgb(219,207,3)" fg:x="90940" fg:w="1724"/><text x="19.9147%" y="1199.50"></text></g><g><title>`0x7FFDD1BF75CC (125 samples, 0.03%)</title><rect x="20.0457%" y="1189" width="0.0270%" height="15" fill="rgb(222,56,46)" fg:x="92702" fg:w="125"/><text x="20.2957%" y="1199.50"></text></g><g><title>`0x7FFDD212658B (59 samples, 0.01%)</title><rect x="20.0600%" y="1173" width="0.0128%" height="15" fill="rgb(239,76,54)" fg:x="92768" fg:w="59"/><text x="20.3100%" y="1183.50"></text></g><g><title>`0x7FFDD48BBF53 (195 samples, 0.04%)</title><rect x="20.1158%" y="1125" width="0.0422%" height="15" fill="rgb(231,124,27)" fg:x="93026" fg:w="195"/><text x="20.3658%" y="1135.50"></text></g><g><title>`0x7FFDD1C3DBF2 (308 samples, 0.07%)</title><rect x="20.1015%" y="1141" width="0.0666%" height="15" fill="rgb(249,195,6)" fg:x="92960" fg:w="308"/><text x="20.3515%" y="1151.50"></text></g><g><title>`0x7FFDD1C3DC03 (147 samples, 0.03%)</title><rect x="20.1722%" y="1141" width="0.0318%" height="15" fill="rgb(237,174,47)" fg:x="93287" fg:w="147"/><text x="20.4222%" y="1151.50"></text></g><g><title>`0x7FFDD48BC035 (70 samples, 0.02%)</title><rect x="20.2098%" y="1125" width="0.0151%" height="15" fill="rgb(206,201,31)" fg:x="93461" fg:w="70"/><text x="20.4598%" y="1135.50"></text></g><g><title>`0x7FFDD1C3DC14 (119 samples, 0.03%)</title><rect x="20.2040%" y="1141" width="0.0257%" height="15" fill="rgb(231,57,52)" fg:x="93434" fg:w="119"/><text x="20.4540%" y="1151.50"></text></g><g><title>`0x7FFDD1C3DA98 (621 samples, 0.13%)</title><rect x="20.0959%" y="1157" width="0.1343%" height="15" fill="rgb(248,177,22)" fg:x="92934" fg:w="621"/><text x="20.3459%" y="1167.50"></text></g><g><title>`0x7FFDD48BBF53 (79 samples, 0.02%)</title><rect x="20.2611%" y="1125" width="0.0171%" height="15" fill="rgb(215,211,37)" fg:x="93698" fg:w="79"/><text x="20.5111%" y="1135.50"></text></g><g><title>`0x7FFDD1C3DB1F (194 samples, 0.04%)</title><rect x="20.2414%" y="1141" width="0.0420%" height="15" fill="rgb(241,128,51)" fg:x="93607" fg:w="194"/><text x="20.4914%" y="1151.50"></text></g><g><title>`0x7FFDD1C3DCA4 (72 samples, 0.02%)</title><rect x="20.2853%" y="1125" width="0.0156%" height="15" fill="rgb(227,165,31)" fg:x="93810" fg:w="72"/><text x="20.5353%" y="1135.50"></text></g><g><title>`0x7FFDD1C3DB82 (168 samples, 0.04%)</title><rect x="20.2851%" y="1141" width="0.0363%" height="15" fill="rgb(228,167,24)" fg:x="93809" fg:w="168"/><text x="20.5351%" y="1151.50"></text></g><g><title>`0x7FFDD1C3DAC7 (486 samples, 0.11%)</title><rect x="20.2338%" y="1157" width="0.1051%" height="15" fill="rgb(228,143,12)" fg:x="93572" fg:w="486"/><text x="20.4838%" y="1167.50"></text></g><g><title>`0x7FFDD1C3DB9B (79 samples, 0.02%)</title><rect x="20.3218%" y="1141" width="0.0171%" height="15" fill="rgb(249,149,8)" fg:x="93979" fg:w="79"/><text x="20.5718%" y="1151.50"></text></g><g><title>`0x7FFDD1C3D9D9 (1,188 samples, 0.26%)</title><rect x="20.0823%" y="1173" width="0.2569%" height="15" fill="rgb(243,35,44)" fg:x="92871" fg:w="1188"/><text x="20.3323%" y="1183.50"></text></g><g><title>`0x7FFDD1BF75D8 (1,238 samples, 0.27%)</title><rect x="20.0727%" y="1189" width="0.2677%" height="15" fill="rgb(246,89,9)" fg:x="92827" fg:w="1238"/><text x="20.3227%" y="1199.50"></text></g><g><title>`0x7FFDD1BE3D9F (6,560 samples, 1.42%)</title><rect x="18.9256%" y="1205" width="1.4185%" height="15" fill="rgb(233,213,13)" fg:x="87522" fg:w="6560"/><text x="19.1756%" y="1215.50"></text></g><g><title>`0x7FFDD1BF6DEB (6,925 samples, 1.50%)</title><rect x="18.8514%" y="1221" width="1.4974%" height="15" fill="rgb(233,141,41)" fg:x="87179" fg:w="6925"/><text x="19.1014%" y="1231.50"></text></g><g><title>`0x7FFDD208452E (53 samples, 0.01%)</title><rect x="20.3774%" y="1205" width="0.0115%" height="15" fill="rgb(239,167,4)" fg:x="94236" fg:w="53"/><text x="20.6274%" y="1215.50"></text></g><g><title>`0x7FFDD2084D2C (60 samples, 0.01%)</title><rect x="20.4010%" y="1189" width="0.0130%" height="15" fill="rgb(209,217,16)" fg:x="94345" fg:w="60"/><text x="20.6510%" y="1199.50"></text></g><g><title>`0x7FFDD2084D33 (91 samples, 0.02%)</title><rect x="20.4140%" y="1189" width="0.0197%" height="15" fill="rgb(219,88,35)" fg:x="94405" fg:w="91"/><text x="20.6640%" y="1199.50"></text></g><g><title>`0x7FFDD2084DC4 (40,928 samples, 8.85%)</title><rect x="20.4427%" y="1189" width="8.8502%" height="15" fill="rgb(220,193,23)" fg:x="94538" fg:w="40928"/><text x="20.6927%" y="1199.50">`0x7FFDD2084D..</text></g><g><title>`0x7FFDD49A3314 (40,851 samples, 8.83%)</title><rect x="20.4594%" y="1173" width="8.8335%" height="15" fill="rgb(230,90,52)" fg:x="94615" fg:w="40851"/><text x="20.7094%" y="1183.50">`0x7FFDD49A3..</text></g><g><title>`0x7FFDD2084DC9 (86 samples, 0.02%)</title><rect x="29.2929%" y="1189" width="0.0186%" height="15" fill="rgb(252,106,19)" fg:x="135466" fg:w="86"/><text x="29.5429%" y="1199.50"></text></g><g><title>`0x7FFDD493D880 (103 samples, 0.02%)</title><rect x="29.3215%" y="1173" width="0.0223%" height="15" fill="rgb(206,74,20)" fg:x="135598" fg:w="103"/><text x="29.5715%" y="1183.50"></text></g><g><title>`0x7FFDD493D884 (91 samples, 0.02%)</title><rect x="29.3437%" y="1173" width="0.0197%" height="15" fill="rgb(230,138,44)" fg:x="135701" fg:w="91"/><text x="29.5937%" y="1183.50"></text></g><g><title>`0x7FFDD4886BE8 (423 samples, 0.09%)</title><rect x="29.3710%" y="1157" width="0.0915%" height="15" fill="rgb(235,182,43)" fg:x="135827" fg:w="423"/><text x="29.6210%" y="1167.50"></text></g><g><title>`0x7FFDD4886BF3 (99 samples, 0.02%)</title><rect x="29.4625%" y="1157" width="0.0214%" height="15" fill="rgb(242,16,51)" fg:x="136250" fg:w="99"/><text x="29.7125%" y="1167.50"></text></g><g><title>`0x7FFDD2084DD6 (802 samples, 0.17%)</title><rect x="29.3115%" y="1189" width="0.1734%" height="15" fill="rgb(248,9,4)" fg:x="135552" fg:w="802"/><text x="29.5615%" y="1199.50"></text></g><g><title>`0x7FFDD493D889 (562 samples, 0.12%)</title><rect x="29.3634%" y="1173" width="0.1215%" height="15" fill="rgb(210,31,22)" fg:x="135792" fg:w="562"/><text x="29.6134%" y="1183.50"></text></g><g><title>`0x7FFDD2084653 (42,038 samples, 9.09%)</title><rect x="20.3971%" y="1205" width="9.0902%" height="15" fill="rgb(239,54,39)" fg:x="94327" fg:w="42038"/><text x="20.6471%" y="1215.50">`0x7FFDD20846..</text></g><g><title>`0x7FFDD215418D (80 samples, 0.02%)</title><rect x="29.5063%" y="1205" width="0.0173%" height="15" fill="rgb(230,99,41)" fg:x="136453" fg:w="80"/><text x="29.7563%" y="1215.50"></text></g><g><title>`0x7FFDD2153FFD (42,340 samples, 9.16%)</title><rect x="20.3707%" y="1221" width="9.1555%" height="15" fill="rgb(253,106,12)" fg:x="94205" fg:w="42340"/><text x="20.6207%" y="1231.50">`0x7FFDD2153F..</text></g><g><title>`0x7FFDD2154005 (305 samples, 0.07%)</title><rect x="29.5262%" y="1221" width="0.0660%" height="15" fill="rgb(213,46,41)" fg:x="136545" fg:w="305"/><text x="29.7762%" y="1231.50"></text></g><g><title>`0x7FFDD36D2305 (53 samples, 0.01%)</title><rect x="29.6000%" y="1221" width="0.0115%" height="15" fill="rgb(215,133,35)" fg:x="136886" fg:w="53"/><text x="29.8500%" y="1231.50"></text></g><g><title>`0x7FFDD4560C4C (82 samples, 0.02%)</title><rect x="29.6203%" y="1221" width="0.0177%" height="15" fill="rgb(213,28,5)" fg:x="136980" fg:w="82"/><text x="29.8703%" y="1231.50"></text></g><g><title>`0x7FFDD45611A9 (155 samples, 0.03%)</title><rect x="29.6467%" y="1189" width="0.0335%" height="15" fill="rgb(215,77,49)" fg:x="137102" fg:w="155"/><text x="29.8967%" y="1199.50"></text></g><g><title>`0x7FFDD4560A3D (197 samples, 0.04%)</title><rect x="29.6402%" y="1205" width="0.0426%" height="15" fill="rgb(248,100,22)" fg:x="137072" fg:w="197"/><text x="29.8902%" y="1215.50"></text></g><g><title>`0x7FFDD4560C7B (207 samples, 0.04%)</title><rect x="29.6385%" y="1221" width="0.0448%" height="15" fill="rgb(208,67,9)" fg:x="137064" fg:w="207"/><text x="29.8885%" y="1231.50"></text></g><g><title>`0x7FFDD4552E75 (52 samples, 0.01%)</title><rect x="29.6847%" y="1205" width="0.0112%" height="15" fill="rgb(219,133,21)" fg:x="137278" fg:w="52"/><text x="29.9347%" y="1215.50"></text></g><g><title>`0x7FFDD4560C96 (64 samples, 0.01%)</title><rect x="29.6837%" y="1221" width="0.0138%" height="15" fill="rgb(246,46,29)" fg:x="137273" fg:w="64"/><text x="29.9337%" y="1231.50"></text></g><g><title>`0x7FFDD4560D45 (69 samples, 0.01%)</title><rect x="29.7005%" y="1221" width="0.0149%" height="15" fill="rgb(246,185,52)" fg:x="137351" fg:w="69"/><text x="29.9505%" y="1231.50"></text></g><g><title>`0x7FFDD49A0EDE (52,534 samples, 11.36%)</title><rect x="18.3604%" y="1237" width="11.3599%" height="15" fill="rgb(252,136,11)" fg:x="84908" fg:w="52534"/><text x="18.6104%" y="1247.50">`0x7FFDD49A0EDE</text></g><g><title>`0x7FFDD49A0EE2 (101 samples, 0.02%)</title><rect x="29.7202%" y="1237" width="0.0218%" height="15" fill="rgb(219,138,53)" fg:x="137442" fg:w="101"/><text x="29.9702%" y="1247.50"></text></g><g><title>`0x7FFDD48B483E (52,725 samples, 11.40%)</title><rect x="18.3549%" y="1253" width="11.4012%" height="15" fill="rgb(211,51,23)" fg:x="84883" fg:w="52725"/><text x="18.6049%" y="1263.50">`0x7FFDD48B483E</text></g><g><title>`0x7FFDD49A0EE6 (65 samples, 0.01%)</title><rect x="29.7420%" y="1237" width="0.0141%" height="15" fill="rgb(247,221,28)" fg:x="137543" fg:w="65"/><text x="29.9920%" y="1247.50"></text></g><g><title>`0x7FFDD48B4851 (93 samples, 0.02%)</title><rect x="29.7561%" y="1253" width="0.0201%" height="15" fill="rgb(251,222,45)" fg:x="137608" fg:w="93"/><text x="30.0061%" y="1263.50"></text></g><g><title>`0x7FFDD48B4865 (171 samples, 0.04%)</title><rect x="29.7801%" y="1253" width="0.0370%" height="15" fill="rgb(217,162,53)" fg:x="137719" fg:w="171"/><text x="30.0301%" y="1263.50"></text></g><g><title>`0x7FFDD48B4889 (48 samples, 0.01%)</title><rect x="29.8173%" y="1253" width="0.0104%" height="15" fill="rgb(229,93,14)" fg:x="137891" fg:w="48"/><text x="30.0673%" y="1263.50"></text></g><g><title>`0x7FFDD48B48FE (49 samples, 0.01%)</title><rect x="29.8277%" y="1253" width="0.0106%" height="15" fill="rgb(209,67,49)" fg:x="137939" fg:w="49"/><text x="30.0777%" y="1263.50"></text></g><g><title>`0x7FFDD48B4147 (53,366 samples, 11.54%)</title><rect x="18.3065%" y="1269" width="11.5398%" height="15" fill="rgb(213,87,29)" fg:x="84659" fg:w="53366"/><text x="18.5565%" y="1279.50">`0x7FFDD48B4147</text></g><g><title>`0x7FFDD488E412 (171 samples, 0.04%)</title><rect x="29.8551%" y="1253" width="0.0370%" height="15" fill="rgb(205,151,52)" fg:x="138066" fg:w="171"/><text x="30.1051%" y="1263.50"></text></g><g><title>`0x7FFDD488E427 (105 samples, 0.02%)</title><rect x="29.8934%" y="1253" width="0.0227%" height="15" fill="rgb(253,215,39)" fg:x="138243" fg:w="105"/><text x="30.1434%" y="1263.50"></text></g><g><title>`0x7FFDD488E47A (68 samples, 0.01%)</title><rect x="29.9310%" y="1253" width="0.0147%" height="15" fill="rgb(221,220,41)" fg:x="138417" fg:w="68"/><text x="30.1810%" y="1263.50"></text></g><g><title>`0x7FFDD48B4152 (546 samples, 0.12%)</title><rect x="29.8530%" y="1269" width="0.1181%" height="15" fill="rgb(218,133,21)" fg:x="138056" fg:w="546"/><text x="30.1030%" y="1279.50"></text></g><g><title>`0x7FFDD48B4155 (189 samples, 0.04%)</title><rect x="29.9710%" y="1269" width="0.0409%" height="15" fill="rgb(221,193,43)" fg:x="138602" fg:w="189"/><text x="30.2210%" y="1279.50"></text></g><g><title>`0x7FFDD48B43A6 (189 samples, 0.04%)</title><rect x="30.0197%" y="1253" width="0.0409%" height="15" fill="rgb(240,128,52)" fg:x="138827" fg:w="189"/><text x="30.2697%" y="1263.50"></text></g><g><title>`0x7FFDD48B43E7 (86 samples, 0.02%)</title><rect x="30.0647%" y="1253" width="0.0186%" height="15" fill="rgb(253,114,12)" fg:x="139035" fg:w="86"/><text x="30.3147%" y="1263.50"></text></g><g><title>`0x7FFDD48B4468 (48 samples, 0.01%)</title><rect x="30.0917%" y="1253" width="0.0104%" height="15" fill="rgb(215,223,47)" fg:x="139160" fg:w="48"/><text x="30.3417%" y="1263.50"></text></g><g><title>`0x7FFDD48BB6AB (167 samples, 0.04%)</title><rect x="30.1064%" y="1237" width="0.0361%" height="15" fill="rgb(248,225,23)" fg:x="139228" fg:w="167"/><text x="30.3564%" y="1247.50"></text></g><g><title>`0x7FFDD48B44B8 (185 samples, 0.04%)</title><rect x="30.1038%" y="1253" width="0.0400%" height="15" fill="rgb(250,108,0)" fg:x="139216" fg:w="185"/><text x="30.3538%" y="1263.50"></text></g><g><title>`0x7FFDD492A39B (58 samples, 0.01%)</title><rect x="30.1497%" y="1205" width="0.0125%" height="15" fill="rgb(228,208,7)" fg:x="139428" fg:w="58"/><text x="30.3997%" y="1215.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::guard::windows::tls_callback (56 samples, 0.01%)</title><rect x="30.1501%" y="1189" width="0.0121%" height="15" fill="rgb(244,45,10)" fg:x="139430" fg:w="56"/><text x="30.4001%" y="1199.50"></text></g><g><title>`0x7FFDD49A0EDE (73 samples, 0.02%)</title><rect x="30.1468%" y="1221" width="0.0158%" height="15" fill="rgb(207,125,25)" fg:x="139415" fg:w="73"/><text x="30.3968%" y="1231.50"></text></g><g><title>`0x7FFDD48B483E (78 samples, 0.02%)</title><rect x="30.1462%" y="1237" width="0.0169%" height="15" fill="rgb(210,195,18)" fg:x="139412" fg:w="78"/><text x="30.3962%" y="1247.50"></text></g><g><title>`0x7FFDD48B44CE (100 samples, 0.02%)</title><rect x="30.1440%" y="1253" width="0.0216%" height="15" fill="rgb(249,80,12)" fg:x="139402" fg:w="100"/><text x="30.3940%" y="1263.50"></text></g><g><title>`0x7FFDD48B4262 (704 samples, 0.15%)</title><rect x="30.0175%" y="1269" width="0.1522%" height="15" fill="rgb(221,65,9)" fg:x="138817" fg:w="704"/><text x="30.2675%" y="1279.50"></text></g><g><title>`0x7FFDD4847A05 (54 samples, 0.01%)</title><rect x="30.1771%" y="1253" width="0.0117%" height="15" fill="rgb(235,49,36)" fg:x="139555" fg:w="54"/><text x="30.4271%" y="1263.50"></text></g><g><title>`0x7FFDD48BC014 (84 samples, 0.02%)</title><rect x="30.1923%" y="1237" width="0.0182%" height="15" fill="rgb(225,32,20)" fg:x="139625" fg:w="84"/><text x="30.4423%" y="1247.50"></text></g><g><title>`0x7FFDD48BC035 (94 samples, 0.02%)</title><rect x="30.2109%" y="1237" width="0.0203%" height="15" fill="rgb(215,141,46)" fg:x="139711" fg:w="94"/><text x="30.4609%" y="1247.50"></text></g><g><title>`0x7FFDD4847A2C (195 samples, 0.04%)</title><rect x="30.1903%" y="1253" width="0.0422%" height="15" fill="rgb(250,160,47)" fg:x="139616" fg:w="195"/><text x="30.4403%" y="1263.50"></text></g><g><title>`0x7FFDD48B4294 (265 samples, 0.06%)</title><rect x="30.1763%" y="1269" width="0.0573%" height="15" fill="rgb(216,222,40)" fg:x="139551" fg:w="265"/><text x="30.4263%" y="1279.50"></text></g><g><title>`0x7FFDD48BBF53 (136 samples, 0.03%)</title><rect x="30.2418%" y="1237" width="0.0294%" height="15" fill="rgb(234,217,39)" fg:x="139854" fg:w="136"/><text x="30.4918%" y="1247.50"></text></g><g><title>`0x7FFDD49305C5 (161 samples, 0.03%)</title><rect x="30.2398%" y="1253" width="0.0348%" height="15" fill="rgb(207,178,40)" fg:x="139845" fg:w="161"/><text x="30.4898%" y="1263.50"></text></g><g><title>`0x7FFDD48BC035 (69 samples, 0.01%)</title><rect x="30.2801%" y="1237" width="0.0149%" height="15" fill="rgb(221,136,13)" fg:x="140031" fg:w="69"/><text x="30.5301%" y="1247.50"></text></g><g><title>`0x7FFDD49305D8 (122 samples, 0.03%)</title><rect x="30.2759%" y="1253" width="0.0264%" height="15" fill="rgb(249,199,10)" fg:x="140012" fg:w="122"/><text x="30.5259%" y="1263.50"></text></g><g><title>`0x7FFDD48B4299 (10,460 samples, 2.26%)</title><rect x="30.2336%" y="1269" width="2.2619%" height="15" fill="rgb(249,222,13)" fg:x="139816" fg:w="10460"/><text x="30.4836%" y="1279.50">`..</text></g><g><title>`0x7FFDD49A33F4 (10,122 samples, 2.19%)</title><rect x="30.3066%" y="1253" width="2.1888%" height="15" fill="rgb(244,185,38)" fg:x="140154" fg:w="10122"/><text x="30.5566%" y="1263.50">`..</text></g><g><title>`0x7FFDD491262B (121,728 samples, 26.32%)</title><rect x="6.1781%" y="1285" width="26.3222%" height="15" fill="rgb(236,202,9)" fg:x="28571" fg:w="121728"/><text x="6.4281%" y="1295.50">`0x7FFDD491262B</text></g><g><title>`0x7FFDD491262D (47 samples, 0.01%)</title><rect x="32.5004%" y="1285" width="0.0102%" height="15" fill="rgb(250,229,37)" fg:x="150299" fg:w="47"/><text x="32.7504%" y="1295.50"></text></g><g><title>`0x7FFDD4912642 (2,398 samples, 0.52%)</title><rect x="32.5144%" y="1285" width="0.5185%" height="15" fill="rgb(206,174,23)" fg:x="150364" fg:w="2398"/><text x="32.7644%" y="1295.50"></text></g><g><title>`0x7FFDD49A6C84 (2,327 samples, 0.50%)</title><rect x="32.5298%" y="1269" width="0.5032%" height="15" fill="rgb(211,33,43)" fg:x="150435" fg:w="2327"/><text x="32.7798%" y="1279.50"></text></g><g><title>`0x7FFDD49124DA (125,189 samples, 27.07%)</title><rect x="5.9706%" y="1301" width="27.0706%" height="15" fill="rgb(245,58,50)" fg:x="27611" fg:w="125189"/><text x="6.2206%" y="1311.50">`0x7FFDD49124DA</text></g><g><title>`0x7FFDD4842A2E (126,390 samples, 27.33%)</title><rect x="5.7169%" y="1317" width="27.3303%" height="15" fill="rgb(244,68,36)" fg:x="26438" fg:w="126390"/><text x="5.9669%" y="1327.50">`0x7FFDD4842A2E</text></g><g><title>`0x7FFDD49A3A83 (50 samples, 0.01%)</title><rect x="33.0574%" y="1301" width="0.0108%" height="15" fill="rgb(232,229,15)" fg:x="152875" fg:w="50"/><text x="33.3074%" y="1311.50"></text></g><g><title>`0x7FFDD4842A38 (1,094 samples, 0.24%)</title><rect x="33.0570%" y="1317" width="0.2366%" height="15" fill="rgb(254,30,23)" fg:x="152873" fg:w="1094"/><text x="33.3070%" y="1327.50"></text></g><g><title>`0x7FFDD49A3A94 (1,034 samples, 0.22%)</title><rect x="33.0700%" y="1301" width="0.2236%" height="15" fill="rgb(235,160,14)" fg:x="152933" fg:w="1034"/><text x="33.3200%" y="1311.50"></text></g><g><title>`0x7FFDD4848D70 (15,495 samples, 3.35%)</title><rect x="33.2935%" y="1317" width="3.3506%" height="15" fill="rgb(212,155,44)" fg:x="153967" fg:w="15495"/><text x="33.5435%" y="1327.50">`0x..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_cubes_large(criterion::Criterion (73 samples, 0.02%)</title><rect x="36.6658%" y="1093" width="0.0158%" height="15" fill="rgb(226,2,50)" fg:x="169562" fg:w="73"/><text x="36.9158%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (73 samples, 0.02%)</title><rect x="36.6658%" y="1077" width="0.0158%" height="15" fill="rgb(234,177,6)" fg:x="169562" fg:w="73"/><text x="36.9158%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt; (73 samples, 0.02%)</title><rect x="36.6658%" y="1061" width="0.0158%" height="15" fill="rgb(217,24,9)" fg:x="169562" fg:w="73"/><text x="36.9158%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (73 samples, 0.02%)</title><rect x="36.6658%" y="1045" width="0.0158%" height="15" fill="rgb(220,13,46)" fg:x="169562" fg:w="73"/><text x="36.9158%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="1029" width="0.0154%" height="15" fill="rgb(239,221,27)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec (71 samples, 0.02%)</title><rect x="36.6662%" y="1013" width="0.0154%" height="15" fill="rgb(222,198,25)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (71 samples, 0.02%)</title><rect x="36.6662%" y="997" width="0.0154%" height="15" fill="rgb(211,99,13)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (71 samples, 0.02%)</title><rect x="36.6662%" y="981" width="0.0154%" height="15" fill="rgb(232,111,31)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="965" width="0.0154%" height="15" fill="rgb(245,82,37)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="949" width="0.0154%" height="15" fill="rgb(227,149,46)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="933" width="0.0154%" height="15" fill="rgb(218,36,50)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="917" width="0.0154%" height="15" fill="rgb(226,80,48)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="901" width="0.0154%" height="15" fill="rgb(238,224,15)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="885" width="0.0154%" height="15" fill="rgb(241,136,10)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::iter::impl$183::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="869" width="0.0154%" height="15" fill="rgb(208,32,45)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="853" width="0.0154%" height="15" fill="rgb(207,135,9)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_cubes_large::closure_env$0&gt;,tuple$ (71 samples, 0.02%)</title><rect x="36.6662%" y="837" width="0.0154%" height="15" fill="rgb(206,86,44)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (71 samples, 0.02%)</title><rect x="36.6662%" y="821" width="0.0154%" height="15" fill="rgb(245,177,15)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,mdc_bench::bench_bulk_cubes_large::closure$0::closure_env$0&gt; (71 samples, 0.02%)</title><rect x="36.6662%" y="805" width="0.0154%" height="15" fill="rgb(206,64,50)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_cubes_large::closure$0::closure$0 (71 samples, 0.02%)</title><rect x="36.6662%" y="789" width="0.0154%" height="15" fill="rgb(234,36,40)" fg:x="169564" fg:w="71"/><text x="36.9162%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::mdc_mesh_generation (65 samples, 0.01%)</title><rect x="36.6675%" y="773" width="0.0141%" height="15" fill="rgb(213,64,8)" fg:x="169570" fg:w="65"/><text x="36.9175%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt; &gt; (56 samples, 0.01%)</title><rect x="36.6855%" y="773" width="0.0121%" height="15" fill="rgb(210,75,36)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (56 samples, 0.01%)</title><rect x="36.6855%" y="757" width="0.0121%" height="15" fill="rgb(229,88,21)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="741" width="0.0121%" height="15" fill="rgb(252,204,47)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="725" width="0.0121%" height="15" fill="rgb(208,77,27)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="709" width="0.0121%" height="15" fill="rgb(221,76,26)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="693" width="0.0121%" height="15" fill="rgb(225,139,18)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (56 samples, 0.01%)</title><rect x="36.6855%" y="677" width="0.0121%" height="15" fill="rgb(230,137,11)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (56 samples, 0.01%)</title><rect x="36.6855%" y="661" width="0.0121%" height="15" fill="rgb(212,28,1)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (56 samples, 0.01%)</title><rect x="36.6855%" y="645" width="0.0121%" height="15" fill="rgb(248,164,17)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="655.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="36.6855%" y="629" width="0.0121%" height="15" fill="rgb(222,171,42)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;isomesh::mdc::octree::OctreeNode&gt; (56 samples, 0.01%)</title><rect x="36.6855%" y="613" width="0.0121%" height="15" fill="rgb(243,84,45)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="597" width="0.0121%" height="15" fill="rgb(252,49,23)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="607.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="581" width="0.0121%" height="15" fill="rgb(215,19,7)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="591.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="565" width="0.0121%" height="15" fill="rgb(238,81,41)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="575.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="549" width="0.0121%" height="15" fill="rgb(210,199,37)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="559.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (56 samples, 0.01%)</title><rect x="36.6855%" y="533" width="0.0121%" height="15" fill="rgb(244,192,49)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="543.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (56 samples, 0.01%)</title><rect x="36.6855%" y="517" width="0.0121%" height="15" fill="rgb(226,211,11)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="527.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (56 samples, 0.01%)</title><rect x="36.6855%" y="501" width="0.0121%" height="15" fill="rgb(236,162,54)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="511.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="36.6855%" y="485" width="0.0121%" height="15" fill="rgb(220,229,9)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="495.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;isomesh::mdc::octree::OctreeNode&gt; (56 samples, 0.01%)</title><rect x="36.6855%" y="469" width="0.0121%" height="15" fill="rgb(250,87,22)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="479.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="453" width="0.0121%" height="15" fill="rgb(239,43,17)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="463.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="437" width="0.0121%" height="15" fill="rgb(231,177,25)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="447.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="421" width="0.0121%" height="15" fill="rgb(219,179,1)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="431.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="405" width="0.0121%" height="15" fill="rgb(238,219,53)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="415.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (56 samples, 0.01%)</title><rect x="36.6855%" y="389" width="0.0121%" height="15" fill="rgb(232,167,36)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="399.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (56 samples, 0.01%)</title><rect x="36.6855%" y="373" width="0.0121%" height="15" fill="rgb(244,19,51)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="383.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (56 samples, 0.01%)</title><rect x="36.6855%" y="357" width="0.0121%" height="15" fill="rgb(224,6,22)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="367.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="36.6855%" y="341" width="0.0121%" height="15" fill="rgb(224,145,5)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="351.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;isomesh::mdc::octree::OctreeNode&gt; (56 samples, 0.01%)</title><rect x="36.6855%" y="325" width="0.0121%" height="15" fill="rgb(234,130,49)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="335.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="309" width="0.0121%" height="15" fill="rgb(254,6,2)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="319.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="293" width="0.0121%" height="15" fill="rgb(208,96,46)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="303.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="277" width="0.0121%" height="15" fill="rgb(239,3,39)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="287.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (56 samples, 0.01%)</title><rect x="36.6855%" y="261" width="0.0121%" height="15" fill="rgb(233,210,1)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="271.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (56 samples, 0.01%)</title><rect x="36.6855%" y="245" width="0.0121%" height="15" fill="rgb(244,137,37)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="255.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (56 samples, 0.01%)</title><rect x="36.6855%" y="229" width="0.0121%" height="15" fill="rgb(240,136,2)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="239.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (56 samples, 0.01%)</title><rect x="36.6855%" y="213" width="0.0121%" height="15" fill="rgb(239,18,37)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="223.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (56 samples, 0.01%)</title><rect x="36.6855%" y="197" width="0.0121%" height="15" fill="rgb(218,185,22)" fg:x="169653" fg:w="56"/><text x="36.9355%" y="207.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;isomesh::mdc::octree::OctreeNode&gt; (55 samples, 0.01%)</title><rect x="36.6857%" y="181" width="0.0119%" height="15" fill="rgb(225,218,4)" fg:x="169654" fg:w="55"/><text x="36.9357%" y="191.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (54 samples, 0.01%)</title><rect x="36.6859%" y="165" width="0.0117%" height="15" fill="rgb(230,182,32)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="175.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (54 samples, 0.01%)</title><rect x="36.6859%" y="149" width="0.0117%" height="15" fill="rgb(242,56,43)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="159.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (54 samples, 0.01%)</title><rect x="36.6859%" y="133" width="0.0117%" height="15" fill="rgb(233,99,24)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="143.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (54 samples, 0.01%)</title><rect x="36.6859%" y="117" width="0.0117%" height="15" fill="rgb(234,209,42)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="127.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (54 samples, 0.01%)</title><rect x="36.6859%" y="101" width="0.0117%" height="15" fill="rgb(227,7,12)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="111.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (54 samples, 0.01%)</title><rect x="36.6859%" y="85" width="0.0117%" height="15" fill="rgb(245,203,43)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="95.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (54 samples, 0.01%)</title><rect x="36.6859%" y="69" width="0.0117%" height="15" fill="rgb(238,205,33)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="79.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (54 samples, 0.01%)</title><rect x="36.6859%" y="53" width="0.0117%" height="15" fill="rgb(231,56,7)" fg:x="169655" fg:w="54"/><text x="36.9359%" y="63.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;isomesh::mdc::octree::OctreeNode&gt; (51 samples, 0.01%)</title><rect x="36.6865%" y="37" width="0.0110%" height="15" fill="rgb(244,186,29)" fg:x="169658" fg:w="51"/><text x="36.9365%" y="47.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (55 samples, 0.01%)</title><rect x="36.6976%" y="661" width="0.0119%" height="15" fill="rgb(234,111,31)" fg:x="169709" fg:w="55"/><text x="36.9476%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (55 samples, 0.01%)</title><rect x="36.6976%" y="645" width="0.0119%" height="15" fill="rgb(241,149,10)" fg:x="169709" fg:w="55"/><text x="36.9476%" y="655.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (55 samples, 0.01%)</title><rect x="36.6976%" y="629" width="0.0119%" height="15" fill="rgb(249,206,44)" fg:x="169709" fg:w="55"/><text x="36.9476%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::process_cell(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (55 samples, 0.01%)</title><rect x="36.6976%" y="613" width="0.0119%" height="15" fill="rgb(251,153,30)" fg:x="169709" fg:w="55"/><text x="36.9476%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="36.6976%" y="725" width="0.0145%" height="15" fill="rgb(239,152,38)" fg:x="169709" fg:w="67"/><text x="36.9476%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="36.6976%" y="709" width="0.0145%" height="15" fill="rgb(249,139,47)" fg:x="169709" fg:w="67"/><text x="36.9476%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="36.6976%" y="693" width="0.0145%" height="15" fill="rgb(244,64,35)" fg:x="169709" fg:w="67"/><text x="36.9476%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::process_cell(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (67 samples, 0.01%)</title><rect x="36.6976%" y="677" width="0.0145%" height="15" fill="rgb(216,46,15)" fg:x="169709" fg:w="67"/><text x="36.9476%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::calculate_indexes (87 samples, 0.02%)</title><rect x="36.6976%" y="757" width="0.0188%" height="15" fill="rgb(250,74,19)" fg:x="169709" fg:w="87"/><text x="36.9476%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::process_cell(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (87 samples, 0.02%)</title><rect x="36.6976%" y="741" width="0.0188%" height="15" fill="rgb(249,42,33)" fg:x="169709" fg:w="87"/><text x="36.9476%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (64 samples, 0.01%)</title><rect x="36.7164%" y="757" width="0.0138%" height="15" fill="rgb(242,149,17)" fg:x="169796" fg:w="64"/><text x="36.9664%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (61 samples, 0.01%)</title><rect x="36.7170%" y="741" width="0.0132%" height="15" fill="rgb(244,29,21)" fg:x="169799" fg:w="61"/><text x="36.9670%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (56 samples, 0.01%)</title><rect x="36.7181%" y="725" width="0.0121%" height="15" fill="rgb(220,130,37)" fg:x="169804" fg:w="56"/><text x="36.9681%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (49 samples, 0.01%)</title><rect x="36.7196%" y="709" width="0.0106%" height="15" fill="rgb(211,67,2)" fg:x="169811" fg:w="49"/><text x="36.9696%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$6::next(core::ops::range::Range (64 samples, 0.01%)</title><rect x="36.7484%" y="629" width="0.0138%" height="15" fill="rgb(235,68,52)" fg:x="169944" fg:w="64"/><text x="36.9984%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (64 samples, 0.01%)</title><rect x="36.7484%" y="613" width="0.0138%" height="15" fill="rgb(246,142,3)" fg:x="169944" fg:w="64"/><text x="36.9984%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cmp::impls::impl$58::lt (64 samples, 0.01%)</title><rect x="36.7484%" y="597" width="0.0138%" height="15" fill="rgb(241,25,7)" fg:x="169944" fg:w="64"/><text x="36.9984%" y="607.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_face(enum2$&lt;core::option::Option&lt;ref$&lt;isomesh::mdc::octree::OctreeNode&gt; &gt; &gt;[]*, int, int*, alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (56 samples, 0.01%)</title><rect x="36.7501%" y="581" width="0.0121%" height="15" fill="rgb(242,119,39)" fg:x="169952" fg:w="56"/><text x="37.0001%" y="591.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$6::next(core::ops::range::Range (100 samples, 0.02%)</title><rect x="36.7663%" y="613" width="0.0216%" height="15" fill="rgb(241,98,45)" fg:x="170027" fg:w="100"/><text x="37.0163%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (100 samples, 0.02%)</title><rect x="36.7663%" y="597" width="0.0216%" height="15" fill="rgb(254,28,30)" fg:x="170027" fg:w="100"/><text x="37.0163%" y="607.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cmp::impls::impl$58::lt (100 samples, 0.02%)</title><rect x="36.7663%" y="581" width="0.0216%" height="15" fill="rgb(241,142,54)" fg:x="170027" fg:w="100"/><text x="37.0163%" y="591.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_face(enum2$&lt;core::option::Option&lt;ref$&lt;isomesh::mdc::octree::OctreeNode&gt; &gt; &gt;[]*, int, int*, alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (90 samples, 0.02%)</title><rect x="36.7685%" y="565" width="0.0195%" height="15" fill="rgb(222,85,15)" fg:x="170037" fg:w="90"/><text x="37.0185%" y="575.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$6::next(core::ops::range::Range (82 samples, 0.02%)</title><rect x="36.7702%" y="549" width="0.0177%" height="15" fill="rgb(210,85,47)" fg:x="170045" fg:w="82"/><text x="37.0202%" y="559.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (82 samples, 0.02%)</title><rect x="36.7702%" y="533" width="0.0177%" height="15" fill="rgb(224,206,25)" fg:x="170045" fg:w="82"/><text x="37.0202%" y="543.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cmp::impls::impl$58::lt (82 samples, 0.02%)</title><rect x="36.7702%" y="517" width="0.0177%" height="15" fill="rgb(243,201,19)" fg:x="170045" fg:w="82"/><text x="37.0202%" y="527.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_edge(enum2$&lt;core::option::Option&lt;ref$&lt;isomesh::mdc::octree::OctreeNode&gt; &gt; &gt;[]*, int, int*, alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (81 samples, 0.02%)</title><rect x="36.7704%" y="501" width="0.0175%" height="15" fill="rgb(236,59,4)" fg:x="170046" fg:w="81"/><text x="37.0204%" y="511.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_indexes(enum2$&lt;core::option::Option&lt;ref$&lt;isomesh::mdc::octree::OctreeNode&gt; &gt; &gt;[]*, int, int*, alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (81 samples, 0.02%)</title><rect x="36.7704%" y="485" width="0.0175%" height="15" fill="rgb(254,179,45)" fg:x="170046" fg:w="81"/><text x="37.0204%" y="495.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (150 samples, 0.03%)</title><rect x="36.7624%" y="629" width="0.0324%" height="15" fill="rgb(226,14,10)" fg:x="170009" fg:w="150"/><text x="37.0124%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (227 samples, 0.05%)</title><rect x="36.7475%" y="645" width="0.0491%" height="15" fill="rgb(244,27,41)" fg:x="169940" fg:w="227"/><text x="36.9975%" y="655.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell_base (308 samples, 0.07%)</title><rect x="36.7302%" y="757" width="0.0666%" height="15" fill="rgb(235,35,32)" fg:x="169860" fg:w="308"/><text x="36.9802%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (308 samples, 0.07%)</title><rect x="36.7302%" y="741" width="0.0666%" height="15" fill="rgb(218,68,31)" fg:x="169860" fg:w="308"/><text x="36.9802%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (308 samples, 0.07%)</title><rect x="36.7302%" y="725" width="0.0666%" height="15" fill="rgb(207,120,37)" fg:x="169860" fg:w="308"/><text x="36.9802%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (308 samples, 0.07%)</title><rect x="36.7302%" y="709" width="0.0666%" height="15" fill="rgb(227,98,0)" fg:x="169860" fg:w="308"/><text x="36.9802%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (308 samples, 0.07%)</title><rect x="36.7302%" y="693" width="0.0666%" height="15" fill="rgb(207,7,3)" fg:x="169860" fg:w="308"/><text x="36.9802%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (290 samples, 0.06%)</title><rect x="36.7341%" y="677" width="0.0627%" height="15" fill="rgb(206,98,19)" fg:x="169878" fg:w="290"/><text x="36.9841%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (263 samples, 0.06%)</title><rect x="36.7399%" y="661" width="0.0569%" height="15" fill="rgb(217,5,26)" fg:x="169905" fg:w="263"/><text x="36.9899%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_base&lt;isomesh::mdc::sampler::SphereSampler&gt; (116 samples, 0.03%)</title><rect x="36.7968%" y="757" width="0.0251%" height="15" fill="rgb(235,190,38)" fg:x="170168" fg:w="116"/><text x="37.0468%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::SphereSampler&gt; (116 samples, 0.03%)</title><rect x="36.7968%" y="741" width="0.0251%" height="15" fill="rgb(247,86,24)" fg:x="170168" fg:w="116"/><text x="37.0468%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawn(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (95 samples, 0.02%)</title><rect x="36.8014%" y="725" width="0.0205%" height="15" fill="rgb(205,101,16)" fg:x="170189" fg:w="95"/><text x="37.0514%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;, ref$ (95 samples, 0.02%)</title><rect x="36.8014%" y="709" width="0.0205%" height="15" fill="rgb(246,168,33)" fg:x="170189" fg:w="95"/><text x="37.0514%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (94 samples, 0.02%)</title><rect x="36.8016%" y="693" width="0.0203%" height="15" fill="rgb(231,114,1)" fg:x="170190" fg:w="94"/><text x="37.0516%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (94 samples, 0.02%)</title><rect x="36.8016%" y="677" width="0.0203%" height="15" fill="rgb(207,184,53)" fg:x="170190" fg:w="94"/><text x="37.0516%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::new (94 samples, 0.02%)</title><rect x="36.8016%" y="661" width="0.0203%" height="15" fill="rgb(224,95,51)" fg:x="170190" fg:w="94"/><text x="37.0516%" y="671.50"></text></g><g><title>`0x7FFDD379313D (94 samples, 0.02%)</title><rect x="36.8016%" y="645" width="0.0203%" height="15" fill="rgb(212,188,45)" fg:x="170190" fg:w="94"/><text x="37.0516%" y="655.50"></text></g><g><title>`0x7FFDD2140ED9 (93 samples, 0.02%)</title><rect x="36.8018%" y="629" width="0.0201%" height="15" fill="rgb(223,154,38)" fg:x="170191" fg:w="93"/><text x="37.0518%" y="639.50"></text></g><g><title>`0x7FFDD49A4B44 (93 samples, 0.02%)</title><rect x="36.8018%" y="613" width="0.0201%" height="15" fill="rgb(251,22,52)" fg:x="170191" fg:w="93"/><text x="37.0518%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (52 samples, 0.01%)</title><rect x="36.8327%" y="549" width="0.0112%" height="15" fill="rgb(229,209,22)" fg:x="170334" fg:w="52"/><text x="37.0827%" y="559.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (52 samples, 0.01%)</title><rect x="36.8327%" y="533" width="0.0112%" height="15" fill="rgb(234,138,34)" fg:x="170334" fg:w="52"/><text x="37.0827%" y="543.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (52 samples, 0.01%)</title><rect x="36.8327%" y="517" width="0.0112%" height="15" fill="rgb(212,95,11)" fg:x="170334" fg:w="52"/><text x="37.0827%" y="527.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (52 samples, 0.01%)</title><rect x="36.8327%" y="501" width="0.0112%" height="15" fill="rgb(240,179,47)" fg:x="170334" fg:w="52"/><text x="37.0827%" y="511.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (47 samples, 0.01%)</title><rect x="36.8338%" y="485" width="0.0102%" height="15" fill="rgb(240,163,11)" fg:x="170339" fg:w="47"/><text x="37.0838%" y="495.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (47 samples, 0.01%)</title><rect x="36.8338%" y="469" width="0.0102%" height="15" fill="rgb(236,37,12)" fg:x="170339" fg:w="47"/><text x="37.0838%" y="479.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (47 samples, 0.01%)</title><rect x="36.8338%" y="453" width="0.0102%" height="15" fill="rgb(232,164,16)" fg:x="170339" fg:w="47"/><text x="37.0838%" y="463.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (47 samples, 0.01%)</title><rect x="36.8338%" y="437" width="0.0102%" height="15" fill="rgb(244,205,15)" fg:x="170339" fg:w="47"/><text x="37.0838%" y="447.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_spheres_large(criterion::Criterion (734 samples, 0.16%)</title><rect x="36.6855%" y="1093" width="0.1587%" height="15" fill="rgb(223,117,47)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (734 samples, 0.16%)</title><rect x="36.6855%" y="1077" width="0.1587%" height="15" fill="rgb(244,107,35)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt; (734 samples, 0.16%)</title><rect x="36.6855%" y="1061" width="0.1587%" height="15" fill="rgb(205,140,8)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (734 samples, 0.16%)</title><rect x="36.6855%" y="1045" width="0.1587%" height="15" fill="rgb(228,84,46)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="1029" width="0.1587%" height="15" fill="rgb(254,188,9)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec (734 samples, 0.16%)</title><rect x="36.6855%" y="1013" width="0.1587%" height="15" fill="rgb(206,112,54)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (734 samples, 0.16%)</title><rect x="36.6855%" y="997" width="0.1587%" height="15" fill="rgb(216,84,49)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (734 samples, 0.16%)</title><rect x="36.6855%" y="981" width="0.1587%" height="15" fill="rgb(214,194,35)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="965" width="0.1587%" height="15" fill="rgb(249,28,3)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="949" width="0.1587%" height="15" fill="rgb(222,56,52)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="933" width="0.1587%" height="15" fill="rgb(245,217,50)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="917" width="0.1587%" height="15" fill="rgb(213,201,24)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="901" width="0.1587%" height="15" fill="rgb(248,116,28)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="885" width="0.1587%" height="15" fill="rgb(219,72,43)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::iter::impl$183::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="869" width="0.1587%" height="15" fill="rgb(209,138,14)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="853" width="0.1587%" height="15" fill="rgb(222,18,33)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_large::closure_env$0&gt;,tuple$ (734 samples, 0.16%)</title><rect x="36.6855%" y="837" width="0.1587%" height="15" fill="rgb(213,199,7)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (734 samples, 0.16%)</title><rect x="36.6855%" y="821" width="0.1587%" height="15" fill="rgb(250,110,10)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,mdc_bench::bench_bulk_spheres_large::closure$0::closure_env$0&gt; (734 samples, 0.16%)</title><rect x="36.6855%" y="805" width="0.1587%" height="15" fill="rgb(248,123,6)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_spheres_large::closure$0::closure$0 (734 samples, 0.16%)</title><rect x="36.6855%" y="789" width="0.1587%" height="15" fill="rgb(206,91,31)" fg:x="169653" fg:w="734"/><text x="36.9355%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::mdc_mesh_generation (678 samples, 0.15%)</title><rect x="36.6976%" y="773" width="0.1466%" height="15" fill="rgb(211,154,13)" fg:x="169709" fg:w="678"/><text x="36.9476%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (103 samples, 0.02%)</title><rect x="36.8219%" y="757" width="0.0223%" height="15" fill="rgb(225,148,7)" fg:x="170284" fg:w="103"/><text x="37.0719%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (87 samples, 0.02%)</title><rect x="36.8254%" y="741" width="0.0188%" height="15" fill="rgb(220,160,43)" fg:x="170300" fg:w="87"/><text x="37.0754%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (87 samples, 0.02%)</title><rect x="36.8254%" y="725" width="0.0188%" height="15" fill="rgb(213,52,39)" fg:x="170300" fg:w="87"/><text x="37.0754%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (87 samples, 0.02%)</title><rect x="36.8254%" y="709" width="0.0188%" height="15" fill="rgb(243,137,7)" fg:x="170300" fg:w="87"/><text x="37.0754%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (87 samples, 0.02%)</title><rect x="36.8254%" y="693" width="0.0188%" height="15" fill="rgb(230,79,13)" fg:x="170300" fg:w="87"/><text x="37.0754%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (72 samples, 0.02%)</title><rect x="36.8286%" y="677" width="0.0156%" height="15" fill="rgb(247,105,23)" fg:x="170315" fg:w="72"/><text x="37.0786%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (72 samples, 0.02%)</title><rect x="36.8286%" y="661" width="0.0156%" height="15" fill="rgb(223,179,41)" fg:x="170315" fg:w="72"/><text x="37.0786%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (72 samples, 0.02%)</title><rect x="36.8286%" y="645" width="0.0156%" height="15" fill="rgb(218,9,34)" fg:x="170315" fg:w="72"/><text x="37.0786%" y="655.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (72 samples, 0.02%)</title><rect x="36.8286%" y="629" width="0.0156%" height="15" fill="rgb(222,106,8)" fg:x="170315" fg:w="72"/><text x="37.0786%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (62 samples, 0.01%)</title><rect x="36.8308%" y="613" width="0.0134%" height="15" fill="rgb(211,220,0)" fg:x="170325" fg:w="62"/><text x="37.0808%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (62 samples, 0.01%)</title><rect x="36.8308%" y="597" width="0.0134%" height="15" fill="rgb(229,52,16)" fg:x="170325" fg:w="62"/><text x="37.0808%" y="607.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (62 samples, 0.01%)</title><rect x="36.8308%" y="581" width="0.0134%" height="15" fill="rgb(212,155,18)" fg:x="170325" fg:w="62"/><text x="37.0808%" y="591.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::generate_vertex_buffer (62 samples, 0.01%)</title><rect x="36.8308%" y="565" width="0.0134%" height="15" fill="rgb(242,21,14)" fg:x="170325" fg:w="62"/><text x="37.0808%" y="575.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::new (77 samples, 0.02%)</title><rect x="36.8630%" y="661" width="0.0167%" height="15" fill="rgb(222,19,48)" fg:x="170474" fg:w="77"/><text x="37.1130%" y="671.50"></text></g><g><title>`0x7FFDD379313D (77 samples, 0.02%)</title><rect x="36.8630%" y="645" width="0.0167%" height="15" fill="rgb(232,45,27)" fg:x="170474" fg:w="77"/><text x="37.1130%" y="655.50"></text></g><g><title>`0x7FFDD2140ED9 (77 samples, 0.02%)</title><rect x="36.8630%" y="629" width="0.0167%" height="15" fill="rgb(249,103,42)" fg:x="170474" fg:w="77"/><text x="37.1130%" y="639.50"></text></g><g><title>`0x7FFDD49A4B44 (77 samples, 0.02%)</title><rect x="36.8630%" y="613" width="0.0167%" height="15" fill="rgb(246,81,33)" fg:x="170474" fg:w="77"/><text x="37.1130%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_base&lt;isomesh::mdc::sampler::SphereSampler&gt; (106 samples, 0.02%)</title><rect x="36.8572%" y="757" width="0.0229%" height="15" fill="rgb(252,33,42)" fg:x="170447" fg:w="106"/><text x="37.1072%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::SphereSampler&gt; (106 samples, 0.02%)</title><rect x="36.8572%" y="741" width="0.0229%" height="15" fill="rgb(209,212,41)" fg:x="170447" fg:w="106"/><text x="37.1072%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawn(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (83 samples, 0.02%)</title><rect x="36.8621%" y="725" width="0.0179%" height="15" fill="rgb(207,154,6)" fg:x="170470" fg:w="83"/><text x="37.1121%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;, ref$ (83 samples, 0.02%)</title><rect x="36.8621%" y="709" width="0.0179%" height="15" fill="rgb(223,64,47)" fg:x="170470" fg:w="83"/><text x="37.1121%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (83 samples, 0.02%)</title><rect x="36.8621%" y="693" width="0.0179%" height="15" fill="rgb(211,161,38)" fg:x="170470" fg:w="83"/><text x="37.1121%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (83 samples, 0.02%)</title><rect x="36.8621%" y="677" width="0.0179%" height="15" fill="rgb(219,138,40)" fg:x="170470" fg:w="83"/><text x="37.1121%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_spheres_small(criterion::Criterion (175 samples, 0.04%)</title><rect x="36.8442%" y="1093" width="0.0378%" height="15" fill="rgb(241,228,46)" fg:x="170387" fg:w="175"/><text x="37.0942%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (175 samples, 0.04%)</title><rect x="36.8442%" y="1077" width="0.0378%" height="15" fill="rgb(223,209,38)" fg:x="170387" fg:w="175"/><text x="37.0942%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt; (174 samples, 0.04%)</title><rect x="36.8444%" y="1061" width="0.0376%" height="15" fill="rgb(236,164,45)" fg:x="170388" fg:w="174"/><text x="37.0944%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (174 samples, 0.04%)</title><rect x="36.8444%" y="1045" width="0.0376%" height="15" fill="rgb(231,15,5)" fg:x="170388" fg:w="174"/><text x="37.0944%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="1029" width="0.0374%" height="15" fill="rgb(252,35,15)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec (173 samples, 0.04%)</title><rect x="36.8446%" y="1013" width="0.0374%" height="15" fill="rgb(248,181,18)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (173 samples, 0.04%)</title><rect x="36.8446%" y="997" width="0.0374%" height="15" fill="rgb(233,39,42)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (173 samples, 0.04%)</title><rect x="36.8446%" y="981" width="0.0374%" height="15" fill="rgb(238,110,33)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="965" width="0.0374%" height="15" fill="rgb(233,195,10)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="949" width="0.0374%" height="15" fill="rgb(254,105,3)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="933" width="0.0374%" height="15" fill="rgb(221,225,9)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="917" width="0.0374%" height="15" fill="rgb(224,227,45)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="901" width="0.0374%" height="15" fill="rgb(229,198,43)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="885" width="0.0374%" height="15" fill="rgb(206,209,35)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::iter::impl$183::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="869" width="0.0374%" height="15" fill="rgb(245,195,53)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="853" width="0.0374%" height="15" fill="rgb(240,92,26)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_bulk_spheres_small::closure_env$0&gt;,tuple$ (173 samples, 0.04%)</title><rect x="36.8446%" y="837" width="0.0374%" height="15" fill="rgb(207,40,23)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (173 samples, 0.04%)</title><rect x="36.8446%" y="821" width="0.0374%" height="15" fill="rgb(223,111,35)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,mdc_bench::bench_bulk_spheres_small::closure$0::closure_env$0&gt; (173 samples, 0.04%)</title><rect x="36.8446%" y="805" width="0.0374%" height="15" fill="rgb(229,147,28)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_bulk_spheres_small::closure$0::closure$0 (173 samples, 0.04%)</title><rect x="36.8446%" y="789" width="0.0374%" height="15" fill="rgb(211,29,28)" fg:x="170389" fg:w="173"/><text x="37.0946%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::mdc_mesh_generation (157 samples, 0.03%)</title><rect x="36.8481%" y="773" width="0.0339%" height="15" fill="rgb(228,72,33)" fg:x="170405" fg:w="157"/><text x="37.0981%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_single_cube_large(criterion::Criterion (63 samples, 0.01%)</title><rect x="36.8820%" y="1093" width="0.0136%" height="15" fill="rgb(205,214,31)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (63 samples, 0.01%)</title><rect x="36.8820%" y="1077" width="0.0136%" height="15" fill="rgb(224,111,15)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt; (63 samples, 0.01%)</title><rect x="36.8820%" y="1061" width="0.0136%" height="15" fill="rgb(253,21,26)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (63 samples, 0.01%)</title><rect x="36.8820%" y="1045" width="0.0136%" height="15" fill="rgb(245,139,43)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="1029" width="0.0136%" height="15" fill="rgb(252,170,7)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec (63 samples, 0.01%)</title><rect x="36.8820%" y="1013" width="0.0136%" height="15" fill="rgb(231,118,14)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (63 samples, 0.01%)</title><rect x="36.8820%" y="997" width="0.0136%" height="15" fill="rgb(238,83,0)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (63 samples, 0.01%)</title><rect x="36.8820%" y="981" width="0.0136%" height="15" fill="rgb(221,39,39)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="965" width="0.0136%" height="15" fill="rgb(222,119,46)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="949" width="0.0136%" height="15" fill="rgb(222,165,49)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="933" width="0.0136%" height="15" fill="rgb(219,113,52)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="917" width="0.0136%" height="15" fill="rgb(214,7,15)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="901" width="0.0136%" height="15" fill="rgb(235,32,4)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="885" width="0.0136%" height="15" fill="rgb(238,90,54)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::iter::impl$183::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="869" width="0.0136%" height="15" fill="rgb(213,208,19)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="853" width="0.0136%" height="15" fill="rgb(233,156,4)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_cube_large::closure_env$0&gt;,tuple$ (63 samples, 0.01%)</title><rect x="36.8820%" y="837" width="0.0136%" height="15" fill="rgb(207,194,5)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (63 samples, 0.01%)</title><rect x="36.8820%" y="821" width="0.0136%" height="15" fill="rgb(206,111,30)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,mdc_bench::bench_single_cube_large::closure$0::closure_env$0&gt; (63 samples, 0.01%)</title><rect x="36.8820%" y="805" width="0.0136%" height="15" fill="rgb(243,70,54)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_single_cube_large::closure$0::closure$0 (63 samples, 0.01%)</title><rect x="36.8820%" y="789" width="0.0136%" height="15" fill="rgb(242,28,8)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::mdc_mesh_generation&lt;isomesh::mdc::sampler::CuboidSampler&gt; (63 samples, 0.01%)</title><rect x="36.8820%" y="773" width="0.0136%" height="15" fill="rgb(219,106,18)" fg:x="170562" fg:w="63"/><text x="37.1320%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (70 samples, 0.02%)</title><rect x="36.9274%" y="565" width="0.0151%" height="15" fill="rgb(244,222,10)" fg:x="170772" fg:w="70"/><text x="37.1774%" y="575.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (94 samples, 0.02%)</title><rect x="36.9225%" y="581" width="0.0203%" height="15" fill="rgb(236,179,52)" fg:x="170749" fg:w="94"/><text x="37.1725%" y="591.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell_base (127 samples, 0.03%)</title><rect x="36.9155%" y="693" width="0.0275%" height="15" fill="rgb(213,23,39)" fg:x="170717" fg:w="127"/><text x="37.1655%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (127 samples, 0.03%)</title><rect x="36.9155%" y="677" width="0.0275%" height="15" fill="rgb(238,48,10)" fg:x="170717" fg:w="127"/><text x="37.1655%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (127 samples, 0.03%)</title><rect x="36.9155%" y="661" width="0.0275%" height="15" fill="rgb(251,196,23)" fg:x="170717" fg:w="127"/><text x="37.1655%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (127 samples, 0.03%)</title><rect x="36.9155%" y="645" width="0.0275%" height="15" fill="rgb(250,152,24)" fg:x="170717" fg:w="127"/><text x="37.1655%" y="655.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (127 samples, 0.03%)</title><rect x="36.9155%" y="629" width="0.0275%" height="15" fill="rgb(209,150,17)" fg:x="170717" fg:w="127"/><text x="37.1655%" y="639.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (120 samples, 0.03%)</title><rect x="36.9170%" y="613" width="0.0259%" height="15" fill="rgb(234,202,34)" fg:x="170724" fg:w="120"/><text x="37.1670%" y="623.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::cluster_cell (109 samples, 0.02%)</title><rect x="36.9194%" y="597" width="0.0236%" height="15" fill="rgb(253,148,53)" fg:x="170735" fg:w="109"/><text x="37.1694%" y="607.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_single_sphere_large(criterion::Criterion (254 samples, 0.05%)</title><rect x="36.8972%" y="1093" width="0.0549%" height="15" fill="rgb(218,129,16)" fg:x="170632" fg:w="254"/><text x="37.1472%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (254 samples, 0.05%)</title><rect x="36.8972%" y="1077" width="0.0549%" height="15" fill="rgb(216,85,19)" fg:x="170632" fg:w="254"/><text x="37.1472%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt; (254 samples, 0.05%)</title><rect x="36.8972%" y="1061" width="0.0549%" height="15" fill="rgb(235,228,7)" fg:x="170632" fg:w="254"/><text x="37.1472%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (254 samples, 0.05%)</title><rect x="36.8972%" y="1045" width="0.0549%" height="15" fill="rgb(245,175,0)" fg:x="170632" fg:w="254"/><text x="37.1472%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="1029" width="0.0547%" height="15" fill="rgb(208,168,36)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec (253 samples, 0.05%)</title><rect x="36.8974%" y="1013" width="0.0547%" height="15" fill="rgb(246,171,24)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (253 samples, 0.05%)</title><rect x="36.8974%" y="997" width="0.0547%" height="15" fill="rgb(215,142,24)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (253 samples, 0.05%)</title><rect x="36.8974%" y="981" width="0.0547%" height="15" fill="rgb(250,187,7)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="965" width="0.0547%" height="15" fill="rgb(228,66,33)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="949" width="0.0547%" height="15" fill="rgb(234,215,21)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="933" width="0.0547%" height="15" fill="rgb(222,191,20)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="917" width="0.0547%" height="15" fill="rgb(245,79,54)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="901" width="0.0547%" height="15" fill="rgb(240,10,37)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="885" width="0.0547%" height="15" fill="rgb(214,192,32)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::slice::iter::impl$183::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="869" width="0.0547%" height="15" fill="rgb(209,36,54)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="853" width="0.0547%" height="15" fill="rgb(220,10,11)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,mdc_bench::bench_single_sphere_large::closure_env$0&gt;,tuple$ (253 samples, 0.05%)</title><rect x="36.8974%" y="837" width="0.0547%" height="15" fill="rgb(221,106,17)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (253 samples, 0.05%)</title><rect x="36.8974%" y="821" width="0.0547%" height="15" fill="rgb(251,142,44)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,mdc_bench::bench_single_sphere_large::closure$0::closure_env$0&gt; (253 samples, 0.05%)</title><rect x="36.8974%" y="805" width="0.0547%" height="15" fill="rgb(238,13,15)" fg:x="170633" fg:w="253"/><text x="37.1474%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::bench_single_sphere_large::closure$0::closure$0 (252 samples, 0.05%)</title><rect x="36.8976%" y="789" width="0.0545%" height="15" fill="rgb(208,107,27)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (252 samples, 0.05%)</title><rect x="36.8976%" y="773" width="0.0545%" height="15" fill="rgb(205,136,37)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;array$ (252 samples, 0.05%)</title><rect x="36.8976%" y="757" width="0.0545%" height="15" fill="rgb(250,205,27)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;array$ (252 samples, 0.05%)</title><rect x="36.8976%" y="741" width="0.0545%" height="15" fill="rgb(210,80,43)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;array$ (252 samples, 0.05%)</title><rect x="36.8976%" y="725" width="0.0545%" height="15" fill="rgb(247,160,36)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::mdc::mdc_mesh_generation&lt;isomesh::mdc::sampler::SphereSampler&gt; (252 samples, 0.05%)</title><rect x="36.8976%" y="709" width="0.0545%" height="15" fill="rgb(234,13,49)" fg:x="170634" fg:w="252"/><text x="37.1476%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`__scrt_common_main_seh() (1,397 samples, 0.30%)</title><rect x="36.6569%" y="1285" width="0.3021%" height="15" fill="rgb(234,122,0)" fg:x="169521" fg:w="1397"/><text x="36.9069%" y="1295.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`invoke_main() (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1269" width="0.3008%" height="15" fill="rgb(207,146,38)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1279.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`main (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1253" width="0.3008%" height="15" fill="rgb(207,177,25)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1263.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::rt::lang_start_internal (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1237" width="0.3008%" height="15" fill="rgb(211,178,42)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1247.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panic::catch_unwind (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1221" width="0.3008%" height="15" fill="rgb(230,69,54)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1231.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1205" width="0.3008%" height="15" fill="rgb(214,135,41)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1215.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind::do_call (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1189" width="0.3008%" height="15" fill="rgb(237,67,25)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1199.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::rt::lang_start_internal::closure$0 (1,391 samples, 0.30%)</title><rect x="36.6582%" y="1173" width="0.3008%" height="15" fill="rgb(222,189,50)" fg:x="169527" fg:w="1391"/><text x="36.9082%" y="1183.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (1,390 samples, 0.30%)</title><rect x="36.6584%" y="1157" width="0.3006%" height="15" fill="rgb(245,148,34)" fg:x="169528" fg:w="1390"/><text x="36.9084%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,390 samples, 0.30%)</title><rect x="36.6584%" y="1141" width="0.3006%" height="15" fill="rgb(222,29,6)" fg:x="169528" fg:w="1390"/><text x="36.9084%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::main (1,390 samples, 0.30%)</title><rect x="36.6584%" y="1125" width="0.3006%" height="15" fill="rgb(221,189,43)" fg:x="169528" fg:w="1390"/><text x="36.9084%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`mdc_bench::benches (1,389 samples, 0.30%)</title><rect x="36.6586%" y="1109" width="0.3004%" height="15" fill="rgb(207,36,27)" fg:x="169529" fg:w="1389"/><text x="36.9086%" y="1119.50"></text></g><g><title>`0x7FFDD48C1358 (48 samples, 0.01%)</title><rect x="37.0570%" y="1269" width="0.0104%" height="15" fill="rgb(217,90,24)" fg:x="171371" fg:w="48"/><text x="37.3070%" y="1279.50"></text></g><g><title>`0x7FFDD2168580 (190 samples, 0.04%)</title><rect x="37.1089%" y="1253" width="0.0411%" height="15" fill="rgb(224,66,35)" fg:x="171611" fg:w="190"/><text x="37.3589%" y="1263.50"></text></g><g><title>`0x7FFDD2168582 (87 samples, 0.02%)</title><rect x="37.1499%" y="1253" width="0.0188%" height="15" fill="rgb(221,13,50)" fg:x="171801" fg:w="87"/><text x="37.3999%" y="1263.50"></text></g><g><title>`0x7FFDD21685BD (262 samples, 0.06%)</title><rect x="37.1789%" y="1253" width="0.0567%" height="15" fill="rgb(236,68,49)" fg:x="171935" fg:w="262"/><text x="37.4289%" y="1263.50"></text></g><g><title>`0x7FFDD21685D7 (73 samples, 0.02%)</title><rect x="37.2371%" y="1253" width="0.0158%" height="15" fill="rgb(229,146,28)" fg:x="172204" fg:w="73"/><text x="37.4871%" y="1263.50"></text></g><g><title>`0x7FFDD2168634 (98 samples, 0.02%)</title><rect x="37.2533%" y="1253" width="0.0212%" height="15" fill="rgb(225,31,38)" fg:x="172279" fg:w="98"/><text x="37.5033%" y="1263.50"></text></g><g><title>`0x7FFDD2168692 (13,785 samples, 2.98%)</title><rect x="37.2749%" y="1253" width="2.9808%" height="15" fill="rgb(250,208,3)" fg:x="172379" fg:w="13785"/><text x="37.5249%" y="1263.50">`0x..</text></g><g><title>`0x7FFDD49A3534 (13,767 samples, 2.98%)</title><rect x="37.2788%" y="1237" width="2.9770%" height="15" fill="rgb(246,54,23)" fg:x="172397" fg:w="13767"/><text x="37.5288%" y="1247.50">`0x..</text></g><g><title>`0x7FFDD37A1CA0 (47 samples, 0.01%)</title><rect x="40.2620%" y="1253" width="0.0102%" height="15" fill="rgb(243,76,11)" fg:x="186193" fg:w="47"/><text x="40.5120%" y="1263.50"></text></g><g><title>`0x7FFDD4890F54 (143 samples, 0.03%)</title><rect x="40.3375%" y="997" width="0.0309%" height="15" fill="rgb(245,21,50)" fg:x="186542" fg:w="143"/><text x="40.5875%" y="1007.50"></text></g><g><title>`0x7FFDD4890E14 (160 samples, 0.03%)</title><rect x="40.3345%" y="1013" width="0.0346%" height="15" fill="rgb(228,9,43)" fg:x="186528" fg:w="160"/><text x="40.5845%" y="1023.50"></text></g><g><title>`0x7FFDD4890F54 (178 samples, 0.04%)</title><rect x="40.3868%" y="917" width="0.0385%" height="15" fill="rgb(208,100,47)" fg:x="186770" fg:w="178"/><text x="40.6368%" y="927.50"></text></g><g><title>`0x7FFDD4890E14 (202 samples, 0.04%)</title><rect x="40.3827%" y="933" width="0.0437%" height="15" fill="rgb(232,26,8)" fg:x="186751" fg:w="202"/><text x="40.6327%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (283 samples, 0.06%)</title><rect x="40.3704%" y="1013" width="0.0612%" height="15" fill="rgb(216,166,38)" fg:x="186694" fg:w="283"/><text x="40.6204%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (283 samples, 0.06%)</title><rect x="40.3704%" y="997" width="0.0612%" height="15" fill="rgb(251,202,51)" fg:x="186694" fg:w="283"/><text x="40.6204%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (283 samples, 0.06%)</title><rect x="40.3704%" y="981" width="0.0612%" height="15" fill="rgb(254,216,34)" fg:x="186694" fg:w="283"/><text x="40.6204%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::with_params (281 samples, 0.06%)</title><rect x="40.3708%" y="965" width="0.0608%" height="15" fill="rgb(251,32,27)" fg:x="186696" fg:w="281"/><text x="40.6208%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (241 samples, 0.05%)</title><rect x="40.3795%" y="949" width="0.0521%" height="15" fill="rgb(208,127,28)" fg:x="186736" fg:w="241"/><text x="40.6295%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (501 samples, 0.11%)</title><rect x="40.3245%" y="1045" width="0.1083%" height="15" fill="rgb(224,137,22)" fg:x="186482" fg:w="501"/><text x="40.5745%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (458 samples, 0.10%)</title><rect x="40.3338%" y="1029" width="0.0990%" height="15" fill="rgb(254,70,32)" fg:x="186525" fg:w="458"/><text x="40.5838%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (91 samples, 0.02%)</title><rect x="40.4329%" y="1045" width="0.0197%" height="15" fill="rgb(229,75,37)" fg:x="186983" fg:w="91"/><text x="40.6829%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (91 samples, 0.02%)</title><rect x="40.4329%" y="1029" width="0.0197%" height="15" fill="rgb(252,64,23)" fg:x="186983" fg:w="91"/><text x="40.6829%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (91 samples, 0.02%)</title><rect x="40.4329%" y="1013" width="0.0197%" height="15" fill="rgb(232,162,48)" fg:x="186983" fg:w="91"/><text x="40.6829%" y="1023.50"></text></g><g><title>`0x7FFDD4869E2D (47 samples, 0.01%)</title><rect x="40.4579%" y="901" width="0.0102%" height="15" fill="rgb(246,160,12)" fg:x="187099" fg:w="47"/><text x="40.7079%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (85 samples, 0.02%)</title><rect x="40.4569%" y="949" width="0.0184%" height="15" fill="rgb(247,166,0)" fg:x="187094" fg:w="85"/><text x="40.7069%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (85 samples, 0.02%)</title><rect x="40.4569%" y="933" width="0.0184%" height="15" fill="rgb(249,219,21)" fg:x="187094" fg:w="85"/><text x="40.7069%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (85 samples, 0.02%)</title><rect x="40.4569%" y="917" width="0.0184%" height="15" fill="rgb(205,209,3)" fg:x="187094" fg:w="85"/><text x="40.7069%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::grow_one&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt; (93 samples, 0.02%)</title><rect x="40.4554%" y="1029" width="0.0201%" height="15" fill="rgb(243,44,1)" fg:x="187087" fg:w="93"/><text x="40.7054%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (88 samples, 0.02%)</title><rect x="40.4564%" y="1013" width="0.0190%" height="15" fill="rgb(206,159,16)" fg:x="187092" fg:w="88"/><text x="40.7064%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (88 samples, 0.02%)</title><rect x="40.4564%" y="997" width="0.0190%" height="15" fill="rgb(244,77,30)" fg:x="187092" fg:w="88"/><text x="40.7064%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (88 samples, 0.02%)</title><rect x="40.4564%" y="981" width="0.0190%" height="15" fill="rgb(218,69,12)" fg:x="187092" fg:w="88"/><text x="40.7064%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (87 samples, 0.02%)</title><rect x="40.4567%" y="965" width="0.0188%" height="15" fill="rgb(212,87,7)" fg:x="187093" fg:w="87"/><text x="40.7067%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::push(std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (129 samples, 0.03%)</title><rect x="40.4525%" y="1045" width="0.0279%" height="15" fill="rgb(245,114,25)" fg:x="187074" fg:w="129"/><text x="40.7025%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (53 samples, 0.01%)</title><rect x="40.4848%" y="1013" width="0.0115%" height="15" fill="rgb(210,61,42)" fg:x="187223" fg:w="53"/><text x="40.7348%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (55 samples, 0.01%)</title><rect x="40.4848%" y="1029" width="0.0119%" height="15" fill="rgb(211,52,33)" fg:x="187223" fg:w="55"/><text x="40.7348%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (74 samples, 0.02%)</title><rect x="40.4848%" y="1045" width="0.0160%" height="15" fill="rgb(234,58,33)" fg:x="187223" fg:w="74"/><text x="40.7348%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (82 samples, 0.02%)</title><rect x="40.5036%" y="1013" width="0.0177%" height="15" fill="rgb(220,115,36)" fg:x="187310" fg:w="82"/><text x="40.7536%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (82 samples, 0.02%)</title><rect x="40.5036%" y="997" width="0.0177%" height="15" fill="rgb(243,153,54)" fg:x="187310" fg:w="82"/><text x="40.7536%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (66 samples, 0.01%)</title><rect x="40.5213%" y="997" width="0.0143%" height="15" fill="rgb(251,47,18)" fg:x="187392" fg:w="66"/><text x="40.7713%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (52 samples, 0.01%)</title><rect x="40.5243%" y="981" width="0.0112%" height="15" fill="rgb(242,102,42)" fg:x="187406" fg:w="52"/><text x="40.7743%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (50 samples, 0.01%)</title><rect x="40.5248%" y="965" width="0.0108%" height="15" fill="rgb(234,31,38)" fg:x="187408" fg:w="50"/><text x="40.7748%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt; &gt; (162 samples, 0.04%)</title><rect x="40.5008%" y="1045" width="0.0350%" height="15" fill="rgb(221,117,51)" fg:x="187297" fg:w="162"/><text x="40.7508%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (149 samples, 0.03%)</title><rect x="40.5036%" y="1029" width="0.0322%" height="15" fill="rgb(212,20,18)" fg:x="187310" fg:w="149"/><text x="40.7536%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="40.5213%" y="1013" width="0.0145%" height="15" fill="rgb(245,133,36)" fg:x="187392" fg:w="67"/><text x="40.7713%" y="1023.50"></text></g><g><title>`0x7FFDD4890F54 (271 samples, 0.06%)</title><rect x="40.5970%" y="981" width="0.0586%" height="15" fill="rgb(212,6,19)" fg:x="187742" fg:w="271"/><text x="40.8470%" y="991.50"></text></g><g><title>`0x7FFDD4890E14 (313 samples, 0.07%)</title><rect x="40.5907%" y="997" width="0.0677%" height="15" fill="rgb(218,1,36)" fg:x="187713" fg:w="313"/><text x="40.8407%" y="1007.50"></text></g><g><title>`0x7FFDD4890E0F (115 samples, 0.02%)</title><rect x="40.6954%" y="917" width="0.0249%" height="15" fill="rgb(246,84,54)" fg:x="188197" fg:w="115"/><text x="40.9454%" y="927.50"></text></g><g><title>`0x7FFDD4890F54 (211 samples, 0.05%)</title><rect x="40.7438%" y="901" width="0.0456%" height="15" fill="rgb(242,110,6)" fg:x="188421" fg:w="211"/><text x="40.9938%" y="911.50"></text></g><g><title>`0x7FFDD4890E14 (327 samples, 0.07%)</title><rect x="40.7202%" y="917" width="0.0707%" height="15" fill="rgb(214,47,5)" fg:x="188312" fg:w="327"/><text x="40.9702%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (669 samples, 0.14%)</title><rect x="40.6632%" y="997" width="0.1447%" height="15" fill="rgb(218,159,25)" fg:x="188048" fg:w="669"/><text x="40.9132%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (669 samples, 0.14%)</title><rect x="40.6632%" y="981" width="0.1447%" height="15" fill="rgb(215,211,28)" fg:x="188048" fg:w="669"/><text x="40.9132%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (669 samples, 0.14%)</title><rect x="40.6632%" y="965" width="0.1447%" height="15" fill="rgb(238,59,32)" fg:x="188048" fg:w="669"/><text x="40.9132%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::with_params (660 samples, 0.14%)</title><rect x="40.6651%" y="949" width="0.1427%" height="15" fill="rgb(226,82,3)" fg:x="188057" fg:w="660"/><text x="40.9151%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (533 samples, 0.12%)</title><rect x="40.6926%" y="933" width="0.1153%" height="15" fill="rgb(240,164,32)" fg:x="188184" fg:w="533"/><text x="40.9426%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (1,166 samples, 0.25%)</title><rect x="40.5615%" y="1029" width="0.2521%" height="15" fill="rgb(232,46,7)" fg:x="187578" fg:w="1166"/><text x="40.8115%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (1,038 samples, 0.22%)</title><rect x="40.5892%" y="1013" width="0.2245%" height="15" fill="rgb(229,129,53)" fg:x="187706" fg:w="1038"/><text x="40.8392%" y="1023.50"></text></g><g><title>`0x7FFDD48C0F53 (116 samples, 0.03%)</title><rect x="40.8480%" y="981" width="0.0251%" height="15" fill="rgb(234,188,29)" fg:x="188903" fg:w="116"/><text x="41.0980%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (409 samples, 0.09%)</title><rect x="40.8137%" y="1029" width="0.0884%" height="15" fill="rgb(246,141,4)" fg:x="188744" fg:w="409"/><text x="41.0637%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (409 samples, 0.09%)</title><rect x="40.8137%" y="1013" width="0.0884%" height="15" fill="rgb(229,23,39)" fg:x="188744" fg:w="409"/><text x="41.0637%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (409 samples, 0.09%)</title><rect x="40.8137%" y="997" width="0.0884%" height="15" fill="rgb(206,12,3)" fg:x="188744" fg:w="409"/><text x="41.0637%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (59 samples, 0.01%)</title><rect x="40.8893%" y="981" width="0.0128%" height="15" fill="rgb(252,226,20)" fg:x="189094" fg:w="59"/><text x="41.1393%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (50 samples, 0.01%)</title><rect x="40.8913%" y="965" width="0.0108%" height="15" fill="rgb(216,123,35)" fg:x="189103" fg:w="50"/><text x="41.1413%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (254 samples, 0.05%)</title><rect x="40.9030%" y="997" width="0.0549%" height="15" fill="rgb(212,68,40)" fg:x="189157" fg:w="254"/><text x="41.1530%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (262 samples, 0.06%)</title><rect x="40.9030%" y="1013" width="0.0567%" height="15" fill="rgb(254,125,32)" fg:x="189157" fg:w="262"/><text x="41.1530%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="40.9596%" y="997" width="0.0145%" height="15" fill="rgb(253,97,22)" fg:x="189419" fg:w="67"/><text x="41.2096%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (67 samples, 0.01%)</title><rect x="40.9596%" y="981" width="0.0145%" height="15" fill="rgb(241,101,14)" fg:x="189419" fg:w="67"/><text x="41.2096%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (337 samples, 0.07%)</title><rect x="40.9030%" y="1029" width="0.0729%" height="15" fill="rgb(238,103,29)" fg:x="189157" fg:w="337"/><text x="41.1530%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (75 samples, 0.02%)</title><rect x="40.9596%" y="1013" width="0.0162%" height="15" fill="rgb(233,195,47)" fg:x="189419" fg:w="75"/><text x="41.2096%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$24::mul (109 samples, 0.02%)</title><rect x="40.9758%" y="1029" width="0.0236%" height="15" fill="rgb(246,218,30)" fg:x="189494" fg:w="109"/><text x="41.2258%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$141::mul (101 samples, 0.02%)</title><rect x="40.9776%" y="1013" width="0.0218%" height="15" fill="rgb(219,145,47)" fg:x="189502" fg:w="101"/><text x="41.2276%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_leaf (86 samples, 0.02%)</title><rect x="40.9994%" y="1029" width="0.0186%" height="15" fill="rgb(243,12,26)" fg:x="189603" fg:w="86"/><text x="41.2494%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::f32::impl$0::max (213 samples, 0.05%)</title><rect x="41.0971%" y="965" width="0.0461%" height="15" fill="rgb(214,87,16)" fg:x="190055" fg:w="213"/><text x="41.3471%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::Vec3::max_element (222 samples, 0.05%)</title><rect x="41.0965%" y="981" width="0.0480%" height="15" fill="rgb(208,99,42)" fg:x="190052" fg:w="222"/><text x="41.3465%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$77::sub (91 samples, 0.02%)</title><rect x="41.1445%" y="965" width="0.0197%" height="15" fill="rgb(253,99,2)" fg:x="190274" fg:w="91"/><text x="41.3945%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::sampler::impl$7::sample (349 samples, 0.08%)</title><rect x="41.0909%" y="997" width="0.0755%" height="15" fill="rgb(220,168,23)" fg:x="190026" fg:w="349"/><text x="41.3409%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$50::sub (101 samples, 0.02%)</title><rect x="41.1445%" y="981" width="0.0218%" height="15" fill="rgb(242,38,24)" fg:x="190274" fg:w="101"/><text x="41.3945%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::CuboidSampler&gt; (731 samples, 0.16%)</title><rect x="41.0180%" y="1029" width="0.1581%" height="15" fill="rgb(225,182,9)" fg:x="189689" fg:w="731"/><text x="41.2680%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_leaf (657 samples, 0.14%)</title><rect x="41.0340%" y="1013" width="0.1421%" height="15" fill="rgb(243,178,37)" fg:x="189763" fg:w="657"/><text x="41.2840%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::CuboidSampler&gt; (2,939 samples, 0.64%)</title><rect x="40.5408%" y="1045" width="0.6355%" height="15" fill="rgb(232,139,19)" fg:x="187482" fg:w="2939"/><text x="40.7908%" y="1055.50"></text></g><g><title>`0x7FFDD2093195 (94 samples, 0.02%)</title><rect x="41.2035%" y="949" width="0.0203%" height="15" fill="rgb(225,201,24)" fg:x="190547" fg:w="94"/><text x="41.4535%" y="959.50"></text></g><g><title>`0x7FFDD20931A9 (1,217 samples, 0.26%)</title><rect x="41.2241%" y="949" width="0.2632%" height="15" fill="rgb(221,47,46)" fg:x="190642" fg:w="1217"/><text x="41.4741%" y="959.50"></text></g><g><title>`0x7FFDD49A3414 (1,212 samples, 0.26%)</title><rect x="41.2252%" y="933" width="0.2621%" height="15" fill="rgb(249,23,13)" fg:x="190647" fg:w="1212"/><text x="41.4752%" y="943.50"></text></g><g><title>`0x7FFDD208895F (753 samples, 0.16%)</title><rect x="41.4946%" y="933" width="0.1628%" height="15" fill="rgb(219,9,5)" fg:x="191893" fg:w="753"/><text x="41.7446%" y="943.50"></text></g><g><title>`0x7FFDD49A32B4 (737 samples, 0.16%)</title><rect x="41.4981%" y="917" width="0.1594%" height="15" fill="rgb(254,171,16)" fg:x="191909" fg:w="737"/><text x="41.7481%" y="927.50"></text></g><g><title>`0x7FFDD20889FB (53 samples, 0.01%)</title><rect x="41.6576%" y="933" width="0.0115%" height="15" fill="rgb(230,171,20)" fg:x="192647" fg:w="53"/><text x="41.9076%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::get_mut (2,233 samples, 0.48%)</title><rect x="41.1891%" y="1013" width="0.4829%" height="15" fill="rgb(210,71,41)" fg:x="190480" fg:w="2233"/><text x="41.4391%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::is_unique (2,233 samples, 0.48%)</title><rect x="41.1891%" y="997" width="0.4829%" height="15" fill="rgb(206,173,20)" fg:x="190480" fg:w="2233"/><text x="41.4391%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::inner (2,196 samples, 0.47%)</title><rect x="41.1971%" y="981" width="0.4749%" height="15" fill="rgb(233,88,34)" fg:x="190517" fg:w="2196"/><text x="41.4471%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt; &gt; &gt;::as_ref (2,196 samples, 0.47%)</title><rect x="41.1971%" y="965" width="0.4749%" height="15" fill="rgb(223,209,46)" fg:x="190517" fg:w="2196"/><text x="41.4471%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::join (842 samples, 0.18%)</title><rect x="41.4898%" y="949" width="0.1821%" height="15" fill="rgb(250,43,18)" fg:x="191871" fg:w="842"/><text x="41.7398%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$48::drop (47 samples, 0.01%)</title><rect x="41.6931%" y="917" width="0.0102%" height="15" fill="rgb(208,13,10)" fg:x="192811" fg:w="47"/><text x="41.9431%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::drop_slow&lt;std::thread::Inner,alloc::alloc::Global&gt; (49 samples, 0.01%)</title><rect x="41.6929%" y="949" width="0.0106%" height="15" fill="rgb(212,200,36)" fg:x="192810" fg:w="49"/><text x="41.9429%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (48 samples, 0.01%)</title><rect x="41.6931%" y="933" width="0.0104%" height="15" fill="rgb(225,90,30)" fg:x="192811" fg:w="48"/><text x="41.9431%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (152 samples, 0.03%)</title><rect x="41.6719%" y="1013" width="0.0329%" height="15" fill="rgb(236,182,39)" fg:x="192713" fg:w="152"/><text x="41.9219%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (152 samples, 0.03%)</title><rect x="41.6719%" y="997" width="0.0329%" height="15" fill="rgb(212,144,35)" fg:x="192713" fg:w="152"/><text x="41.9219%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::inner (133 samples, 0.03%)</title><rect x="41.6760%" y="981" width="0.0288%" height="15" fill="rgb(228,63,44)" fg:x="192732" fg:w="133"/><text x="41.9260%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt; &gt; &gt;::as_ref (133 samples, 0.03%)</title><rect x="41.6760%" y="965" width="0.0288%" height="15" fill="rgb(228,109,6)" fg:x="192732" fg:w="133"/><text x="41.9260%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::join(std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (2,447 samples, 0.53%)</title><rect x="41.1787%" y="1045" width="0.5291%" height="15" fill="rgb(238,117,24)" fg:x="190432" fg:w="2447"/><text x="41.4287%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::JoinInner&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::join&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::JoinInner&lt;tuple$&lt;bool,alloc::boxed::Box (2,447 samples, 0.53%)</title><rect x="41.1787%" y="1029" width="0.5291%" height="15" fill="rgb(242,26,26)" fg:x="190432" fg:w="2447"/><text x="41.4287%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (72 samples, 0.02%)</title><rect x="41.7173%" y="981" width="0.0156%" height="15" fill="rgb(221,92,48)" fg:x="192923" fg:w="72"/><text x="41.9673%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (62 samples, 0.01%)</title><rect x="41.7195%" y="965" width="0.0134%" height="15" fill="rgb(209,209,32)" fg:x="192933" fg:w="62"/><text x="41.9695%" y="975.50"></text></g><g><title>`0x7FFDD4890E14 (67 samples, 0.01%)</title><rect x="41.7331%" y="933" width="0.0145%" height="15" fill="rgb(221,70,22)" fg:x="192996" fg:w="67"/><text x="41.9831%" y="943.50"></text></g><g><title>`0x7FFDD4890F54 (63 samples, 0.01%)</title><rect x="41.7340%" y="917" width="0.0136%" height="15" fill="rgb(248,145,5)" fg:x="193000" fg:w="63"/><text x="41.9840%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (73 samples, 0.02%)</title><rect x="41.7329%" y="965" width="0.0158%" height="15" fill="rgb(226,116,26)" fg:x="192995" fg:w="73"/><text x="41.9829%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (72 samples, 0.02%)</title><rect x="41.7331%" y="949" width="0.0156%" height="15" fill="rgb(244,5,17)" fg:x="192996" fg:w="72"/><text x="41.9831%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::new(std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (90 samples, 0.02%)</title><rect x="41.7329%" y="981" width="0.0195%" height="15" fill="rgb(252,159,33)" fg:x="192995" fg:w="90"/><text x="41.9829%" y="991.50"></text></g><g><title>`0x7FFDD2140C15 (58 samples, 0.01%)</title><rect x="41.7614%" y="949" width="0.0125%" height="15" fill="rgb(206,71,0)" fg:x="193127" fg:w="58"/><text x="42.0114%" y="959.50"></text></g><g><title>`0x7FFDD2140ED9 (15,228 samples, 3.29%)</title><rect x="41.7902%" y="949" width="3.2929%" height="15" fill="rgb(233,118,54)" fg:x="193260" fg:w="15228"/><text x="42.0402%" y="959.50">`0x..</text></g><g><title>`0x7FFDD49A4B44 (15,225 samples, 3.29%)</title><rect x="41.7908%" y="933" width="3.2922%" height="15" fill="rgb(234,83,48)" fg:x="193263" fg:w="15225"/><text x="42.0408%" y="943.50">`0x..</text></g><g><title>`0x7FFDD379313D (15,398 samples, 3.33%)</title><rect x="41.7599%" y="965" width="3.3296%" height="15" fill="rgb(228,3,54)" fg:x="193120" fg:w="15398"/><text x="42.0099%" y="975.50">`0x..</text></g><g><title>`0x7FFDD4890F54 (52 samples, 0.01%)</title><rect x="45.0932%" y="917" width="0.0112%" height="15" fill="rgb(226,155,13)" fg:x="208535" fg:w="52"/><text x="45.3432%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (60 samples, 0.01%)</title><rect x="45.0917%" y="965" width="0.0130%" height="15" fill="rgb(241,28,37)" fg:x="208528" fg:w="60"/><text x="45.3417%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (60 samples, 0.01%)</title><rect x="45.0917%" y="949" width="0.0130%" height="15" fill="rgb(233,93,10)" fg:x="208528" fg:w="60"/><text x="45.3417%" y="959.50"></text></g><g><title>`0x7FFDD4890E14 (59 samples, 0.01%)</title><rect x="45.0919%" y="933" width="0.0128%" height="15" fill="rgb(225,113,19)" fg:x="208529" fg:w="59"/><text x="45.3419%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::new (15,491 samples, 3.35%)</title><rect x="41.7571%" y="981" width="3.3497%" height="15" fill="rgb(241,2,18)" fg:x="193107" fg:w="15491"/><text x="42.0071%" y="991.50">mdc..</text></g><g><title>`0x7FFDD4890E14 (61 samples, 0.01%)</title><rect x="45.1077%" y="869" width="0.0132%" height="15" fill="rgb(228,207,21)" fg:x="208602" fg:w="61"/><text x="45.3577%" y="879.50"></text></g><g><title>`0x7FFDD4890F54 (60 samples, 0.01%)</title><rect x="45.1079%" y="853" width="0.0130%" height="15" fill="rgb(213,211,35)" fg:x="208603" fg:w="60"/><text x="45.3579%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (64 samples, 0.01%)</title><rect x="45.1077%" y="885" width="0.0138%" height="15" fill="rgb(209,83,10)" fg:x="208602" fg:w="64"/><text x="45.3577%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::new_uninit (69 samples, 0.01%)</title><rect x="45.1073%" y="965" width="0.0149%" height="15" fill="rgb(209,164,1)" fg:x="208600" fg:w="69"/><text x="45.3573%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::allocate_for_layout (69 samples, 0.01%)</title><rect x="45.1073%" y="949" width="0.0149%" height="15" fill="rgb(213,184,43)" fg:x="208600" fg:w="69"/><text x="45.3573%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$14::new_uninit::closure$0 (67 samples, 0.01%)</title><rect x="45.1077%" y="933" width="0.0145%" height="15" fill="rgb(231,61,34)" fg:x="208602" fg:w="67"/><text x="45.3577%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (67 samples, 0.01%)</title><rect x="45.1077%" y="917" width="0.0145%" height="15" fill="rgb(235,75,3)" fg:x="208602" fg:w="67"/><text x="45.3577%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (67 samples, 0.01%)</title><rect x="45.1077%" y="901" width="0.0145%" height="15" fill="rgb(220,106,47)" fg:x="208602" fg:w="67"/><text x="45.3577%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Thread::new (71 samples, 0.02%)</title><rect x="45.1071%" y="981" width="0.0154%" height="15" fill="rgb(210,196,33)" fg:x="208599" fg:w="71"/><text x="45.3571%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::manually_drop::ManuallyDrop&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::new(tuple$&lt;bool,alloc::boxed::Box (22,359 samples, 4.83%)</title><rect x="40.2956%" y="1109" width="4.8349%" height="15" fill="rgb(229,154,42)" fg:x="186348" fg:w="22359"/><text x="40.5456%" y="1119.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (22,349 samples, 4.83%)</title><rect x="40.2977%" y="1093" width="4.8327%" height="15" fill="rgb(228,114,26)" fg:x="186358" fg:w="22349"/><text x="40.5477%" y="1103.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::impl$3::construct_nodes::closure$0(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (22,346 samples, 4.83%)</title><rect x="40.2984%" y="1077" width="4.8321%" height="15" fill="rgb(208,144,1)" fg:x="186361" fg:w="22346"/><text x="40.5484%" y="1087.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::CuboidSampler&gt; (22,342 samples, 4.83%)</title><rect x="40.2992%" y="1061" width="4.8312%" height="15" fill="rgb(239,112,37)" fg:x="186365" fg:w="22342"/><text x="40.5492%" y="1071.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawn(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (15,828 samples, 3.42%)</title><rect x="41.7078%" y="1045" width="3.4226%" height="15" fill="rgb(210,96,50)" fg:x="192879" fg:w="15828"/><text x="41.9578%" y="1055.50">mdc..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;, ref$ (15,828 samples, 3.42%)</title><rect x="41.7078%" y="1029" width="3.4226%" height="15" fill="rgb(222,178,2)" fg:x="192879" fg:w="15828"/><text x="41.9578%" y="1039.50">mdc..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (15,820 samples, 3.42%)</title><rect x="41.7095%" y="1013" width="3.4209%" height="15" fill="rgb(226,74,18)" fg:x="192887" fg:w="15820"/><text x="41.9595%" y="1023.50">mdc..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (15,817 samples, 3.42%)</title><rect x="41.7102%" y="997" width="3.4202%" height="15" fill="rgb(225,67,54)" fg:x="192890" fg:w="15817"/><text x="41.9602%" y="1007.50">mdc..</text></g><g><title>`0x7FFDD4890F54 (100 samples, 0.02%)</title><rect x="45.1393%" y="661" width="0.0216%" height="15" fill="rgb(251,92,32)" fg:x="208748" fg:w="100"/><text x="45.3893%" y="671.50"></text></g><g><title>`0x7FFDD4890E14 (120 samples, 0.03%)</title><rect x="45.1354%" y="677" width="0.0259%" height="15" fill="rgb(228,149,22)" fg:x="208730" fg:w="120"/><text x="45.3854%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once (156 samples, 0.03%)</title><rect x="45.1313%" y="1013" width="0.0337%" height="15" fill="rgb(243,54,13)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::SPAWN_HOOKS::constant$0::closure$0 (156 samples, 0.03%)</title><rect x="45.1313%" y="997" width="0.0337%" height="15" fill="rgb(243,180,28)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::Storage::get (156 samples, 0.03%)</title><rect x="45.1313%" y="981" width="0.0337%" height="15" fill="rgb(208,167,24)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::Storage::initialize (156 samples, 0.03%)</title><rect x="45.1313%" y="965" width="0.0337%" height="15" fill="rgb(245,73,45)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::set (156 samples, 0.03%)</title><rect x="45.1313%" y="949" width="0.0337%" height="15" fill="rgb(237,203,48)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::replace (156 samples, 0.03%)</title><rect x="45.1313%" y="933" width="0.0337%" height="15" fill="rgb(211,197,16)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::replace (156 samples, 0.03%)</title><rect x="45.1313%" y="917" width="0.0337%" height="15" fill="rgb(243,99,51)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::destructors::list::register (156 samples, 0.03%)</title><rect x="45.1313%" y="901" width="0.0337%" height="15" fill="rgb(215,123,29)" fg:x="208711" fg:w="156"/><text x="45.3813%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::push (154 samples, 0.03%)</title><rect x="45.1317%" y="885" width="0.0333%" height="15" fill="rgb(239,186,37)" fg:x="208713" fg:w="154"/><text x="45.3817%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::as_mut_ptr (151 samples, 0.03%)</title><rect x="45.1324%" y="869" width="0.0327%" height="15" fill="rgb(252,136,39)" fg:x="208716" fg:w="151"/><text x="45.3824%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec::ptr (151 samples, 0.03%)</title><rect x="45.1324%" y="853" width="0.0327%" height="15" fill="rgb(223,213,32)" fg:x="208716" fg:w="151"/><text x="45.3824%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::ptr (151 samples, 0.03%)</title><rect x="45.1324%" y="837" width="0.0327%" height="15" fill="rgb(233,115,5)" fg:x="208716" fg:w="151"/><text x="45.3824%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::non_null (151 samples, 0.03%)</title><rect x="45.1324%" y="821" width="0.0327%" height="15" fill="rgb(207,226,44)" fg:x="208716" fg:w="151"/><text x="45.3824%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec::grow_one&lt;tuple$&lt;ptr_mut$&lt;u8&gt;,void (*)(ptr_mut$&lt;u8&gt;)&gt;,alloc::alloc::Global&gt; (151 samples, 0.03%)</title><rect x="45.1324%" y="805" width="0.0327%" height="15" fill="rgb(208,126,0)" fg:x="208716" fg:w="151"/><text x="45.3824%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::grow_one (150 samples, 0.03%)</title><rect x="45.1326%" y="789" width="0.0324%" height="15" fill="rgb(244,66,21)" fg:x="208717" fg:w="150"/><text x="45.3826%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::grow_amortized (150 samples, 0.03%)</title><rect x="45.1326%" y="773" width="0.0324%" height="15" fill="rgb(222,97,12)" fg:x="208717" fg:w="150"/><text x="45.3826%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch (148 samples, 0.03%)</title><rect x="45.1330%" y="757" width="0.0320%" height="15" fill="rgb(219,213,19)" fg:x="208719" fg:w="148"/><text x="45.3830%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (148 samples, 0.03%)</title><rect x="45.1330%" y="741" width="0.0320%" height="15" fill="rgb(252,169,30)" fg:x="208719" fg:w="148"/><text x="45.3830%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::grow (142 samples, 0.03%)</title><rect x="45.1343%" y="725" width="0.0307%" height="15" fill="rgb(206,32,51)" fg:x="208725" fg:w="142"/><text x="45.3843%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::grow_impl (142 samples, 0.03%)</title><rect x="45.1343%" y="709" width="0.0307%" height="15" fill="rgb(250,172,42)" fg:x="208725" fg:w="142"/><text x="45.3843%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch (142 samples, 0.03%)</title><rect x="45.1343%" y="693" width="0.0307%" height="15" fill="rgb(209,34,43)" fg:x="208725" fg:w="142"/><text x="45.3843%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (22,524 samples, 4.87%)</title><rect x="40.2953%" y="1157" width="4.8705%" height="15" fill="rgb(223,11,35)" fg:x="186347" fg:w="22524"/><text x="40.5453%" y="1167.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (22,524 samples, 4.87%)</title><rect x="40.2953%" y="1141" width="4.8705%" height="15" fill="rgb(251,219,26)" fg:x="186347" fg:w="22524"/><text x="40.5453%" y="1151.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind::do_call (22,524 samples, 4.87%)</title><rect x="40.2953%" y="1125" width="4.8705%" height="15" fill="rgb(231,119,3)" fg:x="186347" fg:w="22524"/><text x="40.5453%" y="1135.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (164 samples, 0.04%)</title><rect x="45.1304%" y="1109" width="0.0355%" height="15" fill="rgb(216,97,11)" fg:x="208707" fg:w="164"/><text x="45.3804%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (164 samples, 0.04%)</title><rect x="45.1304%" y="1093" width="0.0355%" height="15" fill="rgb(223,59,9)" fg:x="208707" fg:w="164"/><text x="45.3804%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure$0::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure$1::closure$0::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (164 samples, 0.04%)</title><rect x="45.1304%" y="1077" width="0.0355%" height="15" fill="rgb(233,93,31)" fg:x="208707" fg:w="164"/><text x="45.3804%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::ChildSpawnHooks::run (164 samples, 0.04%)</title><rect x="45.1304%" y="1061" width="0.0355%" height="15" fill="rgb(239,81,33)" fg:x="208707" fg:w="164"/><text x="45.3804%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::local::LocalKey::set (160 samples, 0.03%)</title><rect x="45.1313%" y="1045" width="0.0346%" height="15" fill="rgb(213,120,34)" fg:x="208711" fg:w="160"/><text x="45.3813%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::local::LocalKey::initialize_with (160 samples, 0.03%)</title><rect x="45.1313%" y="1029" width="0.0346%" height="15" fill="rgb(243,49,53)" fg:x="208711" fg:w="160"/><text x="45.3813%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (22,730 samples, 4.92%)</title><rect x="40.2746%" y="1189" width="4.9151%" height="15" fill="rgb(247,216,33)" fg:x="186251" fg:w="22730"/><text x="40.5246%" y="1199.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::CuboidSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (22,715 samples, 4.91%)</title><rect x="40.2778%" y="1173" width="4.9119%" height="15" fill="rgb(226,26,14)" fg:x="186266" fg:w="22715"/><text x="40.5278%" y="1183.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$23::clone (86 samples, 0.02%)</title><rect x="45.1711%" y="1157" width="0.0186%" height="15" fill="rgb(215,49,53)" fg:x="208895" fg:w="86"/><text x="45.4211%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::pin::impl$28::clone(core::pin::Pin&lt;alloc::sync::Arc (86 samples, 0.02%)</title><rect x="45.1711%" y="1141" width="0.0186%" height="15" fill="rgb(245,162,40)" fg:x="208895" fg:w="86"/><text x="45.4211%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$28::clone(alloc::sync::Arc (86 samples, 0.02%)</title><rect x="45.1711%" y="1125" width="0.0186%" height="15" fill="rgb(229,68,17)" fg:x="208895" fg:w="86"/><text x="45.4211%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$30::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (58 samples, 0.01%)</title><rect x="45.2279%" y="1157" width="0.0125%" height="15" fill="rgb(213,182,10)" fg:x="209158" fg:w="58"/><text x="45.4779%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::inner (58 samples, 0.01%)</title><rect x="45.2279%" y="1141" width="0.0125%" height="15" fill="rgb(245,125,30)" fg:x="209158" fg:w="58"/><text x="45.4779%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt; &gt; &gt;::as_ref (58 samples, 0.01%)</title><rect x="45.2279%" y="1125" width="0.0125%" height="15" fill="rgb(232,202,2)" fg:x="209158" fg:w="58"/><text x="45.4779%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::drop(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (61 samples, 0.01%)</title><rect x="45.2405%" y="1157" width="0.0132%" height="15" fill="rgb(237,140,51)" fg:x="209216" fg:w="61"/><text x="45.4905%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (61 samples, 0.01%)</title><rect x="45.2405%" y="1141" width="0.0132%" height="15" fill="rgb(236,157,25)" fg:x="209216" fg:w="61"/><text x="45.4905%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (61 samples, 0.01%)</title><rect x="45.2405%" y="1125" width="0.0132%" height="15" fill="rgb(219,209,0)" fg:x="209216" fg:w="61"/><text x="45.4905%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (397 samples, 0.09%)</title><rect x="45.2537%" y="1157" width="0.0858%" height="15" fill="rgb(240,116,54)" fg:x="209277" fg:w="397"/><text x="45.5037%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(core::pin::Pin&lt;alloc::sync::Arc (397 samples, 0.09%)</title><rect x="45.2537%" y="1141" width="0.0858%" height="15" fill="rgb(216,10,36)" fg:x="209277" fg:w="397"/><text x="45.5037%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::sync::Arc (397 samples, 0.09%)</title><rect x="45.2537%" y="1125" width="0.0858%" height="15" fill="rgb(222,72,44)" fg:x="209277" fg:w="397"/><text x="45.5037%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (397 samples, 0.09%)</title><rect x="45.2537%" y="1109" width="0.0858%" height="15" fill="rgb(232,159,9)" fg:x="209277" fg:w="397"/><text x="45.5037%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$ (180 samples, 0.04%)</title><rect x="45.3395%" y="1157" width="0.0389%" height="15" fill="rgb(210,39,32)" fg:x="209674" fg:w="180"/><text x="45.5895%" y="1167.50"></text></g><g><title>`0x7FFDD4894624 (63 samples, 0.01%)</title><rect x="45.6524%" y="1029" width="0.0136%" height="15" fill="rgb(216,194,45)" fg:x="211121" fg:w="63"/><text x="45.9024%" y="1039.50"></text></g><g><title>`0x7FFDD48C13F0 (61 samples, 0.01%)</title><rect x="45.6529%" y="1013" width="0.0132%" height="15" fill="rgb(218,18,35)" fg:x="211123" fg:w="61"/><text x="45.9029%" y="1023.50"></text></g><g><title>`0x7FFDD4841B02 (62 samples, 0.01%)</title><rect x="45.6667%" y="1013" width="0.0134%" height="15" fill="rgb(207,83,51)" fg:x="211187" fg:w="62"/><text x="45.9167%" y="1023.50"></text></g><g><title>`0x7FFDD48C13F0 (60 samples, 0.01%)</title><rect x="45.6671%" y="997" width="0.0130%" height="15" fill="rgb(225,63,43)" fg:x="211189" fg:w="60"/><text x="45.9171%" y="1007.50"></text></g><g><title>`0x7FFDD48C1358 (132 samples, 0.03%)</title><rect x="45.6518%" y="1045" width="0.0285%" height="15" fill="rgb(207,57,36)" fg:x="211118" fg:w="132"/><text x="45.9018%" y="1055.50"></text></g><g><title>`0x7FFDD489469B (63 samples, 0.01%)</title><rect x="45.6667%" y="1029" width="0.0136%" height="15" fill="rgb(216,99,33)" fg:x="211187" fg:w="63"/><text x="45.9167%" y="1039.50"></text></g><g><title>`0x7FFDD48916D5 (52 samples, 0.01%)</title><rect x="45.7867%" y="981" width="0.0112%" height="15" fill="rgb(225,42,16)" fg:x="211742" fg:w="52"/><text x="46.0367%" y="991.50"></text></g><g><title>`0x7FFDD48916E1 (109 samples, 0.02%)</title><rect x="45.7982%" y="981" width="0.0236%" height="15" fill="rgb(220,201,45)" fg:x="211795" fg:w="109"/><text x="46.0482%" y="991.50"></text></g><g><title>`0x7FFDD4891740 (54 samples, 0.01%)</title><rect x="45.8243%" y="981" width="0.0117%" height="15" fill="rgb(225,33,4)" fg:x="211916" fg:w="54"/><text x="46.0743%" y="991.50"></text></g><g><title>`0x7FFDD489174A (87 samples, 0.02%)</title><rect x="45.8360%" y="981" width="0.0188%" height="15" fill="rgb(224,33,50)" fg:x="211970" fg:w="87"/><text x="46.0860%" y="991.50"></text></g><g><title>`0x7FFDD48917B0 (68 samples, 0.01%)</title><rect x="45.8583%" y="981" width="0.0147%" height="15" fill="rgb(246,198,51)" fg:x="212073" fg:w="68"/><text x="46.1083%" y="991.50"></text></g><g><title>`0x7FFDD4891870 (201 samples, 0.04%)</title><rect x="45.9307%" y="981" width="0.0435%" height="15" fill="rgb(205,22,4)" fg:x="212408" fg:w="201"/><text x="46.1807%" y="991.50"></text></g><g><title>`0x7FFDD4891CAF (60 samples, 0.01%)</title><rect x="46.0079%" y="981" width="0.0130%" height="15" fill="rgb(206,3,8)" fg:x="212765" fg:w="60"/><text x="46.2579%" y="991.50"></text></g><g><title>`0x7FFDD48920EF (76 samples, 0.02%)</title><rect x="46.0391%" y="981" width="0.0164%" height="15" fill="rgb(251,23,15)" fg:x="212909" fg:w="76"/><text x="46.2891%" y="991.50"></text></g><g><title>`0x7FFDD48923C9 (82 samples, 0.02%)</title><rect x="46.0596%" y="981" width="0.0177%" height="15" fill="rgb(252,88,28)" fg:x="213004" fg:w="82"/><text x="46.3096%" y="991.50"></text></g><g><title>`0x7FFDD4890E14 (82 samples, 0.02%)</title><rect x="46.0596%" y="965" width="0.0177%" height="15" fill="rgb(212,127,14)" fg:x="213004" fg:w="82"/><text x="46.3096%" y="975.50"></text></g><g><title>`0x7FFDD4891241 (82 samples, 0.02%)</title><rect x="46.0596%" y="949" width="0.0177%" height="15" fill="rgb(247,145,37)" fg:x="213004" fg:w="82"/><text x="46.3096%" y="959.50"></text></g><g><title>`0x7FFDD4890F54 (1,445 samples, 0.31%)</title><rect x="45.7668%" y="997" width="0.3125%" height="15" fill="rgb(209,117,53)" fg:x="211650" fg:w="1445"/><text x="46.0168%" y="1007.50"></text></g><g><title>`0x7FFDD4890E14 (1,616 samples, 0.35%)</title><rect x="45.7400%" y="1013" width="0.3494%" height="15" fill="rgb(212,90,42)" fg:x="211526" fg:w="1616"/><text x="45.9900%" y="1023.50"></text></g><g><title>`0x7FFDD4891609 (48 samples, 0.01%)</title><rect x="46.2797%" y="901" width="0.0104%" height="15" fill="rgb(218,164,37)" fg:x="214022" fg:w="48"/><text x="46.5297%" y="911.50"></text></g><g><title>`0x7FFDD48916D5 (63 samples, 0.01%)</title><rect x="46.2977%" y="901" width="0.0136%" height="15" fill="rgb(246,65,34)" fg:x="214105" fg:w="63"/><text x="46.5477%" y="911.50"></text></g><g><title>`0x7FFDD48916E1 (113 samples, 0.02%)</title><rect x="46.3115%" y="901" width="0.0244%" height="15" fill="rgb(231,100,33)" fg:x="214169" fg:w="113"/><text x="46.5615%" y="911.50"></text></g><g><title>`0x7FFDD489174A (64 samples, 0.01%)</title><rect x="46.3500%" y="901" width="0.0138%" height="15" fill="rgb(228,126,14)" fg:x="214347" fg:w="64"/><text x="46.6000%" y="911.50"></text></g><g><title>`0x7FFDD48917B0 (47 samples, 0.01%)</title><rect x="46.3686%" y="901" width="0.0102%" height="15" fill="rgb(215,173,21)" fg:x="214433" fg:w="47"/><text x="46.6186%" y="911.50"></text></g><g><title>`0x7FFDD4891870 (125 samples, 0.03%)</title><rect x="46.4015%" y="901" width="0.0270%" height="15" fill="rgb(210,6,40)" fg:x="214585" fg:w="125"/><text x="46.6515%" y="911.50"></text></g><g><title>`0x7FFDD48918DF (53 samples, 0.01%)</title><rect x="46.4315%" y="901" width="0.0115%" height="15" fill="rgb(212,48,18)" fg:x="214724" fg:w="53"/><text x="46.6815%" y="911.50"></text></g><g><title>`0x7FFDD4891CAF (387 samples, 0.08%)</title><rect x="46.4596%" y="901" width="0.0837%" height="15" fill="rgb(230,214,11)" fg:x="214854" fg:w="387"/><text x="46.7096%" y="911.50"></text></g><g><title>`0x7FFDD48920EF (81 samples, 0.02%)</title><rect x="46.5589%" y="901" width="0.0175%" height="15" fill="rgb(254,105,39)" fg:x="215313" fg:w="81"/><text x="46.8089%" y="911.50"></text></g><g><title>`0x7FFDD48923C9 (152 samples, 0.03%)</title><rect x="46.5833%" y="901" width="0.0329%" height="15" fill="rgb(245,158,5)" fg:x="215426" fg:w="152"/><text x="46.8333%" y="911.50"></text></g><g><title>`0x7FFDD4890E14 (151 samples, 0.03%)</title><rect x="46.5835%" y="885" width="0.0327%" height="15" fill="rgb(249,208,11)" fg:x="215427" fg:w="151"/><text x="46.8335%" y="895.50"></text></g><g><title>`0x7FFDD4891241 (151 samples, 0.03%)</title><rect x="46.5835%" y="869" width="0.0327%" height="15" fill="rgb(210,39,28)" fg:x="215427" fg:w="151"/><text x="46.8335%" y="879.50"></text></g><g><title>`0x7FFDD4890F54 (1,738 samples, 0.38%)</title><rect x="46.2475%" y="917" width="0.3758%" height="15" fill="rgb(211,56,53)" fg:x="213873" fg:w="1738"/><text x="46.4975%" y="927.50"></text></g><g><title>`0x7FFDD4890E14 (1,931 samples, 0.42%)</title><rect x="46.2108%" y="933" width="0.4176%" height="15" fill="rgb(226,201,30)" fg:x="213703" fg:w="1931"/><text x="46.4608%" y="943.50"></text></g><g><title>`0x7FFDD3783F99 (72 samples, 0.02%)</title><rect x="46.6633%" y="901" width="0.0156%" height="15" fill="rgb(239,101,34)" fg:x="215796" fg:w="72"/><text x="46.9133%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::intrinsics::unlikely (151 samples, 0.03%)</title><rect x="46.6549%" y="917" width="0.0327%" height="15" fill="rgb(226,209,5)" fg:x="215757" fg:w="151"/><text x="46.9049%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (2,715 samples, 0.59%)</title><rect x="46.1007%" y="1013" width="0.5871%" height="15" fill="rgb(250,105,47)" fg:x="213194" fg:w="2715"/><text x="46.3507%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (2,715 samples, 0.59%)</title><rect x="46.1007%" y="997" width="0.5871%" height="15" fill="rgb(230,72,3)" fg:x="213194" fg:w="2715"/><text x="46.3507%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (2,715 samples, 0.59%)</title><rect x="46.1007%" y="981" width="0.5871%" height="15" fill="rgb(232,218,39)" fg:x="213194" fg:w="2715"/><text x="46.3507%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::with_params (2,697 samples, 0.58%)</title><rect x="46.1046%" y="965" width="0.5832%" height="15" fill="rgb(248,166,6)" fg:x="213212" fg:w="2697"/><text x="46.3546%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (2,325 samples, 0.50%)</title><rect x="46.1850%" y="949" width="0.5028%" height="15" fill="rgb(247,89,20)" fg:x="213584" fg:w="2325"/><text x="46.4350%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::process_heap_alloc (201 samples, 0.04%)</title><rect x="46.6443%" y="933" width="0.0435%" height="15" fill="rgb(248,130,54)" fg:x="215708" fg:w="201"/><text x="46.8943%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (4,714 samples, 1.02%)</title><rect x="45.6849%" y="1045" width="1.0193%" height="15" fill="rgb(234,196,4)" fg:x="211271" fg:w="4714"/><text x="45.9349%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (4,480 samples, 0.97%)</title><rect x="45.7355%" y="1029" width="0.9687%" height="15" fill="rgb(250,143,31)" fg:x="211505" fg:w="4480"/><text x="45.9855%" y="1039.50"></text></g><g><title>`0x7FFDD48C0E7E (68 samples, 0.01%)</title><rect x="46.7427%" y="997" width="0.0147%" height="15" fill="rgb(211,110,34)" fg:x="216163" fg:w="68"/><text x="46.9927%" y="1007.50"></text></g><g><title>`0x7FFDD48C0EBA (92 samples, 0.02%)</title><rect x="46.7602%" y="997" width="0.0199%" height="15" fill="rgb(215,124,48)" fg:x="216244" fg:w="92"/><text x="47.0102%" y="1007.50"></text></g><g><title>`0x7FFDD48C0ED5 (63 samples, 0.01%)</title><rect x="46.7885%" y="997" width="0.0136%" height="15" fill="rgb(216,46,13)" fg:x="216375" fg:w="63"/><text x="47.0385%" y="1007.50"></text></g><g><title>`0x7FFDD48C0F53 (138 samples, 0.03%)</title><rect x="46.8208%" y="997" width="0.0298%" height="15" fill="rgb(205,184,25)" fg:x="216524" fg:w="138"/><text x="47.0708%" y="1007.50"></text></g><g><title>`0x7FFDD48C1060 (99 samples, 0.02%)</title><rect x="46.8677%" y="997" width="0.0214%" height="15" fill="rgb(228,1,10)" fg:x="216741" fg:w="99"/><text x="47.1177%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (1,099 samples, 0.24%)</title><rect x="46.7042%" y="1045" width="0.2376%" height="15" fill="rgb(213,116,27)" fg:x="215985" fg:w="1099"/><text x="46.9542%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1,099 samples, 0.24%)</title><rect x="46.7042%" y="1029" width="0.2376%" height="15" fill="rgb(241,95,50)" fg:x="215985" fg:w="1099"/><text x="46.9542%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (1,099 samples, 0.24%)</title><rect x="46.7042%" y="1013" width="0.2376%" height="15" fill="rgb(238,48,32)" fg:x="215985" fg:w="1099"/><text x="46.9542%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (127 samples, 0.03%)</title><rect x="46.9144%" y="997" width="0.0275%" height="15" fill="rgb(235,113,49)" fg:x="216957" fg:w="127"/><text x="47.1644%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (123 samples, 0.03%)</title><rect x="46.9153%" y="981" width="0.0266%" height="15" fill="rgb(205,127,43)" fg:x="216961" fg:w="123"/><text x="47.1653%" y="991.50"></text></g><g><title>`0x7FFDD4890F54 (217 samples, 0.05%)</title><rect x="46.9864%" y="837" width="0.0469%" height="15" fill="rgb(250,162,2)" fg:x="217290" fg:w="217"/><text x="47.2364%" y="847.50"></text></g><g><title>`0x7FFDD4890E14 (222 samples, 0.05%)</title><rect x="46.9860%" y="853" width="0.0480%" height="15" fill="rgb(220,13,41)" fg:x="217288" fg:w="222"/><text x="47.2360%" y="863.50"></text></g><g><title>`0x7FFDD486A98A (226 samples, 0.05%)</title><rect x="46.9853%" y="869" width="0.0489%" height="15" fill="rgb(249,221,25)" fg:x="217285" fg:w="226"/><text x="47.2353%" y="879.50"></text></g><g><title>`0x7FFDD486A9EB (100 samples, 0.02%)</title><rect x="47.0361%" y="869" width="0.0216%" height="15" fill="rgb(215,208,19)" fg:x="217520" fg:w="100"/><text x="47.2861%" y="879.50"></text></g><g><title>`0x7FFDD486A0D5 (393 samples, 0.08%)</title><rect x="46.9816%" y="885" width="0.0850%" height="15" fill="rgb(236,175,2)" fg:x="217268" fg:w="393"/><text x="47.2316%" y="895.50"></text></g><g><title>`0x7FFDD4869E2D (412 samples, 0.09%)</title><rect x="46.9782%" y="901" width="0.0891%" height="15" fill="rgb(241,52,2)" fg:x="217252" fg:w="412"/><text x="47.2282%" y="911.50"></text></g><g><title>`0x7FFDD4890F54 (198 samples, 0.04%)</title><rect x="47.0725%" y="885" width="0.0428%" height="15" fill="rgb(248,140,14)" fg:x="217688" fg:w="198"/><text x="47.3225%" y="895.50"></text></g><g><title>`0x7FFDD4890E14 (211 samples, 0.05%)</title><rect x="47.0703%" y="901" width="0.0456%" height="15" fill="rgb(253,22,42)" fg:x="217678" fg:w="211"/><text x="47.3203%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (744 samples, 0.16%)</title><rect x="46.9695%" y="949" width="0.1609%" height="15" fill="rgb(234,61,47)" fg:x="217212" fg:w="744"/><text x="47.2195%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (744 samples, 0.16%)</title><rect x="46.9695%" y="933" width="0.1609%" height="15" fill="rgb(208,226,15)" fg:x="217212" fg:w="744"/><text x="47.2195%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (741 samples, 0.16%)</title><rect x="46.9702%" y="917" width="0.1602%" height="15" fill="rgb(217,221,4)" fg:x="217215" fg:w="741"/><text x="47.2202%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::grow_one&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt; (809 samples, 0.17%)</title><rect x="46.9563%" y="1029" width="0.1749%" height="15" fill="rgb(212,174,34)" fg:x="217151" fg:w="809"/><text x="47.2063%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (776 samples, 0.17%)</title><rect x="46.9635%" y="1013" width="0.1678%" height="15" fill="rgb(253,83,4)" fg:x="217184" fg:w="776"/><text x="47.2135%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (776 samples, 0.17%)</title><rect x="46.9635%" y="997" width="0.1678%" height="15" fill="rgb(250,195,49)" fg:x="217184" fg:w="776"/><text x="47.2135%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (770 samples, 0.17%)</title><rect x="46.9648%" y="981" width="0.1665%" height="15" fill="rgb(241,192,25)" fg:x="217190" fg:w="770"/><text x="47.2148%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (766 samples, 0.17%)</title><rect x="46.9656%" y="965" width="0.1656%" height="15" fill="rgb(208,124,10)" fg:x="217194" fg:w="766"/><text x="47.2156%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (62 samples, 0.01%)</title><rect x="47.1313%" y="1029" width="0.0134%" height="15" fill="rgb(222,33,0)" fg:x="217960" fg:w="62"/><text x="47.3813%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::ptr (61 samples, 0.01%)</title><rect x="47.1315%" y="1013" width="0.0132%" height="15" fill="rgb(234,209,28)" fg:x="217961" fg:w="61"/><text x="47.3815%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (61 samples, 0.01%)</title><rect x="47.1315%" y="997" width="0.0132%" height="15" fill="rgb(224,11,23)" fg:x="217961" fg:w="61"/><text x="47.3815%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (61 samples, 0.01%)</title><rect x="47.1315%" y="981" width="0.0132%" height="15" fill="rgb(232,99,1)" fg:x="217961" fg:w="61"/><text x="47.3815%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::push(std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (1,036 samples, 0.22%)</title><rect x="46.9425%" y="1045" width="0.2240%" height="15" fill="rgb(237,95,45)" fg:x="217087" fg:w="1036"/><text x="47.1925%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::write(std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;*, std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (101 samples, 0.02%)</title><rect x="47.1447%" y="1029" width="0.0218%" height="15" fill="rgb(208,109,11)" fg:x="218022" fg:w="101"/><text x="47.3947%" y="1039.50"></text></g><g><title>`0x7FFDD48C1358 (57 samples, 0.01%)</title><rect x="47.1953%" y="1013" width="0.0123%" height="15" fill="rgb(216,190,48)" fg:x="218256" fg:w="57"/><text x="47.4453%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(core::iter::adapters::enumerate::Enumerate&lt;alloc::vec::into_iter::IntoIter&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (168 samples, 0.04%)</title><rect x="47.1743%" y="1045" width="0.0363%" height="15" fill="rgb(251,171,36)" fg:x="218159" fg:w="168"/><text x="47.4243%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::into_iter::IntoIter&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (168 samples, 0.04%)</title><rect x="47.1743%" y="1029" width="0.0363%" height="15" fill="rgb(230,62,22)" fg:x="218159" fg:w="168"/><text x="47.4243%" y="1039.50"></text></g><g><title>`0x7FFDD48C0DD0 (59 samples, 0.01%)</title><rect x="47.2165%" y="997" width="0.0128%" height="15" fill="rgb(225,114,35)" fg:x="218354" fg:w="59"/><text x="47.4665%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (497 samples, 0.11%)</title><rect x="47.2119%" y="1013" width="0.1075%" height="15" fill="rgb(215,118,42)" fg:x="218333" fg:w="497"/><text x="47.4619%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (80 samples, 0.02%)</title><rect x="47.3021%" y="997" width="0.0173%" height="15" fill="rgb(243,119,21)" fg:x="218750" fg:w="80"/><text x="47.5521%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (65 samples, 0.01%)</title><rect x="47.3053%" y="981" width="0.0141%" height="15" fill="rgb(252,177,53)" fg:x="218765" fg:w="65"/><text x="47.5553%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (510 samples, 0.11%)</title><rect x="47.2119%" y="1029" width="0.1103%" height="15" fill="rgb(237,209,29)" fg:x="218333" fg:w="510"/><text x="47.4619%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (97 samples, 0.02%)</title><rect x="47.3231%" y="1013" width="0.0210%" height="15" fill="rgb(212,65,23)" fg:x="218847" fg:w="97"/><text x="47.5731%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (87 samples, 0.02%)</title><rect x="47.3252%" y="997" width="0.0188%" height="15" fill="rgb(230,222,46)" fg:x="218857" fg:w="87"/><text x="47.5752%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (637 samples, 0.14%)</title><rect x="47.2113%" y="1045" width="0.1377%" height="15" fill="rgb(215,135,32)" fg:x="218330" fg:w="637"/><text x="47.4613%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (120 samples, 0.03%)</title><rect x="47.3231%" y="1029" width="0.0259%" height="15" fill="rgb(246,101,22)" fg:x="218847" fg:w="120"/><text x="47.5731%" y="1039.50"></text></g><g><title>`0x7FFDD48C0E51 (51 samples, 0.01%)</title><rect x="47.3711%" y="981" width="0.0110%" height="15" fill="rgb(206,107,13)" fg:x="219069" fg:w="51"/><text x="47.6211%" y="991.50"></text></g><g><title>`0x7FFDD48C0EAD (125 samples, 0.03%)</title><rect x="47.3860%" y="981" width="0.0270%" height="15" fill="rgb(250,100,44)" fg:x="219138" fg:w="125"/><text x="47.6360%" y="991.50"></text></g><g><title>`0x7FFDD48C0EB1 (64 samples, 0.01%)</title><rect x="47.4130%" y="981" width="0.0138%" height="15" fill="rgb(231,147,38)" fg:x="219263" fg:w="64"/><text x="47.6630%" y="991.50"></text></g><g><title>`0x7FFDD48C0EC4 (69 samples, 0.01%)</title><rect x="47.4284%" y="981" width="0.0149%" height="15" fill="rgb(229,8,40)" fg:x="219334" fg:w="69"/><text x="47.6784%" y="991.50"></text></g><g><title>`0x7FFDD48C1069 (170 samples, 0.04%)</title><rect x="47.4658%" y="981" width="0.0368%" height="15" fill="rgb(221,135,30)" fg:x="219507" fg:w="170"/><text x="47.7158%" y="991.50"></text></g><g><title>`0x7FFDD48C1358 (80 samples, 0.02%)</title><rect x="47.5099%" y="981" width="0.0173%" height="15" fill="rgb(249,193,18)" fg:x="219711" fg:w="80"/><text x="47.7599%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (858 samples, 0.19%)</title><rect x="47.3572%" y="997" width="0.1855%" height="15" fill="rgb(209,133,39)" fg:x="219005" fg:w="858"/><text x="47.6072%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (865 samples, 0.19%)</title><rect x="47.3572%" y="1013" width="0.1870%" height="15" fill="rgb(232,100,14)" fg:x="219005" fg:w="865"/><text x="47.6072%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (506 samples, 0.11%)</title><rect x="47.5443%" y="997" width="0.1094%" height="15" fill="rgb(224,185,1)" fg:x="219870" fg:w="506"/><text x="47.7943%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (390 samples, 0.08%)</title><rect x="47.5694%" y="981" width="0.0843%" height="15" fill="rgb(223,139,8)" fg:x="219986" fg:w="390"/><text x="47.8194%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (371 samples, 0.08%)</title><rect x="47.5735%" y="965" width="0.0802%" height="15" fill="rgb(232,213,38)" fg:x="220005" fg:w="371"/><text x="47.8235%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt; &gt; (1,430 samples, 0.31%)</title><rect x="47.3490%" y="1045" width="0.3092%" height="15" fill="rgb(207,94,22)" fg:x="218967" fg:w="1430"/><text x="47.5990%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (1,392 samples, 0.30%)</title><rect x="47.3572%" y="1029" width="0.3010%" height="15" fill="rgb(219,183,54)" fg:x="219005" fg:w="1392"/><text x="47.6072%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (527 samples, 0.11%)</title><rect x="47.5443%" y="1013" width="0.1140%" height="15" fill="rgb(216,185,54)" fg:x="219870" fg:w="527"/><text x="47.7943%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$ (63 samples, 0.01%)</title><rect x="47.6582%" y="1045" width="0.0136%" height="15" fill="rgb(254,217,39)" fg:x="220397" fg:w="63"/><text x="47.9082%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$24::mul (155 samples, 0.03%)</title><rect x="47.6719%" y="1045" width="0.0335%" height="15" fill="rgb(240,178,23)" fg:x="220460" fg:w="155"/><text x="47.9219%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$141::mul (127 samples, 0.03%)</title><rect x="47.6779%" y="1029" width="0.0275%" height="15" fill="rgb(218,11,47)" fg:x="220488" fg:w="127"/><text x="47.9279%" y="1039.50"></text></g><g><title>`0x7FFDD4891740 (128 samples, 0.03%)</title><rect x="48.1712%" y="965" width="0.0277%" height="15" fill="rgb(218,51,51)" fg:x="222769" fg:w="128"/><text x="48.4212%" y="975.50"></text></g><g><title>`0x7FFDD489174A (270 samples, 0.06%)</title><rect x="48.1988%" y="965" width="0.0584%" height="15" fill="rgb(238,126,27)" fg:x="222897" fg:w="270"/><text x="48.4488%" y="975.50"></text></g><g><title>`0x7FFDD4891813 (55 samples, 0.01%)</title><rect x="48.3003%" y="965" width="0.0119%" height="15" fill="rgb(249,202,22)" fg:x="223366" fg:w="55"/><text x="48.5503%" y="975.50"></text></g><g><title>`0x7FFDD4891827 (48 samples, 0.01%)</title><rect x="48.3234%" y="965" width="0.0104%" height="15" fill="rgb(254,195,49)" fg:x="223473" fg:w="48"/><text x="48.5734%" y="975.50"></text></g><g><title>`0x7FFDD489182D (99 samples, 0.02%)</title><rect x="48.3349%" y="965" width="0.0214%" height="15" fill="rgb(208,123,14)" fg:x="223526" fg:w="99"/><text x="48.5849%" y="975.50"></text></g><g><title>`0x7FFDD489183C (50 samples, 0.01%)</title><rect x="48.3651%" y="965" width="0.0108%" height="15" fill="rgb(224,200,8)" fg:x="223666" fg:w="50"/><text x="48.6151%" y="975.50"></text></g><g><title>`0x7FFDD4891845 (113 samples, 0.02%)</title><rect x="48.3772%" y="965" width="0.0244%" height="15" fill="rgb(217,61,36)" fg:x="223722" fg:w="113"/><text x="48.6272%" y="975.50"></text></g><g><title>`0x7FFDD489185C (82 samples, 0.02%)</title><rect x="48.4153%" y="965" width="0.0177%" height="15" fill="rgb(206,35,45)" fg:x="223898" fg:w="82"/><text x="48.6653%" y="975.50"></text></g><g><title>`0x7FFDD4891870 (141 samples, 0.03%)</title><rect x="48.4454%" y="965" width="0.0305%" height="15" fill="rgb(217,65,33)" fg:x="224037" fg:w="141"/><text x="48.6954%" y="975.50"></text></g><g><title>`0x7FFDD4891C21 (61 samples, 0.01%)</title><rect x="48.4936%" y="965" width="0.0132%" height="15" fill="rgb(222,158,48)" fg:x="224260" fg:w="61"/><text x="48.7436%" y="975.50"></text></g><g><title>`0x7FFDD4891CAF (95 samples, 0.02%)</title><rect x="48.5085%" y="965" width="0.0205%" height="15" fill="rgb(254,2,54)" fg:x="224329" fg:w="95"/><text x="48.7585%" y="975.50"></text></g><g><title>`0x7FFDD4891CE2 (70 samples, 0.02%)</title><rect x="48.5370%" y="965" width="0.0151%" height="15" fill="rgb(250,143,38)" fg:x="224461" fg:w="70"/><text x="48.7870%" y="975.50"></text></g><g><title>`0x7FFDD4891D0E (61 samples, 0.01%)</title><rect x="48.5537%" y="965" width="0.0132%" height="15" fill="rgb(248,25,0)" fg:x="224538" fg:w="61"/><text x="48.8037%" y="975.50"></text></g><g><title>`0x7FFDD48920EF (125 samples, 0.03%)</title><rect x="48.5881%" y="965" width="0.0270%" height="15" fill="rgb(206,152,27)" fg:x="224697" fg:w="125"/><text x="48.8381%" y="975.50"></text></g><g><title>`0x7FFDD4890F54 (2,343 samples, 0.51%)</title><rect x="48.1145%" y="981" width="0.5066%" height="15" fill="rgb(240,77,30)" fg:x="222507" fg:w="2343"/><text x="48.3645%" y="991.50"></text></g><g><title>`0x7FFDD489100B (47 samples, 0.01%)</title><rect x="48.6311%" y="981" width="0.0102%" height="15" fill="rgb(231,5,3)" fg:x="224896" fg:w="47"/><text x="48.8811%" y="991.50"></text></g><g><title>`0x7FFDD4891043 (49 samples, 0.01%)</title><rect x="48.6417%" y="981" width="0.0106%" height="15" fill="rgb(207,226,32)" fg:x="224945" fg:w="49"/><text x="48.8917%" y="991.50"></text></g><g><title>`0x7FFDD4890E14 (2,745 samples, 0.59%)</title><rect x="48.0594%" y="997" width="0.5936%" height="15" fill="rgb(222,207,47)" fg:x="222252" fg:w="2745"/><text x="48.3094%" y="1007.50"></text></g><g><title>`0x7FFDD4890E1A (75 samples, 0.02%)</title><rect x="48.6534%" y="997" width="0.0162%" height="15" fill="rgb(229,115,45)" fg:x="224999" fg:w="75"/><text x="48.9034%" y="1007.50"></text></g><g><title>`0x7FFDD4890E35 (63 samples, 0.01%)</title><rect x="48.6705%" y="997" width="0.0136%" height="15" fill="rgb(224,191,6)" fg:x="225078" fg:w="63"/><text x="48.9205%" y="1007.50"></text></g><g><title>`0x7FFDD489034D (82 samples, 0.02%)</title><rect x="48.9607%" y="917" width="0.0177%" height="15" fill="rgb(230,227,24)" fg:x="226420" fg:w="82"/><text x="49.2107%" y="927.50"></text></g><g><title>`0x7FFDD4890362 (75 samples, 0.02%)</title><rect x="48.9786%" y="917" width="0.0162%" height="15" fill="rgb(228,80,19)" fg:x="226503" fg:w="75"/><text x="49.2286%" y="927.50"></text></g><g><title>`0x7FFDD4890E0F (862 samples, 0.19%)</title><rect x="48.9952%" y="917" width="0.1864%" height="15" fill="rgb(247,229,0)" fg:x="226580" fg:w="862"/><text x="49.2452%" y="927.50"></text></g><g><title>`0x7FFDD4890E74 (51 samples, 0.01%)</title><rect x="49.1860%" y="901" width="0.0110%" height="15" fill="rgb(237,194,15)" fg:x="227462" fg:w="51"/><text x="49.4360%" y="911.50"></text></g><g><title>`0x7FFDD4890E77 (55 samples, 0.01%)</title><rect x="49.1972%" y="901" width="0.0119%" height="15" fill="rgb(219,203,20)" fg:x="227514" fg:w="55"/><text x="49.4472%" y="911.50"></text></g><g><title>`0x7FFDD4890E8E (52 samples, 0.01%)</title><rect x="49.2167%" y="901" width="0.0112%" height="15" fill="rgb(234,128,8)" fg:x="227604" fg:w="52"/><text x="49.4667%" y="911.50"></text></g><g><title>`0x7FFDD4890E99 (48 samples, 0.01%)</title><rect x="49.2290%" y="901" width="0.0104%" height="15" fill="rgb(248,202,8)" fg:x="227661" fg:w="48"/><text x="49.4790%" y="911.50"></text></g><g><title>`0x7FFDD4890E9C (76 samples, 0.02%)</title><rect x="49.2394%" y="901" width="0.0164%" height="15" fill="rgb(206,104,37)" fg:x="227709" fg:w="76"/><text x="49.4894%" y="911.50"></text></g><g><title>`0x7FFDD4890EBB (72 samples, 0.02%)</title><rect x="49.2597%" y="901" width="0.0156%" height="15" fill="rgb(223,8,27)" fg:x="227803" fg:w="72"/><text x="49.5097%" y="911.50"></text></g><g><title>`0x7FFDD4890EED (63 samples, 0.01%)</title><rect x="49.2768%" y="901" width="0.0136%" height="15" fill="rgb(216,217,28)" fg:x="227882" fg:w="63"/><text x="49.5268%" y="911.50"></text></g><g><title>`0x7FFDD4890F16 (84 samples, 0.02%)</title><rect x="49.2919%" y="901" width="0.0182%" height="15" fill="rgb(249,199,1)" fg:x="227952" fg:w="84"/><text x="49.5419%" y="911.50"></text></g><g><title>`0x7FFDD4890F40 (75 samples, 0.02%)</title><rect x="49.3103%" y="901" width="0.0162%" height="15" fill="rgb(240,85,17)" fg:x="228037" fg:w="75"/><text x="49.5603%" y="911.50"></text></g><g><title>`0x7FFDD4890F4F (265 samples, 0.06%)</title><rect x="49.3265%" y="901" width="0.0573%" height="15" fill="rgb(206,108,45)" fg:x="228112" fg:w="265"/><text x="49.5765%" y="911.50"></text></g><g><title>`0x7FFDD4891580 (97 samples, 0.02%)</title><rect x="49.3877%" y="885" width="0.0210%" height="15" fill="rgb(245,210,41)" fg:x="228395" fg:w="97"/><text x="49.6377%" y="895.50"></text></g><g><title>`0x7FFDD4891582 (66 samples, 0.01%)</title><rect x="49.4113%" y="885" width="0.0143%" height="15" fill="rgb(206,13,37)" fg:x="228504" fg:w="66"/><text x="49.6613%" y="895.50"></text></g><g><title>`0x7FFDD4891585 (66 samples, 0.01%)</title><rect x="49.4282%" y="885" width="0.0143%" height="15" fill="rgb(250,61,18)" fg:x="228582" fg:w="66"/><text x="49.6782%" y="895.50"></text></g><g><title>`0x7FFDD4891589 (54 samples, 0.01%)</title><rect x="49.4468%" y="885" width="0.0117%" height="15" fill="rgb(235,172,48)" fg:x="228668" fg:w="54"/><text x="49.6968%" y="895.50"></text></g><g><title>`0x7FFDD48915A0 (250 samples, 0.05%)</title><rect x="49.4699%" y="885" width="0.0541%" height="15" fill="rgb(249,201,17)" fg:x="228775" fg:w="250"/><text x="49.7199%" y="895.50"></text></g><g><title>`0x7FFDD4891740 (111 samples, 0.02%)</title><rect x="49.5828%" y="885" width="0.0240%" height="15" fill="rgb(219,208,6)" fg:x="229297" fg:w="111"/><text x="49.8328%" y="895.50"></text></g><g><title>`0x7FFDD489174A (238 samples, 0.05%)</title><rect x="49.6068%" y="885" width="0.0515%" height="15" fill="rgb(248,31,23)" fg:x="229408" fg:w="238"/><text x="49.8568%" y="895.50"></text></g><g><title>`0x7FFDD4891870 (48 samples, 0.01%)</title><rect x="49.6954%" y="885" width="0.0104%" height="15" fill="rgb(245,15,42)" fg:x="229818" fg:w="48"/><text x="49.9454%" y="895.50"></text></g><g><title>`0x7FFDD4891CAF (165 samples, 0.04%)</title><rect x="49.7283%" y="885" width="0.0357%" height="15" fill="rgb(222,217,39)" fg:x="229970" fg:w="165"/><text x="49.9783%" y="895.50"></text></g><g><title>`0x7FFDD4891CE2 (47 samples, 0.01%)</title><rect x="49.7702%" y="885" width="0.0102%" height="15" fill="rgb(210,219,27)" fg:x="230164" fg:w="47"/><text x="50.0202%" y="895.50"></text></g><g><title>`0x7FFDD48920EF (141 samples, 0.03%)</title><rect x="49.8083%" y="885" width="0.0305%" height="15" fill="rgb(252,166,36)" fg:x="230340" fg:w="141"/><text x="50.0583%" y="895.50"></text></g><g><title>`0x7FFDD4890F54 (2,142 samples, 0.46%)</title><rect x="49.3838%" y="901" width="0.4632%" height="15" fill="rgb(245,132,34)" fg:x="228377" fg:w="2142"/><text x="49.6338%" y="911.50"></text></g><g><title>`0x7FFDD4890E14 (3,129 samples, 0.68%)</title><rect x="49.1816%" y="917" width="0.6766%" height="15" fill="rgb(236,54,3)" fg:x="227442" fg:w="3129"/><text x="49.4316%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (81 samples, 0.02%)</title><rect x="49.8717%" y="917" width="0.0175%" height="15" fill="rgb(241,173,43)" fg:x="230633" fg:w="81"/><text x="50.1217%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (81 samples, 0.02%)</title><rect x="49.8717%" y="901" width="0.0175%" height="15" fill="rgb(215,190,9)" fg:x="230633" fg:w="81"/><text x="50.1217%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (81 samples, 0.02%)</title><rect x="49.8717%" y="885" width="0.0175%" height="15" fill="rgb(242,101,16)" fg:x="230633" fg:w="81"/><text x="50.1217%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_alloc (150 samples, 0.03%)</title><rect x="49.8892%" y="917" width="0.0324%" height="15" fill="rgb(223,190,21)" fg:x="230714" fg:w="150"/><text x="50.1392%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::alloc (55 samples, 0.01%)</title><rect x="49.9097%" y="901" width="0.0119%" height="15" fill="rgb(215,228,25)" fg:x="230809" fg:w="55"/><text x="50.1597%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::allocate (55 samples, 0.01%)</title><rect x="49.9097%" y="885" width="0.0119%" height="15" fill="rgb(225,36,22)" fg:x="230809" fg:w="55"/><text x="50.1597%" y="895.50"></text></g><g><title>`0x7FFDD3783F99 (67 samples, 0.01%)</title><rect x="49.9623%" y="885" width="0.0145%" height="15" fill="rgb(251,106,46)" fg:x="231052" fg:w="67"/><text x="50.2123%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (5,978 samples, 1.29%)</title><rect x="48.6843%" y="997" width="1.2927%" height="15" fill="rgb(208,90,1)" fg:x="225142" fg:w="5978"/><text x="48.9343%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (5,978 samples, 1.29%)</title><rect x="48.6843%" y="981" width="1.2927%" height="15" fill="rgb(243,10,4)" fg:x="225142" fg:w="5978"/><text x="48.9343%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (5,978 samples, 1.29%)</title><rect x="48.6843%" y="965" width="1.2927%" height="15" fill="rgb(212,137,27)" fg:x="225142" fg:w="5978"/><text x="48.9343%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::with_params (5,936 samples, 1.28%)</title><rect x="48.6934%" y="949" width="1.2836%" height="15" fill="rgb(231,220,49)" fg:x="225184" fg:w="5936"/><text x="48.9434%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (4,703 samples, 1.02%)</title><rect x="48.9600%" y="933" width="1.0170%" height="15" fill="rgb(237,96,20)" fg:x="226417" fg:w="4703"/><text x="49.2100%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::process_heap_alloc (256 samples, 0.06%)</title><rect x="49.9216%" y="917" width="0.0554%" height="15" fill="rgb(239,229,30)" fg:x="230864" fg:w="256"/><text x="50.1716%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::intrinsics::unlikely (109 samples, 0.02%)</title><rect x="49.9534%" y="901" width="0.0236%" height="15" fill="rgb(219,65,33)" fg:x="231011" fg:w="109"/><text x="50.2034%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_alloc (119 samples, 0.03%)</title><rect x="49.9770%" y="997" width="0.0257%" height="15" fill="rgb(243,134,7)" fg:x="231120" fg:w="119"/><text x="50.2270%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::intrinsics::unlikely (64 samples, 0.01%)</title><rect x="50.0163%" y="981" width="0.0138%" height="15" fill="rgb(216,177,54)" fg:x="231302" fg:w="64"/><text x="50.2663%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (10,223 samples, 2.21%)</title><rect x="47.8198%" y="1029" width="2.2106%" height="15" fill="rgb(211,160,20)" fg:x="221144" fg:w="10223"/><text x="48.0698%" y="1039.50">m..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (9,196 samples, 1.99%)</title><rect x="48.0419%" y="1013" width="1.9885%" height="15" fill="rgb(239,85,39)" fg:x="222171" fg:w="9196"/><text x="48.2919%" y="1023.50">m..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::process_heap_alloc (128 samples, 0.03%)</title><rect x="50.0027%" y="997" width="0.0277%" height="15" fill="rgb(232,125,22)" fg:x="231239" fg:w="128"/><text x="50.2527%" y="1007.50"></text></g><g><title>`0x7FFDD48C0DE0 (101 samples, 0.02%)</title><rect x="50.0691%" y="981" width="0.0218%" height="15" fill="rgb(244,57,34)" fg:x="231546" fg:w="101"/><text x="50.3191%" y="991.50"></text></g><g><title>`0x7FFDD48C0DF3 (88 samples, 0.02%)</title><rect x="50.0972%" y="981" width="0.0190%" height="15" fill="rgb(214,203,32)" fg:x="231676" fg:w="88"/><text x="50.3472%" y="991.50"></text></g><g><title>`0x7FFDD48C0E23 (90 samples, 0.02%)</title><rect x="50.1240%" y="981" width="0.0195%" height="15" fill="rgb(207,58,43)" fg:x="231800" fg:w="90"/><text x="50.3740%" y="991.50"></text></g><g><title>`0x7FFDD48C0E51 (107 samples, 0.02%)</title><rect x="50.1506%" y="981" width="0.0231%" height="15" fill="rgb(215,193,15)" fg:x="231923" fg:w="107"/><text x="50.4006%" y="991.50"></text></g><g><title>`0x7FFDD48C0E7E (169 samples, 0.04%)</title><rect x="50.1783%" y="981" width="0.0365%" height="15" fill="rgb(232,15,44)" fg:x="232051" fg:w="169"/><text x="50.4283%" y="991.50"></text></g><g><title>`0x7FFDD48C0EBA (174 samples, 0.04%)</title><rect x="50.2269%" y="981" width="0.0376%" height="15" fill="rgb(212,3,48)" fg:x="232276" fg:w="174"/><text x="50.4769%" y="991.50"></text></g><g><title>`0x7FFDD48C0EC4 (52 samples, 0.01%)</title><rect x="50.2680%" y="981" width="0.0112%" height="15" fill="rgb(218,128,7)" fg:x="232466" fg:w="52"/><text x="50.5180%" y="991.50"></text></g><g><title>`0x7FFDD48C0EC8 (147 samples, 0.03%)</title><rect x="50.2793%" y="981" width="0.0318%" height="15" fill="rgb(226,216,39)" fg:x="232518" fg:w="147"/><text x="50.5293%" y="991.50"></text></g><g><title>`0x7FFDD48C0ECF (53 samples, 0.01%)</title><rect x="50.3121%" y="981" width="0.0115%" height="15" fill="rgb(243,47,51)" fg:x="232670" fg:w="53"/><text x="50.5621%" y="991.50"></text></g><g><title>`0x7FFDD48C0ED5 (200 samples, 0.04%)</title><rect x="50.3236%" y="981" width="0.0432%" height="15" fill="rgb(241,183,40)" fg:x="232723" fg:w="200"/><text x="50.5736%" y="991.50"></text></g><g><title>`0x7FFDD48C0EDA (57 samples, 0.01%)</title><rect x="50.3668%" y="981" width="0.0123%" height="15" fill="rgb(231,217,32)" fg:x="232923" fg:w="57"/><text x="50.6168%" y="991.50"></text></g><g><title>`0x7FFDD48C0EDE (62 samples, 0.01%)</title><rect x="50.3792%" y="981" width="0.0134%" height="15" fill="rgb(229,61,38)" fg:x="232980" fg:w="62"/><text x="50.6292%" y="991.50"></text></g><g><title>`0x7FFDD48C0EE4 (217 samples, 0.05%)</title><rect x="50.3928%" y="981" width="0.0469%" height="15" fill="rgb(225,210,5)" fg:x="233043" fg:w="217"/><text x="50.6428%" y="991.50"></text></g><g><title>`0x7FFDD48C0EE7 (125 samples, 0.03%)</title><rect x="50.4397%" y="981" width="0.0270%" height="15" fill="rgb(231,79,45)" fg:x="233260" fg:w="125"/><text x="50.6897%" y="991.50"></text></g><g><title>`0x7FFDD48C0F28 (56 samples, 0.01%)</title><rect x="50.4802%" y="981" width="0.0121%" height="15" fill="rgb(224,100,7)" fg:x="233447" fg:w="56"/><text x="50.7302%" y="991.50"></text></g><g><title>`0x7FFDD48C0F46 (56 samples, 0.01%)</title><rect x="50.4946%" y="981" width="0.0121%" height="15" fill="rgb(241,198,18)" fg:x="233514" fg:w="56"/><text x="50.7446%" y="991.50"></text></g><g><title>`0x7FFDD48C0F4E (61 samples, 0.01%)</title><rect x="50.5068%" y="981" width="0.0132%" height="15" fill="rgb(252,97,53)" fg:x="233570" fg:w="61"/><text x="50.7568%" y="991.50"></text></g><g><title>`0x7FFDD48C0F53 (818 samples, 0.18%)</title><rect x="50.5199%" y="981" width="0.1769%" height="15" fill="rgb(220,88,7)" fg:x="233631" fg:w="818"/><text x="50.7699%" y="991.50"></text></g><g><title>`0x7FFDD48C0F55 (121 samples, 0.03%)</title><rect x="50.6968%" y="981" width="0.0262%" height="15" fill="rgb(213,176,14)" fg:x="234449" fg:w="121"/><text x="50.9468%" y="991.50"></text></g><g><title>`0x7FFDD48C0F75 (59 samples, 0.01%)</title><rect x="50.7232%" y="981" width="0.0128%" height="15" fill="rgb(246,73,7)" fg:x="234571" fg:w="59"/><text x="50.9732%" y="991.50"></text></g><g><title>`0x7FFDD48C0FC7 (199 samples, 0.04%)</title><rect x="50.7498%" y="981" width="0.0430%" height="15" fill="rgb(245,64,36)" fg:x="234694" fg:w="199"/><text x="50.9998%" y="991.50"></text></g><g><title>`0x7FFDD48C1060 (215 samples, 0.05%)</title><rect x="50.7961%" y="981" width="0.0465%" height="15" fill="rgb(245,80,10)" fg:x="234908" fg:w="215"/><text x="51.0461%" y="991.50"></text></g><g><title>`0x7FFDD48C1158 (291 samples, 0.06%)</title><rect x="50.8467%" y="981" width="0.0629%" height="15" fill="rgb(232,107,50)" fg:x="235142" fg:w="291"/><text x="51.0967%" y="991.50"></text></g><g><title>`0x7FFDD48C1167 (270 samples, 0.06%)</title><rect x="50.9103%" y="981" width="0.0584%" height="15" fill="rgb(253,3,0)" fg:x="235436" fg:w="270"/><text x="51.1603%" y="991.50"></text></g><g><title>`0x7FFDD48C1409 (241 samples, 0.05%)</title><rect x="50.9771%" y="981" width="0.0521%" height="15" fill="rgb(212,99,53)" fg:x="235745" fg:w="241"/><text x="51.2271%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`__rustc::__rust_dealloc (80 samples, 0.02%)</title><rect x="51.0318%" y="981" width="0.0173%" height="15" fill="rgb(249,111,54)" fg:x="235998" fg:w="80"/><text x="51.2818%" y="991.50"></text></g><g><title>`0x7FFDD3783F90 (119 samples, 0.03%)</title><rect x="51.1025%" y="949" width="0.0257%" height="15" fill="rgb(249,55,30)" fg:x="236325" fg:w="119"/><text x="51.3525%" y="959.50"></text></g><g><title>`0x7FFDD3783F99 (118 samples, 0.03%)</title><rect x="51.1282%" y="949" width="0.0255%" height="15" fill="rgb(237,47,42)" fg:x="236444" fg:w="118"/><text x="51.3782%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (5,206 samples, 1.13%)</title><rect x="50.0304%" y="1029" width="1.1257%" height="15" fill="rgb(211,20,18)" fg:x="231367" fg:w="5206"/><text x="50.2804%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (5,206 samples, 1.13%)</title><rect x="50.0304%" y="1013" width="1.1257%" height="15" fill="rgb(231,203,46)" fg:x="231367" fg:w="5206"/><text x="50.2804%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (5,206 samples, 1.13%)</title><rect x="50.0304%" y="997" width="1.1257%" height="15" fill="rgb(237,142,3)" fg:x="231367" fg:w="5206"/><text x="50.2804%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (495 samples, 0.11%)</title><rect x="51.0491%" y="981" width="0.1070%" height="15" fill="rgb(241,107,1)" fg:x="236078" fg:w="495"/><text x="51.2991%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (460 samples, 0.10%)</title><rect x="51.0566%" y="965" width="0.0995%" height="15" fill="rgb(229,83,13)" fg:x="236113" fg:w="460"/><text x="51.3066%" y="975.50"></text></g><g><title>`0x7FFDD48C0DD0 (147 samples, 0.03%)</title><rect x="51.1842%" y="981" width="0.0318%" height="15" fill="rgb(241,91,40)" fg:x="236703" fg:w="147"/><text x="51.4342%" y="991.50"></text></g><g><title>`0x7FFDD48C0F53 (201 samples, 0.04%)</title><rect x="51.3328%" y="981" width="0.0435%" height="15" fill="rgb(225,3,45)" fg:x="237390" fg:w="201"/><text x="51.5828%" y="991.50"></text></g><g><title>`0x7FFDD48C0F7D (77 samples, 0.02%)</title><rect x="51.3832%" y="981" width="0.0167%" height="15" fill="rgb(244,223,14)" fg:x="237623" fg:w="77"/><text x="51.6332%" y="991.50"></text></g><g><title>`0x7FFDD48C0FC7 (95 samples, 0.02%)</title><rect x="51.4117%" y="981" width="0.0205%" height="15" fill="rgb(224,124,37)" fg:x="237755" fg:w="95"/><text x="51.6617%" y="991.50"></text></g><g><title>`0x7FFDD48C1158 (82 samples, 0.02%)</title><rect x="51.4463%" y="981" width="0.0177%" height="15" fill="rgb(251,171,30)" fg:x="237915" fg:w="82"/><text x="51.6963%" y="991.50"></text></g><g><title>`0x7FFDD48C1167 (69 samples, 0.01%)</title><rect x="51.4645%" y="981" width="0.0149%" height="15" fill="rgb(236,46,54)" fg:x="237999" fg:w="69"/><text x="51.7145%" y="991.50"></text></g><g><title>`0x7FFDD48C1409 (86 samples, 0.02%)</title><rect x="51.5088%" y="981" width="0.0186%" height="15" fill="rgb(245,213,5)" fg:x="238204" fg:w="86"/><text x="51.7588%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1,862 samples, 0.40%)</title><rect x="51.1594%" y="997" width="0.4026%" height="15" fill="rgb(230,144,27)" fg:x="236588" fg:w="1862"/><text x="51.4094%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (139 samples, 0.03%)</title><rect x="51.5319%" y="981" width="0.0301%" height="15" fill="rgb(220,86,6)" fg:x="238311" fg:w="139"/><text x="51.7819%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (116 samples, 0.03%)</title><rect x="51.5369%" y="965" width="0.0251%" height="15" fill="rgb(240,20,13)" fg:x="238334" fg:w="116"/><text x="51.7869%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1,900 samples, 0.41%)</title><rect x="51.1594%" y="1013" width="0.4109%" height="15" fill="rgb(217,89,34)" fg:x="236588" fg:w="1900"/><text x="51.4094%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (95 samples, 0.02%)</title><rect x="51.5702%" y="997" width="0.0205%" height="15" fill="rgb(229,13,5)" fg:x="238488" fg:w="95"/><text x="51.8202%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (92 samples, 0.02%)</title><rect x="51.5709%" y="981" width="0.0199%" height="15" fill="rgb(244,67,35)" fg:x="238491" fg:w="92"/><text x="51.8209%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (53 samples, 0.01%)</title><rect x="51.5793%" y="965" width="0.0115%" height="15" fill="rgb(221,40,2)" fg:x="238530" fg:w="53"/><text x="51.8293%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (2,013 samples, 0.44%)</title><rect x="51.1594%" y="1029" width="0.4353%" height="15" fill="rgb(237,157,21)" fg:x="236588" fg:w="2013"/><text x="51.4094%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box (113 samples, 0.02%)</title><rect x="51.5702%" y="1013" width="0.0244%" height="15" fill="rgb(222,94,11)" fg:x="238488" fg:w="113"/><text x="51.8202%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$24::mul (969 samples, 0.21%)</title><rect x="51.5946%" y="1029" width="0.2095%" height="15" fill="rgb(249,113,6)" fg:x="238601" fg:w="969"/><text x="51.8446%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$141::mul (862 samples, 0.19%)</title><rect x="51.6178%" y="1013" width="0.1864%" height="15" fill="rgb(238,137,36)" fg:x="238708" fg:w="862"/><text x="51.8678%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$77::sub (97 samples, 0.02%)</title><rect x="51.8435%" y="981" width="0.0210%" height="15" fill="rgb(210,102,26)" fg:x="239752" fg:w="97"/><text x="52.0935%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::sampler::impl$5::sample (278 samples, 0.06%)</title><rect x="51.8364%" y="1013" width="0.0601%" height="15" fill="rgb(218,30,30)" fg:x="239719" fg:w="278"/><text x="52.0864%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$50::sub (245 samples, 0.05%)</title><rect x="51.8435%" y="997" width="0.0530%" height="15" fill="rgb(214,67,26)" fg:x="239752" fg:w="245"/><text x="52.0935%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::Vec3::dot (148 samples, 0.03%)</title><rect x="51.8645%" y="981" width="0.0320%" height="15" fill="rgb(251,9,53)" fg:x="239849" fg:w="148"/><text x="52.1145%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_leaf (476 samples, 0.10%)</title><rect x="51.8042%" y="1029" width="0.1029%" height="15" fill="rgb(228,204,25)" fg:x="239570" fg:w="476"/><text x="52.0542%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;isomesh::mdc::octree::Vertex&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::with_capacity (48 samples, 0.01%)</title><rect x="52.1192%" y="997" width="0.0104%" height="15" fill="rgb(207,153,8)" fg:x="241027" fg:w="48"/><text x="52.3692%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;isomesh::mdc::octree::Vertex&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="52.1192%" y="981" width="0.0104%" height="15" fill="rgb(242,9,16)" fg:x="241027" fg:w="48"/><text x="52.3692%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;isomesh::mdc::octree::Vertex&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="52.1192%" y="965" width="0.0104%" height="15" fill="rgb(217,211,10)" fg:x="241027" fg:w="48"/><text x="52.3692%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (48 samples, 0.01%)</title><rect x="52.1192%" y="949" width="0.0104%" height="15" fill="rgb(219,228,52)" fg:x="241027" fg:w="48"/><text x="52.3692%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (48 samples, 0.01%)</title><rect x="52.1192%" y="933" width="0.0104%" height="15" fill="rgb(231,92,29)" fg:x="241027" fg:w="48"/><text x="52.3692%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::svd::get_symmetric_svd (57 samples, 0.01%)</title><rect x="52.1512%" y="949" width="0.0123%" height="15" fill="rgb(232,8,23)" fg:x="241175" fg:w="57"/><text x="52.4012%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::qef_solver::QEFSolver::solve (66 samples, 0.01%)</title><rect x="52.1497%" y="997" width="0.0143%" height="15" fill="rgb(216,211,34)" fg:x="241168" fg:w="66"/><text x="52.3997%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::f32::impl$0::is_nan (65 samples, 0.01%)</title><rect x="52.1499%" y="981" width="0.0141%" height="15" fill="rgb(236,151,0)" fg:x="241169" fg:w="65"/><text x="52.3999%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::svd::solve_symmetric (65 samples, 0.01%)</title><rect x="52.1499%" y="965" width="0.0141%" height="15" fill="rgb(209,168,3)" fg:x="241169" fg:w="65"/><text x="52.3999%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::arith::impl$77::sub (530 samples, 0.11%)</title><rect x="52.2075%" y="965" width="0.1146%" height="15" fill="rgb(208,129,28)" fg:x="241435" fg:w="530"/><text x="52.4575%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::sampler::impl$5::sample (1,433 samples, 0.31%)</title><rect x="52.1714%" y="997" width="0.3099%" height="15" fill="rgb(229,78,22)" fg:x="241268" fg:w="1433"/><text x="52.4214%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::impl$50::sub (1,266 samples, 0.27%)</title><rect x="52.2075%" y="981" width="0.2738%" height="15" fill="rgb(228,187,13)" fg:x="241435" fg:w="1266"/><text x="52.4575%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`glam::f32::vec3::Vec3::dot (736 samples, 0.16%)</title><rect x="52.3221%" y="965" width="0.1592%" height="15" fill="rgb(240,119,24)" fg:x="241965" fg:w="736"/><text x="52.5721%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;array$&lt;glam::f32::vec3::Vec3,8&gt;,array$&lt;glam::f32::vec3::Vec3,8&gt; (*) (410 samples, 0.09%)</title><rect x="52.4812%" y="997" width="0.0887%" height="15" fill="rgb(209,194,42)" fg:x="242701" fg:w="410"/><text x="52.7312%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::sync::Lazy&lt;array$&lt;glam::f32::vec3::Vec3,8&gt;,array$&lt;glam::f32::vec3::Vec3,8&gt; (*)()&gt;::force (54 samples, 0.01%)</title><rect x="52.5582%" y="981" width="0.0117%" height="15" fill="rgb(247,200,46)" fg:x="243057" fg:w="54"/><text x="52.8082%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::sync::OnceCell&lt;array$&lt;glam::f32::vec3::Vec3,8&gt; &gt;::get_or_init(once_cell::sync::impl$11::force::closure_env$0&lt;array$&lt;glam::f32::vec3::Vec3,8&gt;,array$&lt;glam::f32::vec3::Vec3,8&gt; (*) (54 samples, 0.01%)</title><rect x="52.5582%" y="965" width="0.0117%" height="15" fill="rgb(218,76,16)" fg:x="243057" fg:w="54"/><text x="52.8082%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::sync::OnceCell&lt;array$&lt;glam::f32::vec3::Vec3,8&gt; &gt;::get_or_try_init(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;array$&lt;glam::f32::vec3::Vec3,8&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;array$&lt;glam::f32::vec3::Vec3,8&gt;,array$&lt;glam::f32::vec3::Vec3,8&gt; (*) (54 samples, 0.01%)</title><rect x="52.5582%" y="949" width="0.0117%" height="15" fill="rgb(225,21,48)" fg:x="243057" fg:w="54"/><text x="52.8082%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::sync::OnceCell&lt;array$&lt;glam::f32::vec3::Vec3,8&gt; &gt;::get (53 samples, 0.01%)</title><rect x="52.5584%" y="933" width="0.0115%" height="15" fill="rgb(239,223,50)" fg:x="243058" fg:w="53"/><text x="52.8084%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`once_cell::imp::OnceCell&lt;array$&lt;glam::f32::vec3::Vec3,8&gt; &gt;::is_initialized (53 samples, 0.01%)</title><rect x="52.5584%" y="917" width="0.0115%" height="15" fill="rgb(244,45,21)" fg:x="243058" fg:w="53"/><text x="52.8084%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_leaf (2,777 samples, 0.60%)</title><rect x="51.9791%" y="1013" width="0.6005%" height="15" fill="rgb(232,33,43)" fg:x="240379" fg:w="2777"/><text x="52.2291%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::SphereSampler&gt; (3,112 samples, 0.67%)</title><rect x="51.9071%" y="1029" width="0.6729%" height="15" fill="rgb(209,8,3)" fg:x="240046" fg:w="3112"/><text x="52.1571%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::SphereSampler&gt; (22,557 samples, 4.88%)</title><rect x="47.7054%" y="1045" width="4.8777%" height="15" fill="rgb(214,25,53)" fg:x="220615" fg:w="22557"/><text x="47.9554%" y="1055.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (73 samples, 0.02%)</title><rect x="52.5865%" y="1045" width="0.0158%" height="15" fill="rgb(254,186,54)" fg:x="243188" fg:w="73"/><text x="52.8365%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (47 samples, 0.01%)</title><rect x="52.5922%" y="1029" width="0.0102%" height="15" fill="rgb(208,174,49)" fg:x="243214" fg:w="47"/><text x="52.8422%" y="1039.50"></text></g><g><title>`0x7FFDD48C1358 (105 samples, 0.02%)</title><rect x="52.6436%" y="1013" width="0.0227%" height="15" fill="rgb(233,191,51)" fg:x="243452" fg:w="105"/><text x="52.8936%" y="1023.50"></text></g><g><title>`0x7FFDD489469B (56 samples, 0.01%)</title><rect x="52.6542%" y="997" width="0.0121%" height="15" fill="rgb(222,134,10)" fg:x="243501" fg:w="56"/><text x="52.9042%" y="1007.50"></text></g><g><title>`0x7FFDD4841B02 (56 samples, 0.01%)</title><rect x="52.6542%" y="981" width="0.0121%" height="15" fill="rgb(230,226,20)" fg:x="243501" fg:w="56"/><text x="52.9042%" y="991.50"></text></g><g><title>`0x7FFDD48C13F0 (56 samples, 0.01%)</title><rect x="52.6542%" y="965" width="0.0121%" height="15" fill="rgb(251,111,25)" fg:x="243501" fg:w="56"/><text x="52.9042%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::drop_slow&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt; (81 samples, 0.02%)</title><rect x="52.6750%" y="1013" width="0.0175%" height="15" fill="rgb(224,40,46)" fg:x="243597" fg:w="81"/><text x="52.9250%" y="1023.50"></text></g><g><title>`0x7FFDD2093160 (152 samples, 0.03%)</title><rect x="52.7757%" y="949" width="0.0329%" height="15" fill="rgb(236,108,47)" fg:x="244063" fg:w="152"/><text x="53.0257%" y="959.50"></text></g><g><title>`0x7FFDD4878D71 (128 samples, 0.03%)</title><rect x="52.8320%" y="933" width="0.0277%" height="15" fill="rgb(234,93,0)" fg:x="244323" fg:w="128"/><text x="53.0820%" y="943.50"></text></g><g><title>`0x7FFDD4878D96 (47 samples, 0.01%)</title><rect x="52.8607%" y="933" width="0.0102%" height="15" fill="rgb(224,213,32)" fg:x="244456" fg:w="47"/><text x="53.1107%" y="943.50"></text></g><g><title>`0x7FFDD4878DB0 (207 samples, 0.04%)</title><rect x="52.8709%" y="933" width="0.0448%" height="15" fill="rgb(251,11,48)" fg:x="244503" fg:w="207"/><text x="53.1209%" y="943.50"></text></g><g><title>`0x7FFDD4878E2C (101 samples, 0.02%)</title><rect x="52.9282%" y="933" width="0.0218%" height="15" fill="rgb(236,173,5)" fg:x="244768" fg:w="101"/><text x="53.1782%" y="943.50"></text></g><g><title>`0x7FFDD4878E60 (61 samples, 0.01%)</title><rect x="52.9500%" y="933" width="0.0132%" height="15" fill="rgb(230,95,12)" fg:x="244869" fg:w="61"/><text x="53.2000%" y="943.50"></text></g><g><title>`0x7FFDD4878F04 (67 samples, 0.01%)</title><rect x="52.9643%" y="933" width="0.0145%" height="15" fill="rgb(232,209,1)" fg:x="244935" fg:w="67"/><text x="53.2143%" y="943.50"></text></g><g><title>`0x7FFDD2093195 (760 samples, 0.16%)</title><rect x="52.8147%" y="949" width="0.1643%" height="15" fill="rgb(232,6,1)" fg:x="244243" fg:w="760"/><text x="53.0647%" y="959.50"></text></g><g><title>`0x7FFDD49A3410 (80 samples, 0.02%)</title><rect x="52.9866%" y="933" width="0.0173%" height="15" fill="rgb(210,224,50)" fg:x="245038" fg:w="80"/><text x="53.2366%" y="943.50"></text></g><g><title>`0x7FFDD20931A9 (11,043 samples, 2.39%)</title><rect x="52.9790%" y="949" width="2.3879%" height="15" fill="rgb(228,127,35)" fg:x="245003" fg:w="11043"/><text x="53.2290%" y="959.50">`0..</text></g><g><title>`0x7FFDD49A3414 (10,927 samples, 2.36%)</title><rect x="53.0041%" y="933" width="2.3628%" height="15" fill="rgb(245,102,45)" fg:x="245119" fg:w="10927"/><text x="53.2541%" y="943.50">`0..</text></g><g><title>`0x7FFDD20931C3 (54 samples, 0.01%)</title><rect x="55.3678%" y="949" width="0.0117%" height="15" fill="rgb(214,1,49)" fg:x="256050" fg:w="54"/><text x="55.6178%" y="959.50"></text></g><g><title>`0x7FFDD208895F (7,058 samples, 1.53%)</title><rect x="55.4398%" y="933" width="1.5262%" height="15" fill="rgb(226,163,40)" fg:x="256383" fg:w="7058"/><text x="55.6898%" y="943.50"></text></g><g><title>`0x7FFDD49A32B4 (6,914 samples, 1.50%)</title><rect x="55.4709%" y="917" width="1.4951%" height="15" fill="rgb(239,212,28)" fg:x="256527" fg:w="6914"/><text x="55.7209%" y="927.50"></text></g><g><title>`0x7FFDD20889FB (534 samples, 0.12%)</title><rect x="56.9695%" y="933" width="0.1155%" height="15" fill="rgb(220,20,13)" fg:x="263457" fg:w="534"/><text x="57.2195%" y="943.50"></text></g><g><title>`0x7FFDD2132750 (54 samples, 0.01%)</title><rect x="57.0884%" y="933" width="0.0117%" height="15" fill="rgb(210,164,35)" fg:x="264007" fg:w="54"/><text x="57.3384%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::inner (20,290 samples, 4.39%)</title><rect x="52.7448%" y="981" width="4.3875%" height="15" fill="rgb(248,109,41)" fg:x="243920" fg:w="20290"/><text x="52.9948%" y="991.50">mdc_b..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt; &gt; &gt;::as_ref (20,290 samples, 4.39%)</title><rect x="52.7448%" y="965" width="4.3875%" height="15" fill="rgb(238,23,50)" fg:x="243920" fg:w="20290"/><text x="52.9948%" y="975.50">mdc_b..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::join (8,060 samples, 1.74%)</title><rect x="55.3894%" y="949" width="1.7429%" height="15" fill="rgb(211,48,49)" fg:x="256150" fg:w="8060"/><text x="55.6394%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (97 samples, 0.02%)</title><rect x="57.1113%" y="933" width="0.0210%" height="15" fill="rgb(223,36,21)" fg:x="264113" fg:w="97"/><text x="57.3613%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (97 samples, 0.02%)</title><rect x="57.1113%" y="917" width="0.0210%" height="15" fill="rgb(207,123,46)" fg:x="264113" fg:w="97"/><text x="57.3613%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (97 samples, 0.02%)</title><rect x="57.1113%" y="901" width="0.0210%" height="15" fill="rgb(240,218,32)" fg:x="264113" fg:w="97"/><text x="57.3613%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::os::windows::io::handle::impl$25::drop (97 samples, 0.02%)</title><rect x="57.1113%" y="885" width="0.0210%" height="15" fill="rgb(252,5,43)" fg:x="264113" fg:w="97"/><text x="57.3613%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::get_mut (20,536 samples, 4.44%)</title><rect x="52.6925%" y="1013" width="4.4407%" height="15" fill="rgb(252,84,19)" fg:x="243678" fg:w="20536"/><text x="52.9425%" y="1023.50">mdc_b..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::is_unique (20,536 samples, 4.44%)</title><rect x="52.6925%" y="997" width="4.4407%" height="15" fill="rgb(243,152,39)" fg:x="243678" fg:w="20536"/><text x="52.9425%" y="1007.50">mdc_b..</text></g><g><title>`0x7FFDD4894624 (100 samples, 0.02%)</title><rect x="57.2508%" y="933" width="0.0216%" height="15" fill="rgb(234,160,15)" fg:x="264758" fg:w="100"/><text x="57.5008%" y="943.50"></text></g><g><title>`0x7FFDD48C13F0 (98 samples, 0.02%)</title><rect x="57.2512%" y="917" width="0.0212%" height="15" fill="rgb(237,34,20)" fg:x="264760" fg:w="98"/><text x="57.5012%" y="927.50"></text></g><g><title>`0x7FFDD48C1358 (169 samples, 0.04%)</title><rect x="57.2488%" y="949" width="0.0365%" height="15" fill="rgb(229,97,13)" fg:x="264749" fg:w="169"/><text x="57.4988%" y="959.50"></text></g><g><title>`0x7FFDD489469B (58 samples, 0.01%)</title><rect x="57.2728%" y="933" width="0.0125%" height="15" fill="rgb(234,71,50)" fg:x="264860" fg:w="58"/><text x="57.5228%" y="943.50"></text></g><g><title>`0x7FFDD4841B02 (57 samples, 0.01%)</title><rect x="57.2731%" y="917" width="0.0123%" height="15" fill="rgb(253,155,4)" fg:x="264861" fg:w="57"/><text x="57.5231%" y="927.50"></text></g><g><title>`0x7FFDD48C13F0 (56 samples, 0.01%)</title><rect x="57.2733%" y="901" width="0.0121%" height="15" fill="rgb(222,185,37)" fg:x="264862" fg:w="56"/><text x="57.5233%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$48::drop (421 samples, 0.09%)</title><rect x="57.2984%" y="917" width="0.0910%" height="15" fill="rgb(251,177,13)" fg:x="264978" fg:w="421"/><text x="57.5484%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::drop_slow&lt;std::thread::Inner,alloc::alloc::Global&gt; (435 samples, 0.09%)</title><rect x="57.2962%" y="949" width="0.0941%" height="15" fill="rgb(250,179,40)" fg:x="264968" fg:w="435"/><text x="57.5462%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (425 samples, 0.09%)</title><rect x="57.2984%" y="933" width="0.0919%" height="15" fill="rgb(242,44,2)" fg:x="264978" fg:w="425"/><text x="57.5484%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (1,259 samples, 0.27%)</title><rect x="57.1332%" y="1013" width="0.2722%" height="15" fill="rgb(216,177,13)" fg:x="264214" fg:w="1259"/><text x="57.3832%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (1,259 samples, 0.27%)</title><rect x="57.1332%" y="997" width="0.2722%" height="15" fill="rgb(216,106,43)" fg:x="264214" fg:w="1259"/><text x="57.3832%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::inner (1,132 samples, 0.24%)</title><rect x="57.1606%" y="981" width="0.2448%" height="15" fill="rgb(216,183,2)" fg:x="264341" fg:w="1132"/><text x="57.4106%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt; &gt; &gt;::as_ref (1,132 samples, 0.24%)</title><rect x="57.1606%" y="965" width="0.2448%" height="15" fill="rgb(249,75,3)" fg:x="264341" fg:w="1132"/><text x="57.4106%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (70 samples, 0.02%)</title><rect x="57.3903%" y="949" width="0.0151%" height="15" fill="rgb(219,67,39)" fg:x="265403" fg:w="70"/><text x="57.6403%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::impl$0::dealloc (60 samples, 0.01%)</title><rect x="57.3924%" y="933" width="0.0130%" height="15" fill="rgb(253,228,2)" fg:x="265413" fg:w="60"/><text x="57.6424%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (81 samples, 0.02%)</title><rect x="57.4054%" y="1013" width="0.0175%" height="15" fill="rgb(235,138,27)" fg:x="265473" fg:w="81"/><text x="57.6554%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(core::pin::Pin&lt;alloc::sync::Arc (81 samples, 0.02%)</title><rect x="57.4054%" y="997" width="0.0175%" height="15" fill="rgb(236,97,51)" fg:x="265473" fg:w="81"/><text x="57.6554%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place(alloc::sync::Arc (81 samples, 0.02%)</title><rect x="57.4054%" y="981" width="0.0175%" height="15" fill="rgb(240,80,30)" fg:x="265473" fg:w="81"/><text x="57.6554%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (81 samples, 0.02%)</title><rect x="57.4054%" y="965" width="0.0175%" height="15" fill="rgb(230,178,19)" fg:x="265473" fg:w="81"/><text x="57.6554%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt;,alloc::boxed::Box&lt;dyn$ (54 samples, 0.01%)</title><rect x="57.4292%" y="1013" width="0.0117%" height="15" fill="rgb(210,190,27)" fg:x="265583" fg:w="54"/><text x="57.6792%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::join(std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box (22,402 samples, 4.84%)</title><rect x="52.6023%" y="1045" width="4.8442%" height="15" fill="rgb(222,107,31)" fg:x="243261" fg:w="22402"/><text x="52.8523%" y="1055.50">mdc_be..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::JoinInner&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::join&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::JoinInner&lt;tuple$&lt;bool,alloc::boxed::Box (22,397 samples, 4.84%)</title><rect x="52.6034%" y="1029" width="4.8431%" height="15" fill="rgb(216,127,34)" fg:x="243266" fg:w="22397"/><text x="52.8534%" y="1039.50">mdc_be..</text></g><g><title>`0x7FFDD48920EF (54 samples, 0.01%)</title><rect x="57.6108%" y="917" width="0.0117%" height="15" fill="rgb(234,116,52)" fg:x="266423" fg:w="54"/><text x="57.8608%" y="927.50"></text></g><g><title>`0x7FFDD48923C9 (77 samples, 0.02%)</title><rect x="57.6260%" y="917" width="0.0167%" height="15" fill="rgb(222,124,15)" fg:x="266493" fg:w="77"/><text x="57.8760%" y="927.50"></text></g><g><title>`0x7FFDD4890E14 (76 samples, 0.02%)</title><rect x="57.6262%" y="901" width="0.0164%" height="15" fill="rgb(231,179,28)" fg:x="266494" fg:w="76"/><text x="57.8762%" y="911.50"></text></g><g><title>`0x7FFDD4891241 (75 samples, 0.02%)</title><rect x="57.6264%" y="885" width="0.0162%" height="15" fill="rgb(226,93,45)" fg:x="266495" fg:w="75"/><text x="57.8764%" y="895.50"></text></g><g><title>`0x7FFDD4890F54 (363 samples, 0.08%)</title><rect x="57.5648%" y="933" width="0.0785%" height="15" fill="rgb(215,8,51)" fg:x="266210" fg:w="363"/><text x="57.8148%" y="943.50"></text></g><g><title>`0x7FFDD4890E14 (379 samples, 0.08%)</title><rect x="57.5624%" y="949" width="0.0820%" height="15" fill="rgb(223,106,5)" fg:x="266199" fg:w="379"/><text x="57.8124%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_alloc (50 samples, 0.01%)</title><rect x="57.6491%" y="949" width="0.0108%" height="15" fill="rgb(250,191,5)" fg:x="266600" fg:w="50"/><text x="57.8991%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (612 samples, 0.13%)</title><rect x="57.5408%" y="981" width="0.1323%" height="15" fill="rgb(242,132,44)" fg:x="266099" fg:w="612"/><text x="57.7908%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (542 samples, 0.12%)</title><rect x="57.5559%" y="965" width="0.1172%" height="15" fill="rgb(251,152,29)" fg:x="266169" fg:w="542"/><text x="57.8059%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::process_heap_alloc (61 samples, 0.01%)</title><rect x="57.6599%" y="949" width="0.0132%" height="15" fill="rgb(218,179,5)" fg:x="266650" fg:w="61"/><text x="57.9099%" y="959.50"></text></g><g><title>`0x7FFDD4891870 (65 samples, 0.01%)</title><rect x="57.7479%" y="901" width="0.0141%" height="15" fill="rgb(227,67,19)" fg:x="267057" fg:w="65"/><text x="57.9979%" y="911.50"></text></g><g><title>`0x7FFDD48920EF (57 samples, 0.01%)</title><rect x="57.7791%" y="901" width="0.0123%" height="15" fill="rgb(233,119,31)" fg:x="267201" fg:w="57"/><text x="58.0291%" y="911.50"></text></g><g><title>`0x7FFDD48669B0 (50 samples, 0.01%)</title><rect x="57.8009%" y="853" width="0.0108%" height="15" fill="rgb(241,120,22)" fg:x="267302" fg:w="50"/><text x="58.0509%" y="863.50"></text></g><g><title>`0x7FFDD48923C9 (133 samples, 0.03%)</title><rect x="57.7955%" y="901" width="0.0288%" height="15" fill="rgb(224,102,30)" fg:x="267277" fg:w="133"/><text x="58.0455%" y="911.50"></text></g><g><title>`0x7FFDD4890E14 (133 samples, 0.03%)</title><rect x="57.7955%" y="885" width="0.0288%" height="15" fill="rgb(210,164,37)" fg:x="267277" fg:w="133"/><text x="58.0455%" y="895.50"></text></g><g><title>`0x7FFDD4891241 (133 samples, 0.03%)</title><rect x="57.7955%" y="869" width="0.0288%" height="15" fill="rgb(226,191,16)" fg:x="267277" fg:w="133"/><text x="58.0455%" y="879.50"></text></g><g><title>`0x7FFDD4890F54 (659 samples, 0.14%)</title><rect x="57.6841%" y="917" width="0.1425%" height="15" fill="rgb(214,40,45)" fg:x="266762" fg:w="659"/><text x="57.9341%" y="927.50"></text></g><g><title>`0x7FFDD4890E14 (700 samples, 0.15%)</title><rect x="57.6759%" y="933" width="0.1514%" height="15" fill="rgb(244,29,26)" fg:x="266724" fg:w="700"/><text x="57.9259%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (786 samples, 0.17%)</title><rect x="57.6735%" y="965" width="0.1700%" height="15" fill="rgb(216,16,5)" fg:x="266713" fg:w="786"/><text x="57.9235%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (786 samples, 0.17%)</title><rect x="57.6735%" y="949" width="0.1700%" height="15" fill="rgb(249,76,35)" fg:x="266713" fg:w="786"/><text x="57.9235%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::new(std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (933 samples, 0.20%)</title><rect x="57.6731%" y="981" width="0.2018%" height="15" fill="rgb(207,11,44)" fg:x="266711" fg:w="933"/><text x="57.9231%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::from_inner(core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (145 samples, 0.03%)</title><rect x="57.8435%" y="965" width="0.0314%" height="15" fill="rgb(228,190,49)" fg:x="267499" fg:w="145"/><text x="58.0935%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,alloc::alloc::Global&gt;::from_inner_in(core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;bool,alloc::boxed::Box (145 samples, 0.03%)</title><rect x="57.8435%" y="949" width="0.0314%" height="15" fill="rgb(214,173,12)" fg:x="267499" fg:w="145"/><text x="58.0935%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result (156 samples, 0.03%)</title><rect x="57.8844%" y="981" width="0.0337%" height="15" fill="rgb(218,26,35)" fg:x="267688" fg:w="156"/><text x="58.1344%" y="991.50"></text></g><g><title>`0x7FFDD2140C15 (534 samples, 0.12%)</title><rect x="57.9564%" y="949" width="0.1155%" height="15" fill="rgb(220,200,19)" fg:x="268021" fg:w="534"/><text x="58.2064%" y="959.50"></text></g><g><title>`0x7FFDD2140C8F (151 samples, 0.03%)</title><rect x="58.0755%" y="949" width="0.0327%" height="15" fill="rgb(239,95,49)" fg:x="268572" fg:w="151"/><text x="58.3255%" y="959.50"></text></g><g><title>`0x7FFDD488868E (49 samples, 0.01%)</title><rect x="58.1878%" y="933" width="0.0106%" height="15" fill="rgb(235,85,53)" fg:x="269091" fg:w="49"/><text x="58.4378%" y="943.50"></text></g><g><title>`0x7FFDD2140E08 (225 samples, 0.05%)</title><rect x="58.1545%" y="949" width="0.0487%" height="15" fill="rgb(233,133,31)" fg:x="268937" fg:w="225"/><text x="58.4045%" y="959.50"></text></g><g><title>`0x7FFDD2140ED9 (141,712 samples, 30.64%)</title><rect x="58.2165%" y="949" width="30.6435%" height="15" fill="rgb(218,25,20)" fg:x="269224" fg:w="141712"/><text x="58.4665%" y="959.50">`0x7FFDD2140ED9</text></g><g><title>`0x7FFDD49A4B44 (141,644 samples, 30.63%)</title><rect x="58.2312%" y="933" width="30.6288%" height="15" fill="rgb(252,210,38)" fg:x="269292" fg:w="141644"/><text x="58.4812%" y="943.50">`0x7FFDD49A4B44</text></g><g><title>`0x7FFDD2140EDE (52 samples, 0.01%)</title><rect x="88.8601%" y="949" width="0.0112%" height="15" fill="rgb(242,134,21)" fg:x="410936" fg:w="52"/><text x="89.1101%" y="959.50"></text></g><g><title>`0x7FFDD21410CC (62 samples, 0.01%)</title><rect x="88.8745%" y="949" width="0.0134%" height="15" fill="rgb(213,28,48)" fg:x="411003" fg:w="62"/><text x="89.1245%" y="959.50"></text></g><g><title>`0x7FFDD2141109 (96 samples, 0.02%)</title><rect x="88.8908%" y="949" width="0.0208%" height="15" fill="rgb(250,196,2)" fg:x="411078" fg:w="96"/><text x="89.1408%" y="959.50"></text></g><g><title>`0x7FFDD22090D7 (72 samples, 0.02%)</title><rect x="88.9115%" y="933" width="0.0156%" height="15" fill="rgb(227,5,17)" fg:x="411174" fg:w="72"/><text x="89.1615%" y="943.50"></text></g><g><title>`0x7FFDD2141111 (75 samples, 0.02%)</title><rect x="88.9115%" y="949" width="0.0162%" height="15" fill="rgb(221,226,24)" fg:x="411174" fg:w="75"/><text x="89.1615%" y="959.50"></text></g><g><title>`0x7FFDD379313D (143,293 samples, 30.99%)</title><rect x="57.9445%" y="965" width="30.9854%" height="15" fill="rgb(211,5,48)" fg:x="267966" fg:w="143293"/><text x="58.1945%" y="975.50">`0x7FFDD379313D</text></g><g><title>`0x7FFDD3793142 (124 samples, 0.03%)</title><rect x="88.9299%" y="965" width="0.0268%" height="15" fill="rgb(219,150,6)" fg:x="411259" fg:w="124"/><text x="89.1799%" y="975.50"></text></g><g><title>`0x7FFDD48916E1 (59 samples, 0.01%)</title><rect x="88.9794%" y="901" width="0.0128%" height="15" fill="rgb(251,46,16)" fg:x="411488" fg:w="59"/><text x="89.2294%" y="911.50"></text></g><g><title>`0x7FFDD48917B0 (60 samples, 0.01%)</title><rect x="89.0023%" y="901" width="0.0130%" height="15" fill="rgb(220,204,40)" fg:x="411594" fg:w="60"/><text x="89.2523%" y="911.50"></text></g><g><title>`0x7FFDD4891870 (59 samples, 0.01%)</title><rect x="89.0227%" y="901" width="0.0128%" height="15" fill="rgb(211,85,2)" fg:x="411688" fg:w="59"/><text x="89.2727%" y="911.50"></text></g><g><title>`0x7FFDD48923C9 (51 samples, 0.01%)</title><rect x="89.0646%" y="901" width="0.0110%" height="15" fill="rgb(229,17,7)" fg:x="411882" fg:w="51"/><text x="89.3146%" y="911.50"></text></g><g><title>`0x7FFDD4890E14 (50 samples, 0.01%)</title><rect x="89.0648%" y="885" width="0.0108%" height="15" fill="rgb(239,72,28)" fg:x="411883" fg:w="50"/><text x="89.3148%" y="895.50"></text></g><g><title>`0x7FFDD4891241 (47 samples, 0.01%)</title><rect x="89.0655%" y="869" width="0.0102%" height="15" fill="rgb(230,47,54)" fg:x="411886" fg:w="47"/><text x="89.3155%" y="879.50"></text></g><g><title>`0x7FFDD4890F54 (500 samples, 0.11%)</title><rect x="88.9699%" y="917" width="0.1081%" height="15" fill="rgb(214,50,8)" fg:x="411444" fg:w="500"/><text x="89.2199%" y="927.50"></text></g><g><title>`0x7FFDD4890E14 (552 samples, 0.12%)</title><rect x="88.9597%" y="933" width="0.1194%" height="15" fill="rgb(216,198,43)" fg:x="411397" fg:w="552"/><text x="89.2097%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$0::new (581 samples, 0.13%)</title><rect x="88.9571%" y="965" width="0.1256%" height="15" fill="rgb(234,20,35)" fg:x="411385" fg:w="581"/><text x="89.2071%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::exchange_malloc (581 samples, 0.13%)</title><rect x="88.9571%" y="949" width="0.1256%" height="15" fill="rgb(254,45,19)" fg:x="411385" fg:w="581"/><text x="89.2071%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::Thread::new (144,243 samples, 31.19%)</title><rect x="57.9192%" y="981" width="31.1908%" height="15" fill="rgb(219,14,44)" fg:x="267849" fg:w="144243"/><text x="58.1692%" y="991.50">mdc_bench-e05db9bcf8254872.exe`std::sys::pal::wind..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::convert::impl$6::try_into (126 samples, 0.03%)</title><rect x="89.0828%" y="965" width="0.0272%" height="15" fill="rgb(217,220,26)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::os::windows::io::handle::impl$9::try_from (126 samples, 0.03%)</title><rect x="89.0828%" y="949" width="0.0272%" height="15" fill="rgb(213,158,28)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::os::windows::io::handle::HandleOrNull::is_valid (126 samples, 0.03%)</title><rect x="89.0828%" y="933" width="0.0272%" height="15" fill="rgb(252,51,52)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::mut_ptr::impl$0::is_null (126 samples, 0.03%)</title><rect x="89.0828%" y="917" width="0.0272%" height="15" fill="rgb(246,89,16)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::const_ptr::impl$0::is_null (126 samples, 0.03%)</title><rect x="89.0828%" y="901" width="0.0272%" height="15" fill="rgb(216,158,49)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::const_ptr::impl$0::is_null::runtime (126 samples, 0.03%)</title><rect x="89.0828%" y="885" width="0.0272%" height="15" fill="rgb(236,107,19)" fg:x="411966" fg:w="126"/><text x="89.3328%" y="895.50"></text></g><g><title>`0x7FFDD48916E1 (70 samples, 0.02%)</title><rect x="89.1329%" y="837" width="0.0151%" height="15" fill="rgb(228,185,30)" fg:x="412198" fg:w="70"/><text x="89.3829%" y="847.50"></text></g><g><title>`0x7FFDD4891870 (77 samples, 0.02%)</title><rect x="89.1710%" y="837" width="0.0167%" height="15" fill="rgb(246,134,8)" fg:x="412374" fg:w="77"/><text x="89.4210%" y="847.50"></text></g><g><title>`0x7FFDD48923C9 (95 samples, 0.02%)</title><rect x="89.2233%" y="837" width="0.0205%" height="15" fill="rgb(214,143,50)" fg:x="412616" fg:w="95"/><text x="89.4733%" y="847.50"></text></g><g><title>`0x7FFDD4890E14 (93 samples, 0.02%)</title><rect x="89.2238%" y="821" width="0.0201%" height="15" fill="rgb(228,75,8)" fg:x="412618" fg:w="93"/><text x="89.4738%" y="831.50"></text></g><g><title>`0x7FFDD4891241 (86 samples, 0.02%)</title><rect x="89.2253%" y="805" width="0.0186%" height="15" fill="rgb(207,175,4)" fg:x="412625" fg:w="86"/><text x="89.4753%" y="815.50"></text></g><g><title>`0x7FFDD4890F54 (589 samples, 0.13%)</title><rect x="89.1178%" y="853" width="0.1274%" height="15" fill="rgb(205,108,24)" fg:x="412128" fg:w="589"/><text x="89.3678%" y="863.50"></text></g><g><title>`0x7FFDD4890E14 (598 samples, 0.13%)</title><rect x="89.1169%" y="869" width="0.1293%" height="15" fill="rgb(244,120,49)" fg:x="412124" fg:w="598"/><text x="89.3669%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::alloc (653 samples, 0.14%)</title><rect x="89.1161%" y="885" width="0.1412%" height="15" fill="rgb(223,47,38)" fg:x="412120" fg:w="653"/><text x="89.3661%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::new_uninit (674 samples, 0.15%)</title><rect x="89.1154%" y="965" width="0.1457%" height="15" fill="rgb(229,179,11)" fg:x="412117" fg:w="674"/><text x="89.3654%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc::allocate_for_layout (674 samples, 0.15%)</title><rect x="89.1154%" y="949" width="0.1457%" height="15" fill="rgb(231,122,1)" fg:x="412117" fg:w="674"/><text x="89.3654%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$14::new_uninit::closure$0 (672 samples, 0.15%)</title><rect x="89.1159%" y="933" width="0.1453%" height="15" fill="rgb(245,119,9)" fg:x="412119" fg:w="672"/><text x="89.3659%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::allocate (672 samples, 0.15%)</title><rect x="89.1159%" y="917" width="0.1453%" height="15" fill="rgb(241,163,25)" fg:x="412119" fg:w="672"/><text x="89.3659%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::alloc_impl (672 samples, 0.15%)</title><rect x="89.1159%" y="901" width="0.1453%" height="15" fill="rgb(217,214,3)" fg:x="412119" fg:w="672"/><text x="89.3659%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Thread::new (696 samples, 0.15%)</title><rect x="89.1111%" y="981" width="0.1505%" height="15" fill="rgb(240,86,28)" fg:x="412097" fg:w="696"/><text x="89.3611%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::ThreadId::new (176 samples, 0.04%)</title><rect x="89.2616%" y="981" width="0.0381%" height="15" fill="rgb(215,47,9)" fg:x="412793" fg:w="176"/><text x="89.5116%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once (98 samples, 0.02%)</title><rect x="89.3291%" y="869" width="0.0212%" height="15" fill="rgb(252,25,45)" fg:x="413105" fg:w="98"/><text x="89.5791%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::SPAWN_HOOKS::constant$0::closure$0 (98 samples, 0.02%)</title><rect x="89.3291%" y="853" width="0.0212%" height="15" fill="rgb(251,164,9)" fg:x="413105" fg:w="98"/><text x="89.5791%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::Storage::get (47 samples, 0.01%)</title><rect x="89.3401%" y="837" width="0.0102%" height="15" fill="rgb(233,194,0)" fg:x="413156" fg:w="47"/><text x="89.5901%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::get (47 samples, 0.01%)</title><rect x="89.3401%" y="821" width="0.0102%" height="15" fill="rgb(249,111,24)" fg:x="413156" fg:w="47"/><text x="89.5901%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Inner&gt; &gt;::as_ref (137 samples, 0.03%)</title><rect x="89.3232%" y="917" width="0.0296%" height="15" fill="rgb(250,223,3)" fg:x="413078" fg:w="137"/><text x="89.5732%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::run_spawn_hooks (136 samples, 0.03%)</title><rect x="89.3235%" y="901" width="0.0294%" height="15" fill="rgb(236,178,37)" fg:x="413079" fg:w="136"/><text x="89.5735%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::local::LocalKey::try_with (110 samples, 0.02%)</title><rect x="89.3291%" y="885" width="0.0238%" height="15" fill="rgb(241,158,50)" fg:x="413105" fg:w="110"/><text x="89.5791%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,std::io::error::Error&gt; &gt;, ref$ (147,554 samples, 31.91%)</title><rect x="57.4465%" y="1029" width="31.9068%" height="15" fill="rgb(213,121,41)" fg:x="265663" fg:w="147554"/><text x="57.6965%" y="1039.50">mdc_bench-e05db9bcf8254872.exe`enum2$&lt;core::result::..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (147,476 samples, 31.89%)</title><rect x="57.4634%" y="1013" width="31.8899%" height="15" fill="rgb(240,92,3)" fg:x="265741" fg:w="147476"/><text x="57.7134%" y="1023.50">mdc_bench-e05db9bcf8254872.exe`std::thread::Builder:..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (147,456 samples, 31.89%)</title><rect x="57.4677%" y="997" width="31.8856%" height="15" fill="rgb(205,123,3)" fg:x="265761" fg:w="147456"/><text x="57.7177%" y="1007.50">mdc_bench-e05db9bcf8254872.exe`std::thread::Builder:..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$23::clone (248 samples, 0.05%)</title><rect x="89.2997%" y="981" width="0.0536%" height="15" fill="rgb(205,97,47)" fg:x="412969" fg:w="248"/><text x="89.5497%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::pin::impl$28::clone(core::pin::Pin&lt;alloc::sync::Arc (248 samples, 0.05%)</title><rect x="89.2997%" y="965" width="0.0536%" height="15" fill="rgb(247,152,14)" fg:x="412969" fg:w="248"/><text x="89.5497%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$28::clone(alloc::sync::Arc (248 samples, 0.05%)</title><rect x="89.2997%" y="949" width="0.0536%" height="15" fill="rgb(248,195,53)" fg:x="412969" fg:w="248"/><text x="89.5497%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Inner,alloc::alloc::Global&gt;::inner (139 samples, 0.03%)</title><rect x="89.3232%" y="933" width="0.0301%" height="15" fill="rgb(226,201,16)" fg:x="413078" fg:w="139"/><text x="89.5732%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::manually_drop::ManuallyDrop&lt;tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;::new(tuple$&lt;bool,alloc::boxed::Box (203,353 samples, 43.97%)</title><rect x="45.3813%" y="1109" width="43.9727%" height="15" fill="rgb(205,98,0)" fg:x="209867" fg:w="203353"/><text x="45.6313%" y="1119.50">mdc_bench-e05db9bcf8254872.exe`core::mem::manually_drop::ManuallyDrop&lt;tu..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (203,266 samples, 43.95%)</title><rect x="45.4001%" y="1093" width="43.9539%" height="15" fill="rgb(214,191,48)" fg:x="209954" fg:w="203266"/><text x="45.6501%" y="1103.50">mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_b..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::impl$3::construct_nodes::closure$0(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (203,260 samples, 43.95%)</title><rect x="45.4014%" y="1077" width="43.9526%" height="15" fill="rgb(237,112,39)" fg:x="209960" fg:w="203260"/><text x="45.6514%" y="1087.50">mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::impl$3::construct_n..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::construct_nodes&lt;isomesh::mdc::sampler::SphereSampler&gt; (203,208 samples, 43.94%)</title><rect x="45.4126%" y="1061" width="43.9413%" height="15" fill="rgb(247,203,27)" fg:x="210012" fg:w="203208"/><text x="45.6626%" y="1071.50">mdc_bench-e05db9bcf8254872.exe`isomesh::mdc::octree::OctreeNode::constru..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawn(isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0 (147,557 samples, 31.91%)</title><rect x="57.4465%" y="1045" width="31.9075%" height="15" fill="rgb(235,124,28)" fg:x="265663" fg:w="147557"/><text x="57.6965%" y="1055.50">mdc_bench-e05db9bcf8254872.exe`std::thread::spawn(is..</text></g><g><title>`0x7FFDD4890F4F (93 samples, 0.02%)</title><rect x="89.4456%" y="661" width="0.0201%" height="15" fill="rgb(208,207,46)" fg:x="413644" fg:w="93"/><text x="89.6956%" y="671.50"></text></g><g><title>`0x7FFDD4891581 (78 samples, 0.02%)</title><rect x="89.4863%" y="645" width="0.0169%" height="15" fill="rgb(234,176,4)" fg:x="413832" fg:w="78"/><text x="89.7363%" y="655.50"></text></g><g><title>`0x7FFDD4891583 (61 samples, 0.01%)</title><rect x="89.5036%" y="645" width="0.0132%" height="15" fill="rgb(230,133,28)" fg:x="413912" fg:w="61"/><text x="89.7536%" y="655.50"></text></g><g><title>`0x7FFDD48916D5 (64 samples, 0.01%)</title><rect x="89.5607%" y="645" width="0.0138%" height="15" fill="rgb(211,137,40)" fg:x="414176" fg:w="64"/><text x="89.8107%" y="655.50"></text></g><g><title>`0x7FFDD48916E1 (90 samples, 0.02%)</title><rect x="89.5749%" y="645" width="0.0195%" height="15" fill="rgb(254,35,13)" fg:x="414242" fg:w="90"/><text x="89.8249%" y="655.50"></text></g><g><title>`0x7FFDD48917B0 (106 samples, 0.02%)</title><rect x="89.6104%" y="645" width="0.0229%" height="15" fill="rgb(225,49,51)" fg:x="414406" fg:w="106"/><text x="89.8604%" y="655.50"></text></g><g><title>`0x7FFDD4891870 (94 samples, 0.02%)</title><rect x="89.6407%" y="645" width="0.0203%" height="15" fill="rgb(251,10,15)" fg:x="414546" fg:w="94"/><text x="89.8907%" y="655.50"></text></g><g><title>`0x7FFDD4890F54 (1,046 samples, 0.23%)</title><rect x="89.4657%" y="661" width="0.2262%" height="15" fill="rgb(228,207,15)" fg:x="413737" fg:w="1046"/><text x="89.7157%" y="671.50"></text></g><g><title>`0x7FFDD4890E14 (1,249 samples, 0.27%)</title><rect x="89.4234%" y="677" width="0.2701%" height="15" fill="rgb(241,99,19)" fg:x="413541" fg:w="1249"/><text x="89.6734%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_alloc (47 samples, 0.01%)</title><rect x="89.6945%" y="677" width="0.0102%" height="15" fill="rgb(207,104,49)" fg:x="414795" fg:w="47"/><text x="89.9445%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::grow (1,471 samples, 0.32%)</title><rect x="89.4097%" y="725" width="0.3181%" height="15" fill="rgb(234,99,18)" fg:x="413478" fg:w="1471"/><text x="89.6597%" y="735.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::Global::grow_impl (1,471 samples, 0.32%)</title><rect x="89.4097%" y="709" width="0.3181%" height="15" fill="rgb(213,191,49)" fg:x="413478" fg:w="1471"/><text x="89.6597%" y="719.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch (1,471 samples, 0.32%)</title><rect x="89.4097%" y="693" width="0.3181%" height="15" fill="rgb(210,226,19)" fg:x="413478" fg:w="1471"/><text x="89.6597%" y="703.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::alloc::windows::process_heap_alloc (107 samples, 0.02%)</title><rect x="89.7047%" y="677" width="0.0231%" height="15" fill="rgb(229,97,18)" fg:x="414842" fg:w="107"/><text x="89.9547%" y="687.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::intrinsics::unlikely (84 samples, 0.02%)</title><rect x="89.7097%" y="661" width="0.0182%" height="15" fill="rgb(211,167,15)" fg:x="414865" fg:w="84"/><text x="89.9597%" y="671.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::as_mut_ptr (1,577 samples, 0.34%)</title><rect x="89.3881%" y="869" width="0.3410%" height="15" fill="rgb(210,169,34)" fg:x="413378" fg:w="1577"/><text x="89.6381%" y="879.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec::ptr (1,574 samples, 0.34%)</title><rect x="89.3888%" y="853" width="0.3404%" height="15" fill="rgb(241,121,31)" fg:x="413381" fg:w="1574"/><text x="89.6388%" y="863.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::ptr (1,574 samples, 0.34%)</title><rect x="89.3888%" y="837" width="0.3404%" height="15" fill="rgb(232,40,11)" fg:x="413381" fg:w="1574"/><text x="89.6388%" y="847.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::non_null (1,574 samples, 0.34%)</title><rect x="89.3888%" y="821" width="0.3404%" height="15" fill="rgb(205,86,26)" fg:x="413381" fg:w="1574"/><text x="89.6388%" y="831.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVec::grow_one&lt;tuple$&lt;ptr_mut$&lt;u8&gt;,void (*)(ptr_mut$&lt;u8&gt;)&gt;,alloc::alloc::Global&gt; (1,573 samples, 0.34%)</title><rect x="89.3890%" y="805" width="0.3401%" height="15" fill="rgb(231,126,28)" fg:x="413382" fg:w="1573"/><text x="89.6390%" y="815.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::grow_one (1,551 samples, 0.34%)</title><rect x="89.3937%" y="789" width="0.3354%" height="15" fill="rgb(219,221,18)" fg:x="413404" fg:w="1551"/><text x="89.6437%" y="799.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::RawVecInner::grow_amortized (1,551 samples, 0.34%)</title><rect x="89.3937%" y="773" width="0.3354%" height="15" fill="rgb(211,40,0)" fg:x="413404" fg:w="1551"/><text x="89.6437%" y="783.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::result::impl$27::branch (1,523 samples, 0.33%)</title><rect x="89.3998%" y="757" width="0.3293%" height="15" fill="rgb(239,85,43)" fg:x="413432" fg:w="1523"/><text x="89.6498%" y="767.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1,522 samples, 0.33%)</title><rect x="89.4000%" y="741" width="0.3291%" height="15" fill="rgb(231,55,21)" fg:x="413433" fg:w="1522"/><text x="89.6500%" y="751.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::push (1,635 samples, 0.35%)</title><rect x="89.3758%" y="885" width="0.3535%" height="15" fill="rgb(225,184,43)" fg:x="413321" fg:w="1635"/><text x="89.6258%" y="895.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once (1,679 samples, 0.36%)</title><rect x="89.3676%" y="1013" width="0.3631%" height="15" fill="rgb(251,158,41)" fg:x="413283" fg:w="1679"/><text x="89.6176%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::SPAWN_HOOKS::constant$0::closure$0 (1,679 samples, 0.36%)</title><rect x="89.3676%" y="997" width="0.3631%" height="15" fill="rgb(234,159,37)" fg:x="413283" fg:w="1679"/><text x="89.6176%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::Storage::get (1,679 samples, 0.36%)</title><rect x="89.3676%" y="981" width="0.3631%" height="15" fill="rgb(216,204,22)" fg:x="413283" fg:w="1679"/><text x="89.6176%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::Storage::initialize (1,670 samples, 0.36%)</title><rect x="89.3695%" y="965" width="0.3611%" height="15" fill="rgb(214,17,3)" fg:x="413292" fg:w="1670"/><text x="89.6195%" y="975.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::set (1,664 samples, 0.36%)</title><rect x="89.3708%" y="949" width="0.3598%" height="15" fill="rgb(212,111,17)" fg:x="413298" fg:w="1664"/><text x="89.6208%" y="959.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::replace (1,664 samples, 0.36%)</title><rect x="89.3708%" y="933" width="0.3598%" height="15" fill="rgb(221,157,24)" fg:x="413298" fg:w="1664"/><text x="89.6208%" y="943.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::replace (1,664 samples, 0.36%)</title><rect x="89.3708%" y="917" width="0.3598%" height="15" fill="rgb(252,16,13)" fg:x="413298" fg:w="1664"/><text x="89.6208%" y="927.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::destructors::list::register (1,664 samples, 0.36%)</title><rect x="89.3708%" y="901" width="0.3598%" height="15" fill="rgb(221,62,2)" fg:x="413298" fg:w="1664"/><text x="89.6208%" y="911.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (205,115 samples, 44.35%)</title><rect x="45.3784%" y="1157" width="44.3537%" height="15" fill="rgb(247,87,22)" fg:x="209854" fg:w="205115"/><text x="45.6284%" y="1167.50">mdc_bench-e05db9bcf8254872.exe`std::panic::catch_unwind(core::panic::unwi..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (205,115 samples, 44.35%)</title><rect x="45.3784%" y="1141" width="44.3537%" height="15" fill="rgb(215,73,9)" fg:x="209854" fg:w="205115"/><text x="45.6284%" y="1151.50">mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind(core::panic::..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind::do_call (205,115 samples, 44.35%)</title><rect x="45.3784%" y="1125" width="44.3537%" height="15" fill="rgb(207,175,33)" fg:x="209854" fg:w="205115"/><text x="45.6284%" y="1135.50">mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind::do_call</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (1,749 samples, 0.38%)</title><rect x="89.3539%" y="1109" width="0.3782%" height="15" fill="rgb(243,129,54)" fg:x="413220" fg:w="1749"/><text x="89.6039%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (1,749 samples, 0.38%)</title><rect x="89.3539%" y="1093" width="0.3782%" height="15" fill="rgb(227,119,45)" fg:x="413220" fg:w="1749"/><text x="89.6039%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure$0::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure$1::closure$0::closure_env$0&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (1,743 samples, 0.38%)</title><rect x="89.3552%" y="1077" width="0.3769%" height="15" fill="rgb(205,109,36)" fg:x="413226" fg:w="1743"/><text x="89.6052%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::ChildSpawnHooks::run (1,732 samples, 0.37%)</title><rect x="89.3576%" y="1061" width="0.3745%" height="15" fill="rgb(205,6,39)" fg:x="413237" fg:w="1732"/><text x="89.6076%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::local::LocalKey::set (1,690 samples, 0.37%)</title><rect x="89.3667%" y="1045" width="0.3654%" height="15" fill="rgb(221,32,16)" fg:x="413279" fg:w="1690"/><text x="89.6167%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::local::LocalKey::initialize_with (1,690 samples, 0.37%)</title><rect x="89.3667%" y="1029" width="0.3654%" height="15" fill="rgb(228,144,50)" fg:x="413279" fg:w="1690"/><text x="89.6167%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::Thread::id (60 samples, 0.01%)</title><rect x="89.7808%" y="1141" width="0.0130%" height="15" fill="rgb(229,201,53)" fg:x="415194" fg:w="60"/><text x="90.0308%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::current::set_current (265 samples, 0.06%)</title><rect x="89.7373%" y="1157" width="0.0573%" height="15" fill="rgb(249,153,27)" fg:x="414993" fg:w="265"/><text x="89.9873%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$28::call_once (229,812 samples, 49.69%)</title><rect x="40.2722%" y="1253" width="49.6941%" height="15" fill="rgb(227,106,25)" fg:x="186240" fg:w="229812"/><text x="40.5222%" y="1263.50">mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$28::call_once</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (229,812 samples, 49.69%)</title><rect x="40.2722%" y="1237" width="49.6941%" height="15" fill="rgb(230,65,29)" fg:x="186240" fg:w="229812"/><text x="40.5222%" y="1247.50">mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::alloc::layout::Layout::for_value_raw (229,806 samples, 49.69%)</title><rect x="40.2735%" y="1221" width="49.6928%" height="15" fill="rgb(221,57,46)" fg:x="186246" fg:w="229806"/><text x="40.5235%" y="1231.50">mdc_bench-e05db9bcf8254872.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::size_of_val_raw (229,806 samples, 49.69%)</title><rect x="40.2735%" y="1205" width="49.6928%" height="15" fill="rgb(229,161,17)" fg:x="186246" fg:w="229806"/><text x="40.5235%" y="1215.50">mdc_bench-e05db9bcf8254872.exe`core::mem::size_of_val_raw</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box&lt;isomesh::mdc::octree::OctreeNode,alloc::alloc::Global&gt;,isomesh::mdc::mdc::MeshBuffers&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (207,071 samples, 44.78%)</title><rect x="45.1897%" y="1189" width="44.7767%" height="15" fill="rgb(222,213,11)" fg:x="208981" fg:w="207071"/><text x="45.4397%" y="1199.50">mdc_bench-e05db9bcf8254872.exe`core::ops::function::FnOnce::call_once&lt;std..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;isomesh::mdc::octree::impl$3::construct_nodes::closure_env$0&lt;isomesh::mdc::sampler::SphereSampler&gt;,tuple$&lt;bool,alloc::boxed::Box (206,919 samples, 44.74%)</title><rect x="45.2225%" y="1173" width="44.7438%" height="15" fill="rgb(235,35,13)" fg:x="209133" fg:w="206919"/><text x="45.4725%" y="1183.50">mdc_bench-e05db9bcf8254872.exe`std::thread::impl$0::spawn_unchecked_::clo..</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::impl$23::clone (794 samples, 0.17%)</title><rect x="89.7946%" y="1157" width="0.1717%" height="15" fill="rgb(233,158,34)" fg:x="415258" fg:w="794"/><text x="90.0446%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::pin::impl$28::clone(core::pin::Pin&lt;alloc::sync::Arc (794 samples, 0.17%)</title><rect x="89.7946%" y="1141" width="0.1717%" height="15" fill="rgb(215,151,48)" fg:x="415258" fg:w="794"/><text x="90.0446%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$28::clone(alloc::sync::Arc (794 samples, 0.17%)</title><rect x="89.7946%" y="1125" width="0.1717%" height="15" fill="rgb(229,84,14)" fg:x="415258" fg:w="794"/><text x="90.0446%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::Arc&lt;std::thread::Inner,alloc::alloc::Global&gt;::inner (337 samples, 0.07%)</title><rect x="89.8935%" y="1109" width="0.0729%" height="15" fill="rgb(229,68,14)" fg:x="415715" fg:w="337"/><text x="90.1435%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::sync::atomic::atomic_add (337 samples, 0.07%)</title><rect x="89.8935%" y="1093" width="0.0729%" height="15" fill="rgb(243,106,26)" fg:x="415715" fg:w="337"/><text x="90.1435%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$28::call_once (245,064 samples, 52.99%)</title><rect x="37.0768%" y="1269" width="52.9922%" height="15" fill="rgb(206,45,38)" fg:x="171463" fg:w="245064"/><text x="37.3268%" y="1279.50">mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$28::call_once</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::boxed::impl$8::drop (475 samples, 0.10%)</title><rect x="89.9663%" y="1253" width="0.1027%" height="15" fill="rgb(226,6,15)" fg:x="416052" fg:w="475"/><text x="90.2163%" y="1263.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::impl$1::deallocate (475 samples, 0.10%)</title><rect x="89.9663%" y="1237" width="0.1027%" height="15" fill="rgb(232,22,54)" fg:x="416052" fg:w="475"/><text x="90.2163%" y="1247.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::alloc::dealloc (475 samples, 0.10%)</title><rect x="89.9663%" y="1221" width="0.1027%" height="15" fill="rgb(229,222,32)" fg:x="416052" fg:w="475"/><text x="90.2163%" y="1231.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (51 samples, 0.01%)</title><rect x="90.0690%" y="1269" width="0.0110%" height="15" fill="rgb(228,62,29)" fg:x="416527" fg:w="51"/><text x="90.3190%" y="1279.50"></text></g><g><title>`0x7FFDD378E8D7 (247,080 samples, 53.43%)</title><rect x="36.6524%" y="1301" width="53.4281%" height="15" fill="rgb(251,103,34)" fg:x="169500" fg:w="247080"/><text x="36.9024%" y="1311.50">`0x7FFDD378E8D7</text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (245,662 samples, 53.12%)</title><rect x="36.9590%" y="1285" width="53.1215%" height="15" fill="rgb(233,12,30)" fg:x="170918" fg:w="245662"/><text x="37.2090%" y="1295.50">mdc_bench-e05db9bcf8254872.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>`0x7FFDD4848E0E (2,279 samples, 0.49%)</title><rect x="90.0885%" y="1285" width="0.4928%" height="15" fill="rgb(238,52,0)" fg:x="416617" fg:w="2279"/><text x="90.3385%" y="1295.50"></text></g><g><title>`0x7FFDD49A36D4 (2,271 samples, 0.49%)</title><rect x="90.0902%" y="1269" width="0.4911%" height="15" fill="rgb(223,98,5)" fg:x="416625" fg:w="2271"/><text x="90.3402%" y="1279.50"></text></g><g><title>`0x7FFDD4849136 (66 samples, 0.01%)</title><rect x="90.5902%" y="1269" width="0.0143%" height="15" fill="rgb(228,75,37)" fg:x="418937" fg:w="66"/><text x="90.8402%" y="1279.50"></text></g><g><title>`0x7FFDD48BBF13 (1,580 samples, 0.34%)</title><rect x="90.6220%" y="1237" width="0.3417%" height="15" fill="rgb(205,115,49)" fg:x="419084" fg:w="1580"/><text x="90.8720%" y="1247.50"></text></g><g><title>`0x7FFDD48BBF28 (742 samples, 0.16%)</title><rect x="90.9651%" y="1237" width="0.1604%" height="15" fill="rgb(250,154,43)" fg:x="420671" fg:w="742"/><text x="91.2151%" y="1247.50"></text></g><g><title>`0x7FFDD48BBF53 (56 samples, 0.01%)</title><rect x="91.1316%" y="1237" width="0.0121%" height="15" fill="rgb(226,43,29)" fg:x="421441" fg:w="56"/><text x="91.3816%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFCE (334 samples, 0.07%)</title><rect x="91.1459%" y="1237" width="0.0722%" height="15" fill="rgb(249,228,39)" fg:x="421507" fg:w="334"/><text x="91.3959%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFDC (118 samples, 0.03%)</title><rect x="91.2181%" y="1237" width="0.0255%" height="15" fill="rgb(216,79,43)" fg:x="421841" fg:w="118"/><text x="91.4681%" y="1247.50"></text></g><g><title>`0x7FFDD48BBFE1 (123 samples, 0.03%)</title><rect x="91.2439%" y="1237" width="0.0266%" height="15" fill="rgb(228,95,12)" fg:x="421960" fg:w="123"/><text x="91.4939%" y="1247.50"></text></g><g><title>`0x7FFDD48AFAEE (3,054 samples, 0.66%)</title><rect x="90.6148%" y="1253" width="0.6604%" height="15" fill="rgb(249,221,15)" fg:x="419051" fg:w="3054"/><text x="90.8648%" y="1263.50"></text></g><g><title>`0x7FFDD48BC035 (49 samples, 0.01%)</title><rect x="91.2793%" y="1237" width="0.0106%" height="15" fill="rgb(233,34,13)" fg:x="422124" fg:w="49"/><text x="91.5293%" y="1247.50"></text></g><g><title>`0x7FFDD48AFB52 (69 samples, 0.01%)</title><rect x="91.2785%" y="1253" width="0.0149%" height="15" fill="rgb(214,103,39)" fg:x="422120" fg:w="69"/><text x="91.5285%" y="1263.50"></text></g><g><title>`0x7FFDD48BC035 (61 samples, 0.01%)</title><rect x="91.3018%" y="1237" width="0.0132%" height="15" fill="rgb(251,126,39)" fg:x="422228" fg:w="61"/><text x="91.5518%" y="1247.50"></text></g><g><title>`0x7FFDD48AFC0C (89 samples, 0.02%)</title><rect x="91.3005%" y="1253" width="0.0192%" height="15" fill="rgb(214,216,36)" fg:x="422222" fg:w="89"/><text x="91.5505%" y="1263.50"></text></g><g><title>`0x7FFDD4849199 (14,518 samples, 3.14%)</title><rect x="90.6068%" y="1269" width="3.1393%" height="15" fill="rgb(220,221,8)" fg:x="419014" fg:w="14518"/><text x="90.8568%" y="1279.50">`0x..</text></g><g><title>`0x7FFDD48AFC39 (11,218 samples, 2.43%)</title><rect x="91.3204%" y="1253" width="2.4258%" height="15" fill="rgb(240,216,3)" fg:x="422314" fg:w="11218"/><text x="91.5704%" y="1263.50">`0..</text></g><g><title>`0x7FFDD49A32B4 (11,017 samples, 2.38%)</title><rect x="91.3639%" y="1237" width="2.3823%" height="15" fill="rgb(232,218,17)" fg:x="422515" fg:w="11017"/><text x="91.6139%" y="1247.50">`0..</text></g><g><title>`0x7FFDD48868AB (54 samples, 0.01%)</title><rect x="93.7550%" y="1253" width="0.0117%" height="15" fill="rgb(229,163,45)" fg:x="433573" fg:w="54"/><text x="94.0050%" y="1263.50"></text></g><g><title>`0x7FFDD484919E (101 samples, 0.02%)</title><rect x="93.7462%" y="1269" width="0.0218%" height="15" fill="rgb(231,110,42)" fg:x="433532" fg:w="101"/><text x="93.9962%" y="1279.50"></text></g><g><title>`0x7FFDD48491C8 (196 samples, 0.04%)</title><rect x="93.7758%" y="1269" width="0.0424%" height="15" fill="rgb(208,170,48)" fg:x="433669" fg:w="196"/><text x="94.0258%" y="1279.50"></text></g><g><title>`0x7FFDD48491CB (49 samples, 0.01%)</title><rect x="93.8182%" y="1269" width="0.0106%" height="15" fill="rgb(239,116,25)" fg:x="433865" fg:w="49"/><text x="94.0682%" y="1279.50"></text></g><g><title>`0x7FFDD4849233 (53 samples, 0.01%)</title><rect x="93.8439%" y="1269" width="0.0115%" height="15" fill="rgb(219,200,50)" fg:x="433984" fg:w="53"/><text x="94.0939%" y="1279.50"></text></g><g><title>`0x7FFDD48B4EE5 (86 samples, 0.02%)</title><rect x="93.8688%" y="1253" width="0.0186%" height="15" fill="rgb(245,200,0)" fg:x="434099" fg:w="86"/><text x="94.1188%" y="1263.50"></text></g><g><title>`0x7FFDD48B4F8F (61 samples, 0.01%)</title><rect x="93.9244%" y="1253" width="0.0132%" height="15" fill="rgb(245,119,33)" fg:x="434356" fg:w="61"/><text x="94.1744%" y="1263.50"></text></g><g><title>`0x7FFDD484923D (380 samples, 0.08%)</title><rect x="93.8560%" y="1269" width="0.0822%" height="15" fill="rgb(231,125,12)" fg:x="434040" fg:w="380"/><text x="94.1060%" y="1279.50"></text></g><g><title>`0x7FFDD48B43A6 (173 samples, 0.04%)</title><rect x="93.9438%" y="1253" width="0.0374%" height="15" fill="rgb(216,96,41)" fg:x="434446" fg:w="173"/><text x="94.1938%" y="1263.50"></text></g><g><title>`0x7FFDD48B43E7 (111 samples, 0.02%)</title><rect x="93.9868%" y="1253" width="0.0240%" height="15" fill="rgb(248,43,45)" fg:x="434645" fg:w="111"/><text x="94.2368%" y="1263.50"></text></g><g><title>`0x7FFDD4849251 (391 samples, 0.08%)</title><rect x="93.9401%" y="1269" width="0.0845%" height="15" fill="rgb(217,222,7)" fg:x="434429" fg:w="391"/><text x="94.1901%" y="1279.50"></text></g><g><title>`0x7FFDD48B4768 (124 samples, 0.03%)</title><rect x="94.0439%" y="1253" width="0.0268%" height="15" fill="rgb(233,28,6)" fg:x="434909" fg:w="124"/><text x="94.2939%" y="1263.50"></text></g><g><title>`0x7FFDD48B4829 (567 samples, 0.12%)</title><rect x="94.0731%" y="1253" width="0.1226%" height="15" fill="rgb(231,218,15)" fg:x="435044" fg:w="567"/><text x="94.3231%" y="1263.50"></text></g><g><title>`0x7FFD7F87580A (118 samples, 0.03%)</title><rect x="94.2327%" y="1157" width="0.0255%" height="15" fill="rgb(226,171,48)" fg:x="435782" fg:w="118"/><text x="94.4827%" y="1167.50"></text></g><g><title>`0x7FFD7F875917 (205 samples, 0.04%)</title><rect x="94.2195%" y="1173" width="0.0443%" height="15" fill="rgb(235,201,9)" fg:x="435721" fg:w="205"/><text x="94.4695%" y="1183.50"></text></g><g><title>`0x7FFDD4919880 (163 samples, 0.04%)</title><rect x="94.2911%" y="1157" width="0.0352%" height="15" fill="rgb(217,80,15)" fg:x="436052" fg:w="163"/><text x="94.5411%" y="1167.50"></text></g><g><title>`0x7FFDD491988A (291 samples, 0.06%)</title><rect x="94.3263%" y="1157" width="0.0629%" height="15" fill="rgb(219,152,8)" fg:x="436215" fg:w="291"/><text x="94.5763%" y="1167.50"></text></g><g><title>`0x7FFDD211C346 (538 samples, 0.12%)</title><rect x="94.2738%" y="1173" width="0.1163%" height="15" fill="rgb(243,107,38)" fg:x="435972" fg:w="538"/><text x="94.5238%" y="1183.50"></text></g><g><title>`0x7FFDD211C357 (54 samples, 0.01%)</title><rect x="94.3903%" y="1173" width="0.0117%" height="15" fill="rgb(231,17,5)" fg:x="436511" fg:w="54"/><text x="94.6403%" y="1183.50"></text></g><g><title>`0x7FFD7F875536 (850 samples, 0.18%)</title><rect x="94.2184%" y="1189" width="0.1838%" height="15" fill="rgb(209,25,54)" fg:x="435716" fg:w="850"/><text x="94.4684%" y="1199.50"></text></g><g><title>`0x7FFDD484A4BE (61 samples, 0.01%)</title><rect x="94.4342%" y="1141" width="0.0132%" height="15" fill="rgb(219,0,2)" fg:x="436714" fg:w="61"/><text x="94.6842%" y="1151.50"></text></g><g><title>`0x7FFDD212658B (201 samples, 0.04%)</title><rect x="94.4156%" y="1157" width="0.0435%" height="15" fill="rgb(246,9,5)" fg:x="436628" fg:w="201"/><text x="94.6656%" y="1167.50"></text></g><g><title>`0x7FFD7F875976 (250 samples, 0.05%)</title><rect x="94.4059%" y="1173" width="0.0541%" height="15" fill="rgb(226,159,4)" fg:x="436583" fg:w="250"/><text x="94.6559%" y="1183.50"></text></g><g><title>`0x7FFD7F875546 (269 samples, 0.06%)</title><rect x="94.4022%" y="1189" width="0.0582%" height="15" fill="rgb(219,175,34)" fg:x="436566" fg:w="269"/><text x="94.6522%" y="1199.50"></text></g><g><title>`0x7FFD7F880340 (1,211 samples, 0.26%)</title><rect x="94.2037%" y="1221" width="0.2619%" height="15" fill="rgb(236,10,46)" fg:x="435648" fg:w="1211"/><text x="94.4537%" y="1231.50"></text></g><g><title>`0x7FFD7F87541D (1,188 samples, 0.26%)</title><rect x="94.2087%" y="1205" width="0.2569%" height="15" fill="rgb(240,211,16)" fg:x="435671" fg:w="1188"/><text x="94.4587%" y="1215.50"></text></g><g><title>`0x7FFDD211C346 (196 samples, 0.04%)</title><rect x="94.5002%" y="1205" width="0.0424%" height="15" fill="rgb(205,3,43)" fg:x="437019" fg:w="196"/><text x="94.7502%" y="1215.50"></text></g><g><title>`0x7FFDD491988A (52 samples, 0.01%)</title><rect x="94.5313%" y="1189" width="0.0112%" height="15" fill="rgb(245,7,22)" fg:x="437163" fg:w="52"/><text x="94.7813%" y="1199.50"></text></g><g><title>`0x7FFDD1BF6D98 (257 samples, 0.06%)</title><rect x="94.4909%" y="1221" width="0.0556%" height="15" fill="rgb(239,132,32)" fg:x="436976" fg:w="257"/><text x="94.7409%" y="1231.50"></text></g><g><title>`0x7FFDD1C43C15 (79 samples, 0.02%)</title><rect x="94.5478%" y="1221" width="0.0171%" height="15" fill="rgb(228,202,34)" fg:x="437239" fg:w="79"/><text x="94.7978%" y="1231.50"></text></g><g><title>`0x7FFDD48C7639 (84 samples, 0.02%)</title><rect x="94.5953%" y="1189" width="0.0182%" height="15" fill="rgb(254,200,22)" fg:x="437459" fg:w="84"/><text x="94.8453%" y="1199.50"></text></g><g><title>`0x7FFDD208458A (228 samples, 0.05%)</title><rect x="94.5863%" y="1205" width="0.0493%" height="15" fill="rgb(219,10,39)" fg:x="437417" fg:w="228"/><text x="94.8363%" y="1215.50"></text></g><g><title>`0x7FFDD48C76A7 (83 samples, 0.02%)</title><rect x="94.6176%" y="1189" width="0.0179%" height="15" fill="rgb(226,210,39)" fg:x="437562" fg:w="83"/><text x="94.8676%" y="1199.50"></text></g><g><title>`0x7FFDD2153FFD (455 samples, 0.10%)</title><rect x="94.5724%" y="1221" width="0.0984%" height="15" fill="rgb(208,219,16)" fg:x="437353" fg:w="455"/><text x="94.8224%" y="1231.50"></text></g><g><title>`0x7FFDD36D2305 (63 samples, 0.01%)</title><rect x="94.6786%" y="1221" width="0.0136%" height="15" fill="rgb(216,158,51)" fg:x="437844" fg:w="63"/><text x="94.9286%" y="1231.50"></text></g><g><title>`0x7FFDD3689639 (86 samples, 0.02%)</title><rect x="94.6998%" y="1189" width="0.0186%" height="15" fill="rgb(233,14,44)" fg:x="437942" fg:w="86"/><text x="94.9498%" y="1199.50"></text></g><g><title>`0x7FFDD3689640 (258 samples, 0.06%)</title><rect x="94.7184%" y="1189" width="0.0558%" height="15" fill="rgb(237,97,39)" fg:x="438028" fg:w="258"/><text x="94.9684%" y="1199.50"></text></g><g><title>`0x7FFDD36D2364 (361 samples, 0.08%)</title><rect x="94.6965%" y="1205" width="0.0781%" height="15" fill="rgb(218,198,43)" fg:x="437927" fg:w="361"/><text x="94.9465%" y="1215.50"></text></g><g><title>`0x7FFDD36D2322 (378 samples, 0.08%)</title><rect x="94.6935%" y="1221" width="0.0817%" height="15" fill="rgb(231,104,20)" fg:x="437913" fg:w="378"/><text x="94.9435%" y="1231.50"></text></g><g><title>`0x7FFDD4560C96 (195 samples, 0.04%)</title><rect x="94.7798%" y="1221" width="0.0422%" height="15" fill="rgb(254,36,13)" fg:x="438312" fg:w="195"/><text x="95.0298%" y="1231.50"></text></g><g><title>`0x7FFDD4552EB1 (157 samples, 0.03%)</title><rect x="94.7880%" y="1205" width="0.0339%" height="15" fill="rgb(248,14,50)" fg:x="438350" fg:w="157"/><text x="95.0380%" y="1215.50"></text></g><g><title>`0x7FFDD4553994 (104 samples, 0.02%)</title><rect x="94.7995%" y="1189" width="0.0225%" height="15" fill="rgb(217,107,29)" fg:x="438403" fg:w="104"/><text x="95.0495%" y="1199.50"></text></g><g><title>`0x7FFDD4560CEE (51 samples, 0.01%)</title><rect x="94.8222%" y="1221" width="0.0110%" height="15" fill="rgb(251,169,33)" fg:x="438508" fg:w="51"/><text x="95.0722%" y="1231.50"></text></g><g><title>`0x7FFDD4560D45 (56 samples, 0.01%)</title><rect x="94.8412%" y="1221" width="0.0121%" height="15" fill="rgb(217,108,32)" fg:x="438596" fg:w="56"/><text x="95.0912%" y="1231.50"></text></g><g><title>`0x7FFDD49A0EDE (3,039 samples, 0.66%)</title><rect x="94.2014%" y="1237" width="0.6571%" height="15" fill="rgb(219,66,42)" fg:x="435637" fg:w="3039"/><text x="94.4514%" y="1247.50"></text></g><g><title>`0x7FFDD48B483E (3,106 samples, 0.67%)</title><rect x="94.1966%" y="1253" width="0.6716%" height="15" fill="rgb(206,180,7)" fg:x="435615" fg:w="3106"/><text x="94.4466%" y="1263.50"></text></g><g><title>`0x7FFDD4849264 (3,991 samples, 0.86%)</title><rect x="94.0262%" y="1269" width="0.8630%" height="15" fill="rgb(208,226,31)" fg:x="434827" fg:w="3991"/><text x="94.2762%" y="1279.50"></text></g><g><title>`0x7FFDD488E412 (57 samples, 0.01%)</title><rect x="94.8953%" y="1253" width="0.0123%" height="15" fill="rgb(218,26,49)" fg:x="438846" fg:w="57"/><text x="95.1453%" y="1263.50"></text></g><g><title>`0x7FFDD484926F (301 samples, 0.07%)</title><rect x="94.8929%" y="1269" width="0.0651%" height="15" fill="rgb(233,197,48)" fg:x="438835" fg:w="301"/><text x="95.1429%" y="1279.50"></text></g><g><title>`0x7FFDD48492D5 (116 samples, 0.03%)</title><rect x="94.9735%" y="1269" width="0.0251%" height="15" fill="rgb(252,181,51)" fg:x="439208" fg:w="116"/><text x="95.2235%" y="1279.50"></text></g><g><title>`0x7FFDD48B43A6 (241 samples, 0.05%)</title><rect x="95.0060%" y="1253" width="0.0521%" height="15" fill="rgb(253,90,19)" fg:x="439358" fg:w="241"/><text x="95.2560%" y="1263.50"></text></g><g><title>`0x7FFDD48B43E7 (76 samples, 0.02%)</title><rect x="95.0667%" y="1253" width="0.0164%" height="15" fill="rgb(215,171,30)" fg:x="439639" fg:w="76"/><text x="95.3167%" y="1263.50"></text></g><g><title>`0x7FFDD48B44B8 (68 samples, 0.01%)</title><rect x="95.0981%" y="1253" width="0.0147%" height="15" fill="rgb(214,222,9)" fg:x="439784" fg:w="68"/><text x="95.3481%" y="1263.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::rt::thread_cleanup (265 samples, 0.06%)</title><rect x="95.1230%" y="1173" width="0.0573%" height="15" fill="rgb(223,3,22)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1183.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panic::catch_unwind (265 samples, 0.06%)</title><rect x="95.1230%" y="1157" width="0.0573%" height="15" fill="rgb(225,196,46)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind (265 samples, 0.06%)</title><rect x="95.1230%" y="1141" width="0.0573%" height="15" fill="rgb(209,110,37)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::panicking::catch_unwind::do_call (265 samples, 0.06%)</title><rect x="95.1230%" y="1125" width="0.0573%" height="15" fill="rgb(249,89,12)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::rt::thread_cleanup::closure$0 (265 samples, 0.06%)</title><rect x="95.1230%" y="1109" width="0.0573%" height="15" fill="rgb(226,27,33)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::current::drop_current (265 samples, 0.06%)</title><rect x="95.1230%" y="1093" width="0.0573%" height="15" fill="rgb(213,82,22)" fg:x="439899" fg:w="265"/><text x="95.3730%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::drop (242 samples, 0.05%)</title><rect x="95.1279%" y="1077" width="0.0523%" height="15" fill="rgb(248,140,0)" fg:x="439922" fg:w="242"/><text x="95.3779%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (242 samples, 0.05%)</title><rect x="95.1279%" y="1061" width="0.0523%" height="15" fill="rgb(228,106,3)" fg:x="439922" fg:w="242"/><text x="95.3779%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (242 samples, 0.05%)</title><rect x="95.1279%" y="1045" width="0.0523%" height="15" fill="rgb(209,23,37)" fg:x="439922" fg:w="242"/><text x="95.3779%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (242 samples, 0.05%)</title><rect x="95.1279%" y="1029" width="0.0523%" height="15" fill="rgb(241,93,50)" fg:x="439922" fg:w="242"/><text x="95.3779%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::sync::impl$38::drop (242 samples, 0.05%)</title><rect x="95.1279%" y="1013" width="0.0523%" height="15" fill="rgb(253,46,43)" fg:x="439922" fg:w="242"/><text x="95.3779%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::pop (365 samples, 0.08%)</title><rect x="95.1809%" y="1157" width="0.0789%" height="15" fill="rgb(226,206,43)" fg:x="440167" fg:w="365"/><text x="95.4309%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`alloc::vec::Vec::as_ptr (325 samples, 0.07%)</title><rect x="95.1896%" y="1141" width="0.0703%" height="15" fill="rgb(217,54,7)" fg:x="440207" fg:w="325"/><text x="95.4396%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::RefCell::borrow_mut (786 samples, 0.17%)</title><rect x="95.2598%" y="1157" width="0.1700%" height="15" fill="rgb(223,5,52)" fg:x="440532" fg:w="786"/><text x="95.5098%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::RefCell::try_borrow_mut (786 samples, 0.17%)</title><rect x="95.2598%" y="1141" width="0.1700%" height="15" fill="rgb(206,52,46)" fg:x="440532" fg:w="786"/><text x="95.5098%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::BorrowRefMut::new (786 samples, 0.17%)</title><rect x="95.2598%" y="1125" width="0.1700%" height="15" fill="rgb(253,136,11)" fg:x="440532" fg:w="786"/><text x="95.5098%" y="1135.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::destroy&lt;core::cell::Cell&lt;std::thread::spawnhook::SpawnHooks&gt; &gt; (255 samples, 0.06%)</title><rect x="95.3747%" y="1109" width="0.0551%" height="15" fill="rgb(208,106,33)" fg:x="441063" fg:w="255"/><text x="95.6247%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::abort_on_dtor_unwind (227 samples, 0.05%)</title><rect x="95.3807%" y="1093" width="0.0491%" height="15" fill="rgb(206,54,4)" fg:x="441091" fg:w="227"/><text x="95.6307%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::native::eager::destroy::closure$0 (227 samples, 0.05%)</title><rect x="95.3807%" y="1077" width="0.0491%" height="15" fill="rgb(213,3,15)" fg:x="441091" fg:w="227"/><text x="95.6307%" y="1087.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (222 samples, 0.05%)</title><rect x="95.3818%" y="1061" width="0.0480%" height="15" fill="rgb(252,211,39)" fg:x="441096" fg:w="222"/><text x="95.6318%" y="1071.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (222 samples, 0.05%)</title><rect x="95.3818%" y="1045" width="0.0480%" height="15" fill="rgb(223,6,36)" fg:x="441096" fg:w="222"/><text x="95.6318%" y="1055.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (222 samples, 0.05%)</title><rect x="95.3818%" y="1029" width="0.0480%" height="15" fill="rgb(252,169,45)" fg:x="441096" fg:w="222"/><text x="95.6318%" y="1039.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (207 samples, 0.04%)</title><rect x="95.3850%" y="1013" width="0.0448%" height="15" fill="rgb(212,48,26)" fg:x="441111" fg:w="207"/><text x="95.6350%" y="1023.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::thread::spawnhook::impl$0::drop (199 samples, 0.04%)</title><rect x="95.3868%" y="997" width="0.0430%" height="15" fill="rgb(251,102,48)" fg:x="441119" fg:w="199"/><text x="95.6368%" y="1007.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::option::Option::take (132 samples, 0.03%)</title><rect x="95.4013%" y="981" width="0.0285%" height="15" fill="rgb(243,208,16)" fg:x="441186" fg:w="132"/><text x="95.6513%" y="991.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::mem::replace (132 samples, 0.03%)</title><rect x="95.4013%" y="965" width="0.0285%" height="15" fill="rgb(219,96,24)" fg:x="441186" fg:w="132"/><text x="95.6513%" y="975.50"></text></g><g><title>`0x7FFDD48C0DD0 (56 samples, 0.01%)</title><rect x="95.4339%" y="1093" width="0.0121%" height="15" fill="rgb(219,33,29)" fg:x="441337" fg:w="56"/><text x="95.6839%" y="1103.50"></text></g><g><title>`0x7FFDD48C0EAD (162 samples, 0.04%)</title><rect x="95.4547%" y="1093" width="0.0350%" height="15" fill="rgb(223,176,5)" fg:x="441433" fg:w="162"/><text x="95.7047%" y="1103.50"></text></g><g><title>`0x7FFDD48C0EB1 (96 samples, 0.02%)</title><rect x="95.4897%" y="1093" width="0.0208%" height="15" fill="rgb(228,140,14)" fg:x="441595" fg:w="96"/><text x="95.7397%" y="1103.50"></text></g><g><title>`0x7FFDD48C0EC4 (76 samples, 0.02%)</title><rect x="95.5111%" y="1093" width="0.0164%" height="15" fill="rgb(217,179,31)" fg:x="441694" fg:w="76"/><text x="95.7611%" y="1103.50"></text></g><g><title>`0x7FFDD48C0EC8 (95 samples, 0.02%)</title><rect x="95.5275%" y="1093" width="0.0205%" height="15" fill="rgb(230,9,30)" fg:x="441770" fg:w="95"/><text x="95.7775%" y="1103.50"></text></g><g><title>`0x7FFDD48C1069 (74 samples, 0.02%)</title><rect x="95.5697%" y="1093" width="0.0160%" height="15" fill="rgb(230,136,20)" fg:x="441965" fg:w="74"/><text x="95.8197%" y="1103.50"></text></g><g><title>`0x7FFDD4894624 (66 samples, 0.01%)</title><rect x="95.5948%" y="1077" width="0.0143%" height="15" fill="rgb(215,210,22)" fg:x="442081" fg:w="66"/><text x="95.8448%" y="1087.50"></text></g><g><title>`0x7FFDD48C13F0 (65 samples, 0.01%)</title><rect x="95.5950%" y="1061" width="0.0141%" height="15" fill="rgb(218,43,5)" fg:x="442082" fg:w="65"/><text x="95.8450%" y="1071.50"></text></g><g><title>`0x7FFDD48C1358 (108 samples, 0.02%)</title><rect x="95.5935%" y="1093" width="0.0234%" height="15" fill="rgb(216,11,5)" fg:x="442075" fg:w="108"/><text x="95.8435%" y="1103.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::Cell::get (990 samples, 0.21%)</title><rect x="95.4330%" y="1109" width="0.2141%" height="15" fill="rgb(209,82,29)" fg:x="441333" fg:w="990"/><text x="95.6830%" y="1119.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (60 samples, 0.01%)</title><rect x="95.6342%" y="1093" width="0.0130%" height="15" fill="rgb(244,115,12)" fg:x="442263" fg:w="60"/><text x="95.8842%" y="1103.50"></text></g><g><title>`0x7FFDD492A39B (2,455 samples, 0.53%)</title><rect x="95.1171%" y="1205" width="0.5309%" height="15" fill="rgb(222,82,18)" fg:x="439872" fg:w="2455"/><text x="95.3671%" y="1215.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::guard::windows::tls_callback (2,454 samples, 0.53%)</title><rect x="95.1173%" y="1189" width="0.5306%" height="15" fill="rgb(249,227,8)" fg:x="439873" fg:w="2454"/><text x="95.3673%" y="1199.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`std::sys::thread_local::destructors::list::run (2,163 samples, 0.47%)</title><rect x="95.1803%" y="1173" width="0.4677%" height="15" fill="rgb(253,141,45)" fg:x="440164" fg:w="2163"/><text x="95.4303%" y="1183.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (1,008 samples, 0.22%)</title><rect x="95.4300%" y="1157" width="0.2180%" height="15" fill="rgb(234,184,4)" fg:x="441319" fg:w="1008"/><text x="95.6800%" y="1167.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::ptr::drop_in_place (1,008 samples, 0.22%)</title><rect x="95.4300%" y="1141" width="0.2180%" height="15" fill="rgb(218,194,23)" fg:x="441319" fg:w="1008"/><text x="95.6800%" y="1151.50"></text></g><g><title>mdc_bench-e05db9bcf8254872.exe`core::cell::impl$42::drop (1,006 samples, 0.22%)</title><rect x="95.4305%" y="1125" width="0.2175%" height="15" fill="rgb(235,66,41)" fg:x="441321" fg:w="1006"/><text x="95.6805%" y="1135.50"></text></g><g><title>`0x7FFDD49A0EDE (2,467 samples, 0.53%)</title><rect x="95.1154%" y="1221" width="0.5335%" height="15" fill="rgb(245,217,1)" fg:x="439864" fg:w="2467"/><text x="95.3654%" y="1231.50"></text></g><g><title>`0x7FFDD48B483E (2,478 samples, 0.54%)</title><rect x="95.1141%" y="1237" width="0.5358%" height="15" fill="rgb(229,91,1)" fg:x="439858" fg:w="2478"/><text x="95.3641%" y="1247.50"></text></g><g><title>`0x7FFDD48B44CE (2,502 samples, 0.54%)</title><rect x="95.1130%" y="1253" width="0.5410%" height="15" fill="rgb(207,101,30)" fg:x="439853" fg:w="2502"/><text x="95.3630%" y="1263.50"></text></g><g><title>`0x7FFDD48492E5 (3,038 samples, 0.66%)</title><rect x="94.9988%" y="1269" width="0.6569%" height="15" fill="rgb(223,82,49)" fg:x="439325" fg:w="3038"/><text x="95.2488%" y="1279.50"></text></g><g><title>`0x7FFDD4847A2C (61 samples, 0.01%)</title><rect x="95.6659%" y="1253" width="0.0132%" height="15" fill="rgb(218,167,17)" fg:x="442410" fg:w="61"/><text x="95.9159%" y="1263.50"></text></g><g><title>`0x7FFDD48492FD (87 samples, 0.02%)</title><rect x="95.6640%" y="1269" width="0.0188%" height="15" fill="rgb(208,103,14)" fg:x="442401" fg:w="87"/><text x="95.9140%" y="1279.50"></text></g><g><title>`0x7FFDD484949F (84 samples, 0.02%)</title><rect x="95.6886%" y="1253" width="0.0182%" height="15" fill="rgb(238,20,8)" fg:x="442515" fg:w="84"/><text x="95.9386%" y="1263.50"></text></g><g><title>`0x7FFDD48494BA (88 samples, 0.02%)</title><rect x="95.7068%" y="1253" width="0.0190%" height="15" fill="rgb(218,80,54)" fg:x="442599" fg:w="88"/><text x="95.9568%" y="1263.50"></text></g><g><title>`0x7FFDD488F13E (76 samples, 0.02%)</title><rect x="95.7265%" y="1237" width="0.0164%" height="15" fill="rgb(240,144,17)" fg:x="442690" fg:w="76"/><text x="95.9765%" y="1247.50"></text></g><g><title>`0x7FFDD48494C6 (107 samples, 0.02%)</title><rect x="95.7261%" y="1253" width="0.0231%" height="15" fill="rgb(245,27,50)" fg:x="442688" fg:w="107"/><text x="95.9761%" y="1263.50"></text></g><g><title>`0x7FFDD48494EC (161 samples, 0.03%)</title><rect x="95.7671%" y="1253" width="0.0348%" height="15" fill="rgb(251,51,7)" fg:x="442878" fg:w="161"/><text x="96.0171%" y="1263.50"></text></g><g><title>`0x7FFDD48C0EAD (320 samples, 0.07%)</title><rect x="95.8372%" y="1237" width="0.0692%" height="15" fill="rgb(245,217,29)" fg:x="443202" fg:w="320"/><text x="96.0872%" y="1247.50"></text></g><g><title>`0x7FFDD48C0EB1 (255 samples, 0.06%)</title><rect x="95.9064%" y="1237" width="0.0551%" height="15" fill="rgb(221,176,29)" fg:x="443522" fg:w="255"/><text x="96.1564%" y="1247.50"></text></g><g><title>`0x7FFDD48C0EC4 (201 samples, 0.04%)</title><rect x="95.9622%" y="1237" width="0.0435%" height="15" fill="rgb(212,180,24)" fg:x="443780" fg:w="201"/><text x="96.2122%" y="1247.50"></text></g><g><title>`0x7FFDD48C0EC8 (62 samples, 0.01%)</title><rect x="96.0056%" y="1237" width="0.0134%" height="15" fill="rgb(254,24,2)" fg:x="443981" fg:w="62"/><text x="96.2556%" y="1247.50"></text></g><g><title>`0x7FFDD48C0F53 (86 samples, 0.02%)</title><rect x="96.0441%" y="1237" width="0.0186%" height="15" fill="rgb(230,100,2)" fg:x="444159" fg:w="86"/><text x="96.2941%" y="1247.50"></text></g><g><title>`0x7FFDD48C1069 (232 samples, 0.05%)</title><rect x="96.0725%" y="1237" width="0.0502%" height="15" fill="rgb(219,142,25)" fg:x="444290" fg:w="232"/><text x="96.3225%" y="1247.50"></text></g><g><title>`0x7FFDD4894624 (182 samples, 0.04%)</title><rect x="96.1427%" y="1221" width="0.0394%" height="15" fill="rgb(240,73,43)" fg:x="444615" fg:w="182"/><text x="96.3927%" y="1231.50"></text></g><g><title>`0x7FFDD48C13F0 (179 samples, 0.04%)</title><rect x="96.1434%" y="1205" width="0.0387%" height="15" fill="rgb(214,114,15)" fg:x="444618" fg:w="179"/><text x="96.3934%" y="1215.50"></text></g><g><title>`0x7FFDD48C1358 (289 samples, 0.06%)</title><rect x="96.1404%" y="1237" width="0.0625%" height="15" fill="rgb(207,130,4)" fg:x="444604" fg:w="289"/><text x="96.3904%" y="1247.50"></text></g><g><title>`0x7FFDD489469B (93 samples, 0.02%)</title><rect x="96.1827%" y="1221" width="0.0201%" height="15" fill="rgb(221,25,40)" fg:x="444800" fg:w="93"/><text x="96.4327%" y="1231.50"></text></g><g><title>`0x7FFDD4841B02 (93 samples, 0.02%)</title><rect x="96.1827%" y="1205" width="0.0201%" height="15" fill="rgb(241,184,7)" fg:x="444800" fg:w="93"/><text x="96.4327%" y="1215.50"></text></g><g><title>`0x7FFDD48C13F0 (93 samples, 0.02%)</title><rect x="96.1827%" y="1189" width="0.0201%" height="15" fill="rgb(235,159,4)" fg:x="444800" fg:w="93"/><text x="96.4327%" y="1199.50"></text></g><g><title>`0x7FFDD48494FA (1,984 samples, 0.43%)</title><rect x="95.8030%" y="1253" width="0.4290%" height="15" fill="rgb(214,87,48)" fg:x="443044" fg:w="1984"/><text x="96.0530%" y="1263.50"></text></g><g><title>`0x7FFDD48C1358 (73 samples, 0.02%)</title><rect x="96.3136%" y="1237" width="0.0158%" height="15" fill="rgb(246,198,24)" fg:x="445405" fg:w="73"/><text x="96.5636%" y="1247.50"></text></g><g><title>`0x7FFDD4849515 (473 samples, 0.10%)</title><rect x="96.2409%" y="1253" width="0.1023%" height="15" fill="rgb(209,66,40)" fg:x="445069" fg:w="473"/><text x="96.4909%" y="1263.50"></text></g><g><title>`0x7FFDD492CF5F (171 samples, 0.04%)</title><rect x="96.3562%" y="1253" width="0.0370%" height="15" fill="rgb(233,147,39)" fg:x="445602" fg:w="171"/><text x="96.6062%" y="1263.50"></text></g><g><title>`0x7FFDD485175B (167 samples, 0.04%)</title><rect x="96.3570%" y="1237" width="0.0361%" height="15" fill="rgb(231,145,52)" fg:x="445606" fg:w="167"/><text x="96.6070%" y="1247.50"></text></g><g><title>`0x7FFDD485240E (67 samples, 0.01%)</title><rect x="96.3957%" y="1237" width="0.0145%" height="15" fill="rgb(206,20,26)" fg:x="445785" fg:w="67"/><text x="96.6457%" y="1247.50"></text></g><g><title>`0x7FFDD492CF84 (85 samples, 0.02%)</title><rect x="96.3940%" y="1253" width="0.0184%" height="15" fill="rgb(238,220,4)" fg:x="445777" fg:w="85"/><text x="96.6440%" y="1263.50"></text></g><g><title>`0x7FFDD484930B (3,369 samples, 0.73%)</title><rect x="95.6848%" y="1269" width="0.7285%" height="15" fill="rgb(252,195,42)" fg:x="442497" fg:w="3369"/><text x="95.9348%" y="1279.50"></text></g><g><title>`0x7FFDD4849322 (73 samples, 0.02%)</title><rect x="96.4141%" y="1269" width="0.0158%" height="15" fill="rgb(209,10,6)" fg:x="445870" fg:w="73"/><text x="96.6641%" y="1279.50"></text></g><g><title>`0x7FFDD4849339 (72 samples, 0.02%)</title><rect x="96.4301%" y="1269" width="0.0156%" height="15" fill="rgb(229,3,52)" fg:x="445944" fg:w="72"/><text x="96.6801%" y="1279.50"></text></g><g><title>`0x7FFDD48C0EB1 (50 samples, 0.01%)</title><rect x="96.4701%" y="1221" width="0.0108%" height="15" fill="rgb(253,49,37)" fg:x="446129" fg:w="50"/><text x="96.7201%" y="1231.50"></text></g><g><title>`0x7FFDD48C0EC4 (73 samples, 0.02%)</title><rect x="96.4816%" y="1221" width="0.0158%" height="15" fill="rgb(240,103,49)" fg:x="446182" fg:w="73"/><text x="96.7316%" y="1231.50"></text></g><g><title>`0x7FFDD4894624 (47 samples, 0.01%)</title><rect x="96.5160%" y="1205" width="0.0102%" height="15" fill="rgb(250,182,30)" fg:x="446341" fg:w="47"/><text x="96.7660%" y="1215.50"></text></g><g><title>`0x7FFDD48C13F0 (47 samples, 0.01%)</title><rect x="96.5160%" y="1189" width="0.0102%" height="15" fill="rgb(248,8,30)" fg:x="446341" fg:w="47"/><text x="96.7660%" y="1199.50"></text></g><g><title>`0x7FFDD489469B (50 samples, 0.01%)</title><rect x="96.5261%" y="1205" width="0.0108%" height="15" fill="rgb(237,120,30)" fg:x="446388" fg:w="50"/><text x="96.7761%" y="1215.50"></text></g><g><title>`0x7FFDD4841B02 (50 samples, 0.01%)</title><rect x="96.5261%" y="1189" width="0.0108%" height="15" fill="rgb(221,146,34)" fg:x="446388" fg:w="50"/><text x="96.7761%" y="1199.50"></text></g><g><title>`0x7FFDD48C13F0 (50 samples, 0.01%)</title><rect x="96.5261%" y="1173" width="0.0108%" height="15" fill="rgb(242,55,13)" fg:x="446388" fg:w="50"/><text x="96.7761%" y="1183.50"></text></g><g><title>`0x7FFDD48C1358 (98 samples, 0.02%)</title><rect x="96.5160%" y="1221" width="0.0212%" height="15" fill="rgb(242,112,31)" fg:x="446341" fg:w="98"/><text x="96.7660%" y="1231.50"></text></g><g><title>`0x7FFDD484AAA6 (433 samples, 0.09%)</title><rect x="96.4533%" y="1237" width="0.0936%" height="15" fill="rgb(249,192,27)" fg:x="446051" fg:w="433"/><text x="96.7033%" y="1247.50"></text></g><g><title>`0x7FFDD484A8DD (465 samples, 0.10%)</title><rect x="96.4513%" y="1253" width="0.1006%" height="15" fill="rgb(208,204,44)" fg:x="446042" fg:w="465"/><text x="96.7013%" y="1263.50"></text></g><g><title>`0x7FFDD48C0EAD (53 samples, 0.01%)</title><rect x="96.5614%" y="1237" width="0.0115%" height="15" fill="rgb(208,93,54)" fg:x="446551" fg:w="53"/><text x="96.8114%" y="1247.50"></text></g><g><title>`0x7FFDD4894624 (64 samples, 0.01%)</title><rect x="96.6118%" y="1221" width="0.0138%" height="15" fill="rgb(242,1,31)" fg:x="446784" fg:w="64"/><text x="96.8618%" y="1231.50"></text></g><g><title>`0x7FFDD48C13F0 (63 samples, 0.01%)</title><rect x="96.6120%" y="1205" width="0.0136%" height="15" fill="rgb(241,83,25)" fg:x="446785" fg:w="63"/><text x="96.8620%" y="1215.50"></text></g><g><title>`0x7FFDD48C1358 (108 samples, 0.02%)</title><rect x="96.6109%" y="1237" width="0.0234%" height="15" fill="rgb(205,169,50)" fg:x="446780" fg:w="108"/><text x="96.8609%" y="1247.50"></text></g><g><title>`0x7FFDD484A8E5 (395 samples, 0.09%)</title><rect x="96.5519%" y="1253" width="0.0854%" height="15" fill="rgb(239,186,37)" fg:x="446507" fg:w="395"/><text x="96.8019%" y="1263.50"></text></g><g><title>`0x7FFDD48493E2 (882 samples, 0.19%)</title><rect x="96.4483%" y="1269" width="0.1907%" height="15" fill="rgb(205,221,10)" fg:x="446028" fg:w="882"/><text x="96.6983%" y="1279.50"></text></g><g><title>`0x7FFDD484A944 (52 samples, 0.01%)</title><rect x="96.6526%" y="1253" width="0.0112%" height="15" fill="rgb(218,196,15)" fg:x="446973" fg:w="52"/><text x="96.9026%" y="1263.50"></text></g><g><title>`0x7FFDD484A94E (122 samples, 0.03%)</title><rect x="96.6639%" y="1253" width="0.0264%" height="15" fill="rgb(218,196,35)" fg:x="447025" fg:w="122"/><text x="96.9139%" y="1263.50"></text></g><g><title>`0x7FFDD488F0FF (181 samples, 0.04%)</title><rect x="96.7041%" y="1237" width="0.0391%" height="15" fill="rgb(233,63,24)" fg:x="447211" fg:w="181"/><text x="96.9541%" y="1247.50"></text></g><g><title>`0x7FFDD484A98A (207 samples, 0.04%)</title><rect x="96.6996%" y="1253" width="0.0448%" height="15" fill="rgb(225,8,4)" fg:x="447190" fg:w="207"/><text x="96.9496%" y="1263.50"></text></g><g><title>`0x7FFD7F87551B (182 samples, 0.04%)</title><rect x="96.7480%" y="1237" width="0.0394%" height="15" fill="rgb(234,105,35)" fg:x="447414" fg:w="182"/><text x="96.9980%" y="1247.50"></text></g><g><title>`0x7FFDD1BFE0FB (158 samples, 0.03%)</title><rect x="96.7532%" y="1221" width="0.0342%" height="15" fill="rgb(236,21,32)" fg:x="447438" fg:w="158"/><text x="97.0032%" y="1231.50"></text></g><g><title>`0x7FFDD1C57823 (71 samples, 0.02%)</title><rect x="96.7878%" y="1237" width="0.0154%" height="15" fill="rgb(228,109,6)" fg:x="447598" fg:w="71"/><text x="97.0378%" y="1247.50"></text></g><g><title>`0x7FFDD1BF6E8A (98 samples, 0.02%)</title><rect x="96.8161%" y="1221" width="0.0212%" height="15" fill="rgb(229,215,31)" fg:x="447729" fg:w="98"/><text x="97.0661%" y="1231.50"></text></g><g><title>`0x7FFDD1BF6E97 (53 samples, 0.01%)</title><rect x="96.8373%" y="1221" width="0.0115%" height="15" fill="rgb(221,52,54)" fg:x="447827" fg:w="53"/><text x="97.0873%" y="1231.50"></text></g><g><title>`0x7FFDD1BF6F05 (76 samples, 0.02%)</title><rect x="96.8901%" y="1221" width="0.0164%" height="15" fill="rgb(252,129,43)" fg:x="448071" fg:w="76"/><text x="97.1401%" y="1231.50"></text></g><g><title>`0x7FFDD1C546D1 (70 samples, 0.02%)</title><rect x="96.9132%" y="1205" width="0.0151%" height="15" fill="rgb(248,183,27)" fg:x="448178" fg:w="70"/><text x="97.1632%" y="1215.50"></text></g><g><title>`0x7FFDD48BBF00 (68 samples, 0.01%)</title><rect x="96.9311%" y="1189" width="0.0147%" height="15" fill="rgb(250,0,22)" fg:x="448261" fg:w="68"/><text x="97.1811%" y="1199.50"></text></g><g><title>`0x7FFDD48BBF05 (58 samples, 0.01%)</title><rect x="96.9459%" y="1189" width="0.0125%" height="15" fill="rgb(213,166,10)" fg:x="448329" fg:w="58"/><text x="97.1959%" y="1199.50"></text></g><g><title>`0x7FFDD48BBF53 (143 samples, 0.03%)</title><rect x="96.9606%" y="1189" width="0.0309%" height="15" fill="rgb(207,163,36)" fg:x="448397" fg:w="143"/><text x="97.2106%" y="1199.50"></text></g><g><title>`0x7FFDD1C546FE (309 samples, 0.07%)</title><rect x="96.9309%" y="1205" width="0.0668%" height="15" fill="rgb(208,122,22)" fg:x="448260" fg:w="309"/><text x="97.1809%" y="1215.50"></text></g><g><title>`0x7FFDD1C54718 (266 samples, 0.06%)</title><rect x="97.0008%" y="1205" width="0.0575%" height="15" fill="rgb(207,104,49)" fg:x="448583" fg:w="266"/><text x="97.2508%" y="1215.50"></text></g><g><title>`0x7FFDD48BC035 (142 samples, 0.03%)</title><rect x="97.0767%" y="1189" width="0.0307%" height="15" fill="rgb(248,211,50)" fg:x="448934" fg:w="142"/><text x="97.3267%" y="1199.50"></text></g><g><title>`0x7FFDD1BF6F31 (953 samples, 0.21%)</title><rect x="96.9102%" y="1221" width="0.2061%" height="15" fill="rgb(217,13,45)" fg:x="448164" fg:w="953"/><text x="97.1602%" y="1231.50"></text></g><g><title>`0x7FFDD1C54740 (251 samples, 0.05%)</title><rect x="97.0620%" y="1205" width="0.0543%" height="15" fill="rgb(211,216,49)" fg:x="448866" fg:w="251"/><text x="97.3120%" y="1215.50"></text></g><g><title>`0x7FFDD48BBF53 (58 samples, 0.01%)</title><rect x="97.1398%" y="1189" width="0.0125%" height="15" fill="rgb(221,58,53)" fg:x="449226" fg:w="58"/><text x="97.3898%" y="1199.50"></text></g><g><title>`0x7FFDD1C3C645 (140 samples, 0.03%)</title><rect x="97.1273%" y="1205" width="0.0303%" height="15" fill="rgb(220,112,41)" fg:x="449168" fg:w="140"/><text x="97.3773%" y="1215.50"></text></g><g><title>`0x7FFDD1C3C65D (87 samples, 0.02%)</title><rect x="97.1586%" y="1205" width="0.0188%" height="15" fill="rgb(236,38,28)" fg:x="449313" fg:w="87"/><text x="97.4086%" y="1215.50"></text></g><g><title>`0x7FFDD1C3C662 (66 samples, 0.01%)</title><rect x="97.1774%" y="1205" width="0.0143%" height="15" fill="rgb(227,195,22)" fg:x="449400" fg:w="66"/><text x="97.4274%" y="1215.50"></text></g><g><title>`0x7FFDD1C3C6AA (65 samples, 0.01%)</title><rect x="97.1934%" y="1205" width="0.0141%" height="15" fill="rgb(214,55,33)" fg:x="449474" fg:w="65"/><text x="97.4434%" y="1215.50"></text></g><g><title>`0x7FFDD1BF6F58 (414 samples, 0.09%)</title><rect x="97.1182%" y="1221" width="0.0895%" height="15" fill="rgb(248,80,13)" fg:x="449126" fg:w="414"/><text x="97.3682%" y="1231.50"></text></g><g><title>`0x7FFDD1C57847 (1,866 samples, 0.40%)</title><rect x="96.8049%" y="1237" width="0.4035%" height="15" fill="rgb(238,52,6)" fg:x="447677" fg:w="1866"/><text x="97.0549%" y="1247.50"></text></g><g><title>`0x7FFDD4896686 (76 samples, 0.02%)</title><rect x="97.2503%" y="1157" width="0.0164%" height="15" fill="rgb(224,198,47)" fg:x="449737" fg:w="76"/><text x="97.5003%" y="1167.50"></text></g><g><title>`0x7FFDD4894624 (98 samples, 0.02%)</title><rect x="97.2490%" y="1189" width="0.0212%" height="15" fill="rgb(233,171,20)" fg:x="449731" fg:w="98"/><text x="97.4990%" y="1199.50"></text></g><g><title>`0x7FFDD48C13F0 (98 samples, 0.02%)</title><rect x="97.2490%" y="1173" width="0.0212%" height="15" fill="rgb(241,30,25)" fg:x="449731" fg:w="98"/><text x="97.4990%" y="1183.50"></text></g><g><title>`0x7FFDD48C1358 (160 samples, 0.03%)</title><rect x="97.2443%" y="1205" width="0.0346%" height="15" fill="rgb(207,171,38)" fg:x="449709" fg:w="160"/><text x="97.4943%" y="1215.50"></text></g><g><title>`0x7FFDD1C5785C (374 samples, 0.08%)</title><rect x="97.2094%" y="1237" width="0.0809%" height="15" fill="rgb(234,70,1)" fg:x="449548" fg:w="374"/><text x="97.4594%" y="1247.50"></text></g><g><title>`0x7FFDD1BFE0FB (369 samples, 0.08%)</title><rect x="97.2105%" y="1221" width="0.0798%" height="15" fill="rgb(232,178,18)" fg:x="449553" fg:w="369"/><text x="97.4605%" y="1231.50"></text></g><g><title>`0x7FFDD484A9AF (2,523 samples, 0.55%)</title><rect x="96.7458%" y="1253" width="0.5456%" height="15" fill="rgb(241,78,40)" fg:x="447404" fg:w="2523"/><text x="96.9958%" y="1263.50"></text></g><g><title>`0x7FFDD488F13E (258 samples, 0.06%)</title><rect x="97.2964%" y="1237" width="0.0558%" height="15" fill="rgb(222,35,25)" fg:x="449950" fg:w="258"/><text x="97.5464%" y="1247.50"></text></g><g><title>`0x7FFDD484A9C0 (301 samples, 0.07%)</title><rect x="97.2929%" y="1253" width="0.0651%" height="15" fill="rgb(207,92,16)" fg:x="449934" fg:w="301"/><text x="97.5429%" y="1263.50"></text></g><g><title>`0x7FFDD484A9F2 (122 samples, 0.03%)</title><rect x="97.3625%" y="1253" width="0.0264%" height="15" fill="rgb(216,59,51)" fg:x="450256" fg:w="122"/><text x="97.6125%" y="1263.50"></text></g><g><title>`0x7FFDD485175B (101 samples, 0.02%)</title><rect x="97.3671%" y="1237" width="0.0218%" height="15" fill="rgb(213,80,28)" fg:x="450277" fg:w="101"/><text x="97.6171%" y="1247.50"></text></g><g><title>`0x7FFDD48493FC (3,528 samples, 0.76%)</title><rect x="96.6401%" y="1269" width="0.7629%" height="15" fill="rgb(220,93,7)" fg:x="446915" fg:w="3528"/><text x="96.8901%" y="1279.50"></text></g><g><title>`0x7FFDD48BBF53 (90 samples, 0.02%)</title><rect x="97.4140%" y="1237" width="0.0195%" height="15" fill="rgb(225,24,44)" fg:x="450494" fg:w="90"/><text x="97.6640%" y="1247.50"></text></g><g><title>`0x7FFDD49305C5 (114 samples, 0.02%)</title><rect x="97.4108%" y="1253" width="0.0247%" height="15" fill="rgb(243,74,40)" fg:x="450479" fg:w="114"/><text x="97.6608%" y="1263.50"></text></g><g><title>`0x7FFDD4848E26 (41,973 samples, 9.08%)</title><rect x="90.5820%" y="1285" width="9.0762%" height="15" fill="rgb(228,39,7)" fg:x="418899" fg:w="41973"/><text x="90.8320%" y="1295.50">`0x7FFDD4848E..</text></g><g><title>`0x7FFDD4849438 (10,429 samples, 2.26%)</title><rect x="97.4030%" y="1269" width="2.2551%" height="15" fill="rgb(227,79,8)" fg:x="450443" fg:w="10429"/><text x="97.6530%" y="1279.50">`..</text></g><g><title>`0x7FFDD49A33F4 (10,233 samples, 2.21%)</title><rect x="97.4454%" y="1253" width="2.2128%" height="15" fill="rgb(236,58,11)" fg:x="450639" fg:w="10233"/><text x="97.6954%" y="1263.50">`..</text></g><g><title>`0x7FFDD4848E2D (67 samples, 0.01%)</title><rect x="99.6625%" y="1285" width="0.0145%" height="15" fill="rgb(249,63,35)" fg:x="460892" fg:w="67"/><text x="99.9125%" y="1295.50"></text></g><g><title>all (462,453 samples, 100%)</title><rect x="0.0000%" y="1333" width="100.0000%" height="15" fill="rgb(252,114,16)" fg:x="0" fg:w="462453"/><text x="0.2500%" y="1343.50"></text></g><g><title>`0x7FFDD4848D9C (292,956 samples, 63.35%)</title><rect x="36.6517%" y="1317" width="63.3483%" height="15" fill="rgb(254,151,24)" fg:x="169497" fg:w="292956"/><text x="36.9017%" y="1327.50">`0x7FFDD4848D9C</text></g><g><title>`0x7FFDD378E8E0 (45,867 samples, 9.92%)</title><rect x="90.0818%" y="1301" width="9.9182%" height="15" fill="rgb(253,54,39)" fg:x="416586" fg:w="45867"/><text x="90.3318%" y="1311.50">`0x7FFDD378E8E0</text></g><g><title>`0x7FFDD4848E36 (1,494 samples, 0.32%)</title><rect x="99.6769%" y="1285" width="0.3231%" height="15" fill="rgb(243,25,45)" fg:x="460959" fg:w="1494"/><text x="99.9269%" y="1295.50"></text></g><g><title>`0x7FFDD49A3C94 (1,486 samples, 0.32%)</title><rect x="99.6787%" y="1269" width="0.3213%" height="15" fill="rgb(234,134,9)" fg:x="460967" fg:w="1486"/><text x="99.9287%" y="1279.50"></text></g></svg></svg>